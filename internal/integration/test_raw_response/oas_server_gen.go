// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
	"net/http"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// GetNormalData implements getNormalData operation.
	//
	// GET /normal-data
	GetNormalData(ctx context.Context) (*GetNormalDataOK, error)
}

// RawHandler handles raw response operations described by OpenAPI v3 specification.
type RawHandler interface {
	// GetMixedData implements getMixedData operation.
	//
	// GET /mixed-data
	GetMixedData(ctx context.Context, w http.ResponseWriter) error
	// GetRawData implements getRawData operation.
	//
	// GET /raw-data
	GetRawData(ctx context.Context, w http.ResponseWriter) error
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h  Handler
	rh RawHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, rh RawHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		rh:         rh,
		baseServer: s,
	}, nil
}
