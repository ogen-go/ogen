// Code generated by ogen, DO NOT EDIT.

package api

import (
	"io"
)

type MultipleContentTypesWithParametersOKApplicationJSON struct {
	Data string `json:"data"`
}

// GetData returns the value of Data.
func (s *MultipleContentTypesWithParametersOKApplicationJSON) GetData() string {
	return s.Data
}

// SetData sets the value of Data.
func (s *MultipleContentTypesWithParametersOKApplicationJSON) SetData(val string) {
	s.Data = val
}

func (*MultipleContentTypesWithParametersOKApplicationJSON) multipleContentTypesWithParametersRes() {}

type MultipleContentTypesWithParametersOKApplicationOctetStream struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s MultipleContentTypesWithParametersOKApplicationOctetStream) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*MultipleContentTypesWithParametersOKApplicationOctetStream) multipleContentTypesWithParametersRes() {
}

type MultipleContentTypesWithoutParametersOKApplicationJSON struct {
	Data string `json:"data"`
}

// GetData returns the value of Data.
func (s *MultipleContentTypesWithoutParametersOKApplicationJSON) GetData() string {
	return s.Data
}

// SetData sets the value of Data.
func (s *MultipleContentTypesWithoutParametersOKApplicationJSON) SetData(val string) {
	s.Data = val
}

func (*MultipleContentTypesWithoutParametersOKApplicationJSON) multipleContentTypesWithoutParametersRes() {
}

type MultipleContentTypesWithoutParametersOKApplicationOctetStream struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s MultipleContentTypesWithoutParametersOKApplicationOctetStream) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*MultipleContentTypesWithoutParametersOKApplicationOctetStream) multipleContentTypesWithoutParametersRes() {
}
