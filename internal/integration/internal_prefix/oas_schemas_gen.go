// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type BasicAuth struct {
	Username string
	Password string
}

// GetUsername returns the value of Username.
func (s *BasicAuth) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *BasicAuth) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *BasicAuth) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *BasicAuth) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/Client
type Client struct {
	ID int `json:"id"`
}

// GetID returns the value of ID.
func (s *Client) GetID() int {
	return s.ID
}

// SetID sets the value of ID.
func (s *Client) SetID(val int) {
	s.ID = val
}

type CookieKey struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *CookieKey) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *CookieKey) SetAPIKey(val string) {
	s.APIKey = val
}

// Ref: #/components/schemas/Error
type Error struct {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() int32 {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val int32) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

type HeaderKey struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *HeaderKey) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *HeaderKey) SetAPIKey(val string) {
	s.APIKey = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type QueryKey struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *QueryKey) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *QueryKey) SetAPIKey(val string) {
	s.APIKey = val
}

// Ref: #/components/schemas/Route
type Route struct {
	ID int `json:"id"`
}

// GetID returns the value of ID.
func (s *Route) GetID() int {
	return s.ID
}

// SetID sets the value of ID.
func (s *Route) SetID(val int) {
	s.ID = val
}

// Ref: #/components/schemas/Server
type Server struct {
	ID int `json:"id"`
}

// GetID returns the value of ID.
func (s *Server) GetID() int {
	return s.ID
}

// SetID sets the value of ID.
func (s *Server) SetID(val int) {
	s.ID = val
}

type StatusWebhookOK struct {
	Status OptString `json:"status"`
}

// GetStatus returns the value of Status.
func (s *StatusWebhookOK) GetStatus() OptString {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *StatusWebhookOK) SetStatus(val OptString) {
	s.Status = val
}
