// Code generated by ogen, DO NOT EDIT.

package api

import (
	"io"
)

type AllRequestBodiesApplicationJSON SimpleObject

func (*AllRequestBodiesApplicationJSON) allRequestBodiesReq() {}

type AllRequestBodiesApplicationXWwwFormUrlencoded SimpleObject

func (*AllRequestBodiesApplicationXWwwFormUrlencoded) allRequestBodiesReq() {}

type AllRequestBodiesOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s AllRequestBodiesOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, nil
	}
	return s.Data.Read(p)
}

type AllRequestBodiesOptionalApplicationJSON SimpleObject

func (*AllRequestBodiesOptionalApplicationJSON) allRequestBodiesOptionalReq() {}

type AllRequestBodiesOptionalApplicationXWwwFormUrlencoded SimpleObject

func (*AllRequestBodiesOptionalApplicationXWwwFormUrlencoded) allRequestBodiesOptionalReq() {}

type AllRequestBodiesOptionalOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s AllRequestBodiesOptionalOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, nil
	}
	return s.Data.Read(p)
}

type AllRequestBodiesOptionalReqApplicationOctetStream struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s AllRequestBodiesOptionalReqApplicationOctetStream) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, nil
	}
	return s.Data.Read(p)
}

func (*AllRequestBodiesOptionalReqApplicationOctetStream) allRequestBodiesOptionalReq() {}

type AllRequestBodiesOptionalReqEmptyBody struct{}

func (*AllRequestBodiesOptionalReqEmptyBody) allRequestBodiesOptionalReq() {}

type AllRequestBodiesOptionalReqTextPlain struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s AllRequestBodiesOptionalReqTextPlain) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, nil
	}
	return s.Data.Read(p)
}

func (*AllRequestBodiesOptionalReqTextPlain) allRequestBodiesOptionalReq() {}

type AllRequestBodiesReqApplicationOctetStream struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s AllRequestBodiesReqApplicationOctetStream) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, nil
	}
	return s.Data.Read(p)
}

func (*AllRequestBodiesReqApplicationOctetStream) allRequestBodiesReq() {}

type AllRequestBodiesReqTextPlain struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s AllRequestBodiesReqTextPlain) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, nil
	}
	return s.Data.Read(p)
}

func (*AllRequestBodiesReqTextPlain) allRequestBodiesReq() {}

type Base64RequestOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s Base64RequestOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, nil
	}
	return s.Data.Read(p)
}

type Base64RequestReq struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s Base64RequestReq) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, nil
	}
	return s.Data.Read(p)
}

type MaskContentTypeOptionalReq struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s MaskContentTypeOptionalReq) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, nil
	}
	return s.Data.Read(p)
}

// MaskContentTypeOptionalReqWithContentType wraps MaskContentTypeOptionalReq with Content-Type.
type MaskContentTypeOptionalReqWithContentType struct {
	ContentType string
	Content     MaskContentTypeOptionalReq
}

// GetContentType returns the value of ContentType.
func (s *MaskContentTypeOptionalReqWithContentType) GetContentType() string {
	return s.ContentType
}

// GetContent returns the value of Content.
func (s *MaskContentTypeOptionalReqWithContentType) GetContent() MaskContentTypeOptionalReq {
	return s.Content
}

// SetContentType sets the value of ContentType.
func (s *MaskContentTypeOptionalReqWithContentType) SetContentType(val string) {
	s.ContentType = val
}

// SetContent sets the value of Content.
func (s *MaskContentTypeOptionalReqWithContentType) SetContent(val MaskContentTypeOptionalReq) {
	s.Content = val
}

type MaskContentTypeReq struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s MaskContentTypeReq) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, nil
	}
	return s.Data.Read(p)
}

// MaskContentTypeReqWithContentType wraps MaskContentTypeReq with Content-Type.
type MaskContentTypeReqWithContentType struct {
	ContentType string
	Content     MaskContentTypeReq
}

// GetContentType returns the value of ContentType.
func (s *MaskContentTypeReqWithContentType) GetContentType() string {
	return s.ContentType
}

// GetContent returns the value of Content.
func (s *MaskContentTypeReqWithContentType) GetContent() MaskContentTypeReq {
	return s.Content
}

// SetContentType sets the value of ContentType.
func (s *MaskContentTypeReqWithContentType) SetContentType(val string) {
	s.ContentType = val
}

// SetContent sets the value of Content.
func (s *MaskContentTypeReqWithContentType) SetContent(val MaskContentTypeReq) {
	s.Content = val
}

// Ref: #/components/schemas/MaskResponse
type MaskResponse struct {
	ContentType string `json:"contentType"`
	Content     string `json:"content"`
}

// GetContentType returns the value of ContentType.
func (s *MaskResponse) GetContentType() string {
	return s.ContentType
}

// GetContent returns the value of Content.
func (s *MaskResponse) GetContent() string {
	return s.Content
}

// SetContentType sets the value of ContentType.
func (s *MaskResponse) SetContentType(val string) {
	s.ContentType = val
}

// SetContent sets the value of Content.
func (s *MaskResponse) SetContent(val string) {
	s.Content = val
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/SimpleObject
type SimpleObject struct {
	Name string `json:"name"`
	Age  OptInt `json:"age"`
}

// GetName returns the value of Name.
func (s *SimpleObject) GetName() string {
	return s.Name
}

// GetAge returns the value of Age.
func (s *SimpleObject) GetAge() OptInt {
	return s.Age
}

// SetName sets the value of Name.
func (s *SimpleObject) SetName(val string) {
	s.Name = val
}

// SetAge sets the value of Age.
func (s *SimpleObject) SetAge(val OptInt) {
	s.Age = val
}

// Ref: #/components/schemas/SimpleObject
type SimpleObjectMultipart struct {
	Name string `json:"name"`
	Age  OptInt `json:"age"`
}

// GetName returns the value of Name.
func (s *SimpleObjectMultipart) GetName() string {
	return s.Name
}

// GetAge returns the value of Age.
func (s *SimpleObjectMultipart) GetAge() OptInt {
	return s.Age
}

// SetName sets the value of Name.
func (s *SimpleObjectMultipart) SetName(val string) {
	s.Name = val
}

// SetAge sets the value of Age.
func (s *SimpleObjectMultipart) SetAge(val OptInt) {
	s.Age = val
}

func (*SimpleObjectMultipart) allRequestBodiesOptionalReq() {}
func (*SimpleObjectMultipart) allRequestBodiesReq()         {}
