// Code generated by ogen, DO NOT EDIT.

package api

import (
	"reflect"

	"github.com/ogen-go/ogen/ogenreflect"
)

// API is generated API metadata.
var API = api{
	Paths: paths{
		FooGet: ogenreflect.RuntimeOperation{
			Name: "FooGet",
			ID:   "",
			Types: ogenreflect.OperationTypes{
				Responses: ogenreflect.ResponsesType{
					Type:            reflect.TypeOf(new(string)).Elem(),
					Implementations: nil,
					PatternMap: map[string]ogenreflect.ResponseType{
						"200": ogenreflect.ResponseType{
							Headers: map[string]ogenreflect.ParameterType{},
							Contents: ogenreflect.Contents{
								"application/json": reflect.TypeOf(new(string)).Elem(),
							},
						},
					},
				},
			},
		},
	},
}

type api struct {
	Paths paths
}

type paths struct {
	FooGet ogenreflect.RuntimeOperation
}

func getPaths() paths {
	return API.Paths
}

// FindByName finds operation by ogen name.
func (p paths) FindByName(name string) (op ogenreflect.RuntimeOperation, _ bool) {
	switch name {
	case "FooGet":
		return p.FooGet, true
	default:
		return op, false
	}
}

// FindByOperationID finds operation by operationId.
func (p paths) FindByOperationID(operationID string) (op ogenreflect.RuntimeOperation, _ bool) {
	switch operationID {
	default:
		return op, false
	}
}
