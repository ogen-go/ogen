// Code generated by ogen, DO NOT EDIT.

package api

import (
	"net/netip"
	"net/url"
	"time"

	"github.com/go-faster/jx"
	"github.com/google/uuid"
)

// Error Response Schema.
type Error struct {
	Code   OptInt32  `json:"code,omitempty"`
	Status OptString `json:"status,omitempty"`
}

// GetCode returns the value of Code.
func (s Error) GetCode() OptInt32 {
	return s.Code
}

// GetStatus returns the value of Status.
func (s Error) GetStatus() OptString {
	return s.Status
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val OptInt32) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *Error) SetStatus(val OptString) {
	s.Status = val
}

// NewNilBool returns new NilBool with value set to v.
func NewNilBool(v bool) NilBool {
	return NilBool{
		Value: v,
	}
}

// NilBool is nullable bool.
type NilBool struct {
	Value bool
	Null  bool
}

// SetTo sets value to v.
func (o *NilBool) SetTo(v bool) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilBool) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilDate returns new NilDate with value set to v.
func NewNilDate(v time.Time) NilDate {
	return NilDate{
		Value: v,
	}
}

// NilDate is nullable time.Time.
type NilDate struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilDate) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilDate) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilDate) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDate) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilDateTime returns new NilDateTime with value set to v.
func NewNilDateTime(v time.Time) NilDateTime {
	return NilDateTime{
		Value: v,
	}
}

// NilDateTime is nullable time.Time.
type NilDateTime struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilDateTime) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilDateTime) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilDateTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilDuration returns new NilDuration with value set to v.
func NewNilDuration(v time.Duration) NilDuration {
	return NilDuration{
		Value: v,
	}
}

// NilDuration is nullable time.Duration.
type NilDuration struct {
	Value time.Duration
	Null  bool
}

// SetTo sets value to v.
func (o *NilDuration) SetTo(v time.Duration) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilDuration) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilDuration) Get() (v time.Duration, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDuration) Or(d time.Duration) time.Duration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilFloat32 returns new NilFloat32 with value set to v.
func NewNilFloat32(v float32) NilFloat32 {
	return NilFloat32{
		Value: v,
	}
}

// NilFloat32 is nullable float32.
type NilFloat32 struct {
	Value float32
	Null  bool
}

// SetTo sets value to v.
func (o *NilFloat32) SetTo(v float32) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilFloat32) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilFloat32) Get() (v float32, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilFloat32) Or(d float32) float32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilFloat64 returns new NilFloat64 with value set to v.
func NewNilFloat64(v float64) NilFloat64 {
	return NilFloat64{
		Value: v,
	}
}

// NilFloat64 is nullable float64.
type NilFloat64 struct {
	Value float64
	Null  bool
}

// SetTo sets value to v.
func (o *NilFloat64) SetTo(v float64) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilFloat64) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilIP returns new NilIP with value set to v.
func NewNilIP(v netip.Addr) NilIP {
	return NilIP{
		Value: v,
	}
}

// NilIP is nullable netip.Addr.
type NilIP struct {
	Value netip.Addr
	Null  bool
}

// SetTo sets value to v.
func (o *NilIP) SetTo(v netip.Addr) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilIP) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilIP) Get() (v netip.Addr, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilIP) Or(d netip.Addr) netip.Addr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilIPv4 returns new NilIPv4 with value set to v.
func NewNilIPv4(v netip.Addr) NilIPv4 {
	return NilIPv4{
		Value: v,
	}
}

// NilIPv4 is nullable netip.Addr.
type NilIPv4 struct {
	Value netip.Addr
	Null  bool
}

// SetTo sets value to v.
func (o *NilIPv4) SetTo(v netip.Addr) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilIPv4) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilIPv4) Get() (v netip.Addr, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilIPv4) Or(d netip.Addr) netip.Addr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilIPv6 returns new NilIPv6 with value set to v.
func NewNilIPv6(v netip.Addr) NilIPv6 {
	return NilIPv6{
		Value: v,
	}
}

// NilIPv6 is nullable netip.Addr.
type NilIPv6 struct {
	Value netip.Addr
	Null  bool
}

// SetTo sets value to v.
func (o *NilIPv6) SetTo(v netip.Addr) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilIPv6) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilIPv6) Get() (v netip.Addr, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilIPv6) Or(d netip.Addr) netip.Addr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilInt returns new NilInt with value set to v.
func NewNilInt(v int) NilInt {
	return NilInt{
		Value: v,
	}
}

// NilInt is nullable int.
type NilInt struct {
	Value int
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt) SetTo(v int) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilInt) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilInt32 returns new NilInt32 with value set to v.
func NewNilInt32(v int32) NilInt32 {
	return NilInt32{
		Value: v,
	}
}

// NilInt32 is nullable int32.
type NilInt32 struct {
	Value int32
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt32) SetTo(v int32) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilInt32) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilInt32) Get() (v int32, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilInt64 returns new NilInt64 with value set to v.
func NewNilInt64(v int64) NilInt64 {
	return NilInt64{
		Value: v,
	}
}

// NilInt64 is nullable int64.
type NilInt64 struct {
	Value int64
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt64) SetTo(v int64) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilInt64) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilInt64) Get() (v int64, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilStringInt32 returns new NilStringInt32 with value set to v.
func NewNilStringInt32(v int32) NilStringInt32 {
	return NilStringInt32{
		Value: v,
	}
}

// NilStringInt32 is nullable int32.
type NilStringInt32 struct {
	Value int32
	Null  bool
}

// SetTo sets value to v.
func (o *NilStringInt32) SetTo(v int32) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilStringInt32) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilStringInt32) Get() (v int32, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilStringInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilStringInt64 returns new NilStringInt64 with value set to v.
func NewNilStringInt64(v int64) NilStringInt64 {
	return NilStringInt64{
		Value: v,
	}
}

// NilStringInt64 is nullable int64.
type NilStringInt64 struct {
	Value int64
	Null  bool
}

// SetTo sets value to v.
func (o *NilStringInt64) SetTo(v int64) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilStringInt64) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilStringInt64) Get() (v int64, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilStringInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilStringUnixMicro returns new NilStringUnixMicro with value set to v.
func NewNilStringUnixMicro(v time.Time) NilStringUnixMicro {
	return NilStringUnixMicro{
		Value: v,
	}
}

// NilStringUnixMicro is nullable time.Time.
type NilStringUnixMicro struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilStringUnixMicro) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilStringUnixMicro) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilStringUnixMicro) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilStringUnixMicro) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilStringUnixMilli returns new NilStringUnixMilli with value set to v.
func NewNilStringUnixMilli(v time.Time) NilStringUnixMilli {
	return NilStringUnixMilli{
		Value: v,
	}
}

// NilStringUnixMilli is nullable time.Time.
type NilStringUnixMilli struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilStringUnixMilli) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilStringUnixMilli) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilStringUnixMilli) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilStringUnixMilli) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilStringUnixNano returns new NilStringUnixNano with value set to v.
func NewNilStringUnixNano(v time.Time) NilStringUnixNano {
	return NilStringUnixNano{
		Value: v,
	}
}

// NilStringUnixNano is nullable time.Time.
type NilStringUnixNano struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilStringUnixNano) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilStringUnixNano) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilStringUnixNano) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilStringUnixNano) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilStringUnixSeconds returns new NilStringUnixSeconds with value set to v.
func NewNilStringUnixSeconds(v time.Time) NilStringUnixSeconds {
	return NilStringUnixSeconds{
		Value: v,
	}
}

// NilStringUnixSeconds is nullable time.Time.
type NilStringUnixSeconds struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilStringUnixSeconds) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilStringUnixSeconds) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilStringUnixSeconds) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilStringUnixSeconds) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilTime returns new NilTime with value set to v.
func NewNilTime(v time.Time) NilTime {
	return NilTime{
		Value: v,
	}
}

// NilTime is nullable time.Time.
type NilTime struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilTime) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilTime) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilURI returns new NilURI with value set to v.
func NewNilURI(v url.URL) NilURI {
	return NilURI{
		Value: v,
	}
}

// NilURI is nullable url.URL.
type NilURI struct {
	Value url.URL
	Null  bool
}

// SetTo sets value to v.
func (o *NilURI) SetTo(v url.URL) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilURI) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilURI) Get() (v url.URL, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUUID returns new NilUUID with value set to v.
func NewNilUUID(v uuid.UUID) NilUUID {
	return NilUUID{
		Value: v,
	}
}

// NilUUID is nullable uuid.UUID.
type NilUUID struct {
	Value uuid.UUID
	Null  bool
}

// SetTo sets value to v.
func (o *NilUUID) SetTo(v uuid.UUID) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilUUID) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilUUID) Get() (v uuid.UUID, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUint returns new NilUint with value set to v.
func NewNilUint(v uint) NilUint {
	return NilUint{
		Value: v,
	}
}

// NilUint is nullable uint.
type NilUint struct {
	Value uint
	Null  bool
}

// SetTo sets value to v.
func (o *NilUint) SetTo(v uint) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilUint) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilUint) Get() (v uint, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUint) Or(d uint) uint {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUint32 returns new NilUint32 with value set to v.
func NewNilUint32(v uint32) NilUint32 {
	return NilUint32{
		Value: v,
	}
}

// NilUint32 is nullable uint32.
type NilUint32 struct {
	Value uint32
	Null  bool
}

// SetTo sets value to v.
func (o *NilUint32) SetTo(v uint32) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilUint32) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilUint32) Get() (v uint32, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUint32) Or(d uint32) uint32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUint64 returns new NilUint64 with value set to v.
func NewNilUint64(v uint64) NilUint64 {
	return NilUint64{
		Value: v,
	}
}

// NilUint64 is nullable uint64.
type NilUint64 struct {
	Value uint64
	Null  bool
}

// SetTo sets value to v.
func (o *NilUint64) SetTo(v uint64) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilUint64) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilUint64) Get() (v uint64, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUint64) Or(d uint64) uint64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUnixMicro returns new NilUnixMicro with value set to v.
func NewNilUnixMicro(v time.Time) NilUnixMicro {
	return NilUnixMicro{
		Value: v,
	}
}

// NilUnixMicro is nullable time.Time.
type NilUnixMicro struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilUnixMicro) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilUnixMicro) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilUnixMicro) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUnixMicro) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUnixMilli returns new NilUnixMilli with value set to v.
func NewNilUnixMilli(v time.Time) NilUnixMilli {
	return NilUnixMilli{
		Value: v,
	}
}

// NilUnixMilli is nullable time.Time.
type NilUnixMilli struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilUnixMilli) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilUnixMilli) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilUnixMilli) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUnixMilli) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUnixNano returns new NilUnixNano with value set to v.
func NewNilUnixNano(v time.Time) NilUnixNano {
	return NilUnixNano{
		Value: v,
	}
}

// NilUnixNano is nullable time.Time.
type NilUnixNano struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilUnixNano) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilUnixNano) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilUnixNano) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUnixNano) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUnixSeconds returns new NilUnixSeconds with value set to v.
func NewNilUnixSeconds(v time.Time) NilUnixSeconds {
	return NilUnixSeconds{
		Value: v,
	}
}

// NilUnixSeconds is nullable time.Time.
type NilUnixSeconds struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilUnixSeconds) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilUnixSeconds) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilUnixSeconds) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUnixSeconds) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDate returns new OptDate with value set to v.
func NewOptDate(v time.Time) OptDate {
	return OptDate{
		Value: v,
		Set:   true,
	}
}

// OptDate is optional time.Time.
type OptDate struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDate was set.
func (o OptDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDate) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDate) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDate) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDate) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDuration returns new OptDuration with value set to v.
func NewOptDuration(v time.Duration) OptDuration {
	return OptDuration{
		Value: v,
		Set:   true,
	}
}

// OptDuration is optional time.Duration.
type OptDuration struct {
	Value time.Duration
	Set   bool
}

// IsSet returns true if OptDuration was set.
func (o OptDuration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDuration) Reset() {
	var v time.Duration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDuration) SetTo(v time.Duration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDuration) Get() (v time.Duration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDuration) Or(d time.Duration) time.Duration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat32 returns new OptFloat32 with value set to v.
func NewOptFloat32(v float32) OptFloat32 {
	return OptFloat32{
		Value: v,
		Set:   true,
	}
}

// OptFloat32 is optional float32.
type OptFloat32 struct {
	Value float32
	Set   bool
}

// IsSet returns true if OptFloat32 was set.
func (o OptFloat32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat32) Reset() {
	var v float32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat32) SetTo(v float32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat32) Get() (v float32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat32) Or(d float32) float32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptIP returns new OptIP with value set to v.
func NewOptIP(v netip.Addr) OptIP {
	return OptIP{
		Value: v,
		Set:   true,
	}
}

// OptIP is optional netip.Addr.
type OptIP struct {
	Value netip.Addr
	Set   bool
}

// IsSet returns true if OptIP was set.
func (o OptIP) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIP) Reset() {
	var v netip.Addr
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIP) SetTo(v netip.Addr) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIP) Get() (v netip.Addr, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptIP) Or(d netip.Addr) netip.Addr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptIPv4 returns new OptIPv4 with value set to v.
func NewOptIPv4(v netip.Addr) OptIPv4 {
	return OptIPv4{
		Value: v,
		Set:   true,
	}
}

// OptIPv4 is optional netip.Addr.
type OptIPv4 struct {
	Value netip.Addr
	Set   bool
}

// IsSet returns true if OptIPv4 was set.
func (o OptIPv4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIPv4) Reset() {
	var v netip.Addr
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIPv4) SetTo(v netip.Addr) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIPv4) Get() (v netip.Addr, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptIPv4) Or(d netip.Addr) netip.Addr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptIPv6 returns new OptIPv6 with value set to v.
func NewOptIPv6(v netip.Addr) OptIPv6 {
	return OptIPv6{
		Value: v,
		Set:   true,
	}
}

// OptIPv6 is optional netip.Addr.
type OptIPv6 struct {
	Value netip.Addr
	Set   bool
}

// IsSet returns true if OptIPv6 was set.
func (o OptIPv6) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIPv6) Reset() {
	var v netip.Addr
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIPv6) SetTo(v netip.Addr) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIPv6) Get() (v netip.Addr, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptIPv6) Or(d netip.Addr) netip.Addr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilByte returns new OptNilByte with value set to v.
func NewOptNilByte(v []byte) OptNilByte {
	return OptNilByte{
		Value: v,
		Set:   true,
	}
}

// OptNilByte is optional nullable []byte.
type OptNilByte struct {
	Value []byte
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilByte was set.
func (o OptNilByte) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilByte) Reset() {
	var v []byte
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilByte) SetTo(v []byte) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilByte) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilByte) Get() (v []byte, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilByte) Or(d []byte) []byte {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDate returns new OptNilDate with value set to v.
func NewOptNilDate(v time.Time) OptNilDate {
	return OptNilDate{
		Value: v,
		Set:   true,
	}
}

// OptNilDate is optional nullable time.Time.
type OptNilDate struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDate was set.
func (o OptNilDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDate) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDate) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDate) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDate) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDate) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDateTime returns new OptNilDateTime with value set to v.
func NewOptNilDateTime(v time.Time) OptNilDateTime {
	return OptNilDateTime{
		Value: v,
		Set:   true,
	}
}

// OptNilDateTime is optional nullable time.Time.
type OptNilDateTime struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDateTime was set.
func (o OptNilDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDateTime) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDateTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDuration returns new OptNilDuration with value set to v.
func NewOptNilDuration(v time.Duration) OptNilDuration {
	return OptNilDuration{
		Value: v,
		Set:   true,
	}
}

// OptNilDuration is optional nullable time.Duration.
type OptNilDuration struct {
	Value time.Duration
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDuration was set.
func (o OptNilDuration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDuration) Reset() {
	var v time.Duration
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDuration) SetTo(v time.Duration) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDuration) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDuration) Get() (v time.Duration, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDuration) Or(d time.Duration) time.Duration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat32 returns new OptNilFloat32 with value set to v.
func NewOptNilFloat32(v float32) OptNilFloat32 {
	return OptNilFloat32{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat32 is optional nullable float32.
type OptNilFloat32 struct {
	Value float32
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat32 was set.
func (o OptNilFloat32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat32) Reset() {
	var v float32
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat32) SetTo(v float32) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFloat32) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat32) Get() (v float32, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat32) Or(d float32) float32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64 returns new OptNilFloat64 with value set to v.
func NewOptNilFloat64(v float64) OptNilFloat64 {
	return OptNilFloat64{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64 is optional nullable float64.
type OptNilFloat64 struct {
	Value float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64 was set.
func (o OptNilFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64) SetTo(v float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFloat64) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilIP returns new OptNilIP with value set to v.
func NewOptNilIP(v netip.Addr) OptNilIP {
	return OptNilIP{
		Value: v,
		Set:   true,
	}
}

// OptNilIP is optional nullable netip.Addr.
type OptNilIP struct {
	Value netip.Addr
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilIP was set.
func (o OptNilIP) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilIP) Reset() {
	var v netip.Addr
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilIP) SetTo(v netip.Addr) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilIP) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilIP) Get() (v netip.Addr, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilIP) Or(d netip.Addr) netip.Addr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilIPv4 returns new OptNilIPv4 with value set to v.
func NewOptNilIPv4(v netip.Addr) OptNilIPv4 {
	return OptNilIPv4{
		Value: v,
		Set:   true,
	}
}

// OptNilIPv4 is optional nullable netip.Addr.
type OptNilIPv4 struct {
	Value netip.Addr
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilIPv4 was set.
func (o OptNilIPv4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilIPv4) Reset() {
	var v netip.Addr
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilIPv4) SetTo(v netip.Addr) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilIPv4) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilIPv4) Get() (v netip.Addr, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilIPv4) Or(d netip.Addr) netip.Addr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilIPv6 returns new OptNilIPv6 with value set to v.
func NewOptNilIPv6(v netip.Addr) OptNilIPv6 {
	return OptNilIPv6{
		Value: v,
		Set:   true,
	}
}

// OptNilIPv6 is optional nullable netip.Addr.
type OptNilIPv6 struct {
	Value netip.Addr
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilIPv6 was set.
func (o OptNilIPv6) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilIPv6) Reset() {
	var v netip.Addr
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilIPv6) SetTo(v netip.Addr) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilIPv6) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilIPv6) Get() (v netip.Addr, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilIPv6) Or(d netip.Addr) netip.Addr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt32 returns new OptNilInt32 with value set to v.
func NewOptNilInt32(v int32) OptNilInt32 {
	return OptNilInt32{
		Value: v,
		Set:   true,
	}
}

// OptNilInt32 is optional nullable int32.
type OptNilInt32 struct {
	Value int32
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt32 was set.
func (o OptNilInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt32) SetTo(v int32) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt32) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt32) Get() (v int32, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt64 returns new OptNilInt64 with value set to v.
func NewOptNilInt64(v int64) OptNilInt64 {
	return OptNilInt64{
		Value: v,
		Set:   true,
	}
}

// OptNilInt64 is optional nullable int64.
type OptNilInt64 struct {
	Value int64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt64 was set.
func (o OptNilInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt64) SetTo(v int64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt64) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt64) Get() (v int64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStringInt32 returns new OptNilStringInt32 with value set to v.
func NewOptNilStringInt32(v int32) OptNilStringInt32 {
	return OptNilStringInt32{
		Value: v,
		Set:   true,
	}
}

// OptNilStringInt32 is optional nullable int32.
type OptNilStringInt32 struct {
	Value int32
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStringInt32 was set.
func (o OptNilStringInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStringInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStringInt32) SetTo(v int32) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStringInt32) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStringInt32) Get() (v int32, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStringInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStringInt64 returns new OptNilStringInt64 with value set to v.
func NewOptNilStringInt64(v int64) OptNilStringInt64 {
	return OptNilStringInt64{
		Value: v,
		Set:   true,
	}
}

// OptNilStringInt64 is optional nullable int64.
type OptNilStringInt64 struct {
	Value int64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStringInt64 was set.
func (o OptNilStringInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStringInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStringInt64) SetTo(v int64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStringInt64) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStringInt64) Get() (v int64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStringInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStringUnixMicro returns new OptNilStringUnixMicro with value set to v.
func NewOptNilStringUnixMicro(v time.Time) OptNilStringUnixMicro {
	return OptNilStringUnixMicro{
		Value: v,
		Set:   true,
	}
}

// OptNilStringUnixMicro is optional nullable time.Time.
type OptNilStringUnixMicro struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStringUnixMicro was set.
func (o OptNilStringUnixMicro) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStringUnixMicro) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStringUnixMicro) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStringUnixMicro) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStringUnixMicro) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStringUnixMicro) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStringUnixMilli returns new OptNilStringUnixMilli with value set to v.
func NewOptNilStringUnixMilli(v time.Time) OptNilStringUnixMilli {
	return OptNilStringUnixMilli{
		Value: v,
		Set:   true,
	}
}

// OptNilStringUnixMilli is optional nullable time.Time.
type OptNilStringUnixMilli struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStringUnixMilli was set.
func (o OptNilStringUnixMilli) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStringUnixMilli) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStringUnixMilli) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStringUnixMilli) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStringUnixMilli) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStringUnixMilli) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStringUnixNano returns new OptNilStringUnixNano with value set to v.
func NewOptNilStringUnixNano(v time.Time) OptNilStringUnixNano {
	return OptNilStringUnixNano{
		Value: v,
		Set:   true,
	}
}

// OptNilStringUnixNano is optional nullable time.Time.
type OptNilStringUnixNano struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStringUnixNano was set.
func (o OptNilStringUnixNano) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStringUnixNano) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStringUnixNano) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStringUnixNano) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStringUnixNano) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStringUnixNano) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStringUnixSeconds returns new OptNilStringUnixSeconds with value set to v.
func NewOptNilStringUnixSeconds(v time.Time) OptNilStringUnixSeconds {
	return OptNilStringUnixSeconds{
		Value: v,
		Set:   true,
	}
}

// OptNilStringUnixSeconds is optional nullable time.Time.
type OptNilStringUnixSeconds struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStringUnixSeconds was set.
func (o OptNilStringUnixSeconds) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStringUnixSeconds) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStringUnixSeconds) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStringUnixSeconds) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStringUnixSeconds) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStringUnixSeconds) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTime returns new OptNilTime with value set to v.
func NewOptNilTime(v time.Time) OptNilTime {
	return OptNilTime{
		Value: v,
		Set:   true,
	}
}

// OptNilTime is optional nullable time.Time.
type OptNilTime struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTime was set.
func (o OptNilTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTime) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTime) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilURI returns new OptNilURI with value set to v.
func NewOptNilURI(v url.URL) OptNilURI {
	return OptNilURI{
		Value: v,
		Set:   true,
	}
}

// OptNilURI is optional nullable url.URL.
type OptNilURI struct {
	Value url.URL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilURI was set.
func (o OptNilURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilURI) SetTo(v url.URL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilURI) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilURI) Get() (v url.URL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUUID returns new OptNilUUID with value set to v.
func NewOptNilUUID(v uuid.UUID) OptNilUUID {
	return OptNilUUID{
		Value: v,
		Set:   true,
	}
}

// OptNilUUID is optional nullable uuid.UUID.
type OptNilUUID struct {
	Value uuid.UUID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUUID was set.
func (o OptNilUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUUID) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUUID) Get() (v uuid.UUID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUint returns new OptNilUint with value set to v.
func NewOptNilUint(v uint) OptNilUint {
	return OptNilUint{
		Value: v,
		Set:   true,
	}
}

// OptNilUint is optional nullable uint.
type OptNilUint struct {
	Value uint
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUint was set.
func (o OptNilUint) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUint) Reset() {
	var v uint
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUint) SetTo(v uint) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUint) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUint) Get() (v uint, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUint) Or(d uint) uint {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUint32 returns new OptNilUint32 with value set to v.
func NewOptNilUint32(v uint32) OptNilUint32 {
	return OptNilUint32{
		Value: v,
		Set:   true,
	}
}

// OptNilUint32 is optional nullable uint32.
type OptNilUint32 struct {
	Value uint32
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUint32 was set.
func (o OptNilUint32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUint32) Reset() {
	var v uint32
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUint32) SetTo(v uint32) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUint32) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUint32) Get() (v uint32, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUint32) Or(d uint32) uint32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUint64 returns new OptNilUint64 with value set to v.
func NewOptNilUint64(v uint64) OptNilUint64 {
	return OptNilUint64{
		Value: v,
		Set:   true,
	}
}

// OptNilUint64 is optional nullable uint64.
type OptNilUint64 struct {
	Value uint64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUint64 was set.
func (o OptNilUint64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUint64) Reset() {
	var v uint64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUint64) SetTo(v uint64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUint64) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUint64) Get() (v uint64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUint64) Or(d uint64) uint64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUnixMicro returns new OptNilUnixMicro with value set to v.
func NewOptNilUnixMicro(v time.Time) OptNilUnixMicro {
	return OptNilUnixMicro{
		Value: v,
		Set:   true,
	}
}

// OptNilUnixMicro is optional nullable time.Time.
type OptNilUnixMicro struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUnixMicro was set.
func (o OptNilUnixMicro) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUnixMicro) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUnixMicro) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUnixMicro) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUnixMicro) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUnixMicro) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUnixMilli returns new OptNilUnixMilli with value set to v.
func NewOptNilUnixMilli(v time.Time) OptNilUnixMilli {
	return OptNilUnixMilli{
		Value: v,
		Set:   true,
	}
}

// OptNilUnixMilli is optional nullable time.Time.
type OptNilUnixMilli struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUnixMilli was set.
func (o OptNilUnixMilli) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUnixMilli) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUnixMilli) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUnixMilli) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUnixMilli) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUnixMilli) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUnixNano returns new OptNilUnixNano with value set to v.
func NewOptNilUnixNano(v time.Time) OptNilUnixNano {
	return OptNilUnixNano{
		Value: v,
		Set:   true,
	}
}

// OptNilUnixNano is optional nullable time.Time.
type OptNilUnixNano struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUnixNano was set.
func (o OptNilUnixNano) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUnixNano) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUnixNano) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUnixNano) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUnixNano) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUnixNano) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUnixSeconds returns new OptNilUnixSeconds with value set to v.
func NewOptNilUnixSeconds(v time.Time) OptNilUnixSeconds {
	return OptNilUnixSeconds{
		Value: v,
		Set:   true,
	}
}

// OptNilUnixSeconds is optional nullable time.Time.
type OptNilUnixSeconds struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUnixSeconds was set.
func (o OptNilUnixSeconds) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUnixSeconds) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUnixSeconds) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUnixSeconds) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUnixSeconds) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUnixSeconds) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNull returns new OptNull with value set to v.
func NewOptNull(v struct{}) OptNull {
	return OptNull{
		Value: v,
		Set:   true,
	}
}

// OptNull is optional struct{}.
type OptNull struct {
	Value struct{}
	Set   bool
}

// IsSet returns true if OptNull was set.
func (o OptNull) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNull) Reset() {
	var v struct{}
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNull) SetTo(v struct{}) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNull) Get() (v struct{}, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNull) Or(d struct{}) struct{} {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStringInt32 returns new OptStringInt32 with value set to v.
func NewOptStringInt32(v int32) OptStringInt32 {
	return OptStringInt32{
		Value: v,
		Set:   true,
	}
}

// OptStringInt32 is optional int32.
type OptStringInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptStringInt32 was set.
func (o OptStringInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStringInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStringInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStringInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStringInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStringInt64 returns new OptStringInt64 with value set to v.
func NewOptStringInt64(v int64) OptStringInt64 {
	return OptStringInt64{
		Value: v,
		Set:   true,
	}
}

// OptStringInt64 is optional int64.
type OptStringInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptStringInt64 was set.
func (o OptStringInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStringInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStringInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStringInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStringInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStringUnixMicro returns new OptStringUnixMicro with value set to v.
func NewOptStringUnixMicro(v time.Time) OptStringUnixMicro {
	return OptStringUnixMicro{
		Value: v,
		Set:   true,
	}
}

// OptStringUnixMicro is optional time.Time.
type OptStringUnixMicro struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptStringUnixMicro was set.
func (o OptStringUnixMicro) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStringUnixMicro) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStringUnixMicro) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStringUnixMicro) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStringUnixMicro) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStringUnixMilli returns new OptStringUnixMilli with value set to v.
func NewOptStringUnixMilli(v time.Time) OptStringUnixMilli {
	return OptStringUnixMilli{
		Value: v,
		Set:   true,
	}
}

// OptStringUnixMilli is optional time.Time.
type OptStringUnixMilli struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptStringUnixMilli was set.
func (o OptStringUnixMilli) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStringUnixMilli) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStringUnixMilli) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStringUnixMilli) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStringUnixMilli) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStringUnixNano returns new OptStringUnixNano with value set to v.
func NewOptStringUnixNano(v time.Time) OptStringUnixNano {
	return OptStringUnixNano{
		Value: v,
		Set:   true,
	}
}

// OptStringUnixNano is optional time.Time.
type OptStringUnixNano struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptStringUnixNano was set.
func (o OptStringUnixNano) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStringUnixNano) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStringUnixNano) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStringUnixNano) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStringUnixNano) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStringUnixSeconds returns new OptStringUnixSeconds with value set to v.
func NewOptStringUnixSeconds(v time.Time) OptStringUnixSeconds {
	return OptStringUnixSeconds{
		Value: v,
		Set:   true,
	}
}

// OptStringUnixSeconds is optional time.Time.
type OptStringUnixSeconds struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptStringUnixSeconds was set.
func (o OptStringUnixSeconds) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStringUnixSeconds) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStringUnixSeconds) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStringUnixSeconds) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStringUnixSeconds) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTestRequestFormatTestReq returns new OptTestRequestFormatTestReq with value set to v.
func NewOptTestRequestFormatTestReq(v TestRequestFormatTestReq) OptTestRequestFormatTestReq {
	return OptTestRequestFormatTestReq{
		Value: v,
		Set:   true,
	}
}

// OptTestRequestFormatTestReq is optional TestRequestFormatTestReq.
type OptTestRequestFormatTestReq struct {
	Value TestRequestFormatTestReq
	Set   bool
}

// IsSet returns true if OptTestRequestFormatTestReq was set.
func (o OptTestRequestFormatTestReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTestRequestFormatTestReq) Reset() {
	var v TestRequestFormatTestReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTestRequestFormatTestReq) SetTo(v TestRequestFormatTestReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTestRequestFormatTestReq) Get() (v TestRequestFormatTestReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTestRequestFormatTestReq) Or(d TestRequestFormatTestReq) TestRequestFormatTestReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTime returns new OptTime with value set to v.
func NewOptTime(v time.Time) OptTime {
	return OptTime{
		Value: v,
		Set:   true,
	}
}

// OptTime is optional time.Time.
type OptTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptTime was set.
func (o OptTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUint returns new OptUint with value set to v.
func NewOptUint(v uint) OptUint {
	return OptUint{
		Value: v,
		Set:   true,
	}
}

// OptUint is optional uint.
type OptUint struct {
	Value uint
	Set   bool
}

// IsSet returns true if OptUint was set.
func (o OptUint) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUint) Reset() {
	var v uint
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUint) SetTo(v uint) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUint) Get() (v uint, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUint) Or(d uint) uint {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUint32 returns new OptUint32 with value set to v.
func NewOptUint32(v uint32) OptUint32 {
	return OptUint32{
		Value: v,
		Set:   true,
	}
}

// OptUint32 is optional uint32.
type OptUint32 struct {
	Value uint32
	Set   bool
}

// IsSet returns true if OptUint32 was set.
func (o OptUint32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUint32) Reset() {
	var v uint32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUint32) SetTo(v uint32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUint32) Get() (v uint32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUint32) Or(d uint32) uint32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUint64 returns new OptUint64 with value set to v.
func NewOptUint64(v uint64) OptUint64 {
	return OptUint64{
		Value: v,
		Set:   true,
	}
}

// OptUint64 is optional uint64.
type OptUint64 struct {
	Value uint64
	Set   bool
}

// IsSet returns true if OptUint64 was set.
func (o OptUint64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUint64) Reset() {
	var v uint64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUint64) SetTo(v uint64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUint64) Get() (v uint64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUint64) Or(d uint64) uint64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUnixMicro returns new OptUnixMicro with value set to v.
func NewOptUnixMicro(v time.Time) OptUnixMicro {
	return OptUnixMicro{
		Value: v,
		Set:   true,
	}
}

// OptUnixMicro is optional time.Time.
type OptUnixMicro struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptUnixMicro was set.
func (o OptUnixMicro) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUnixMicro) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUnixMicro) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUnixMicro) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUnixMicro) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUnixMilli returns new OptUnixMilli with value set to v.
func NewOptUnixMilli(v time.Time) OptUnixMilli {
	return OptUnixMilli{
		Value: v,
		Set:   true,
	}
}

// OptUnixMilli is optional time.Time.
type OptUnixMilli struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptUnixMilli was set.
func (o OptUnixMilli) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUnixMilli) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUnixMilli) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUnixMilli) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUnixMilli) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUnixNano returns new OptUnixNano with value set to v.
func NewOptUnixNano(v time.Time) OptUnixNano {
	return OptUnixNano{
		Value: v,
		Set:   true,
	}
}

// OptUnixNano is optional time.Time.
type OptUnixNano struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptUnixNano was set.
func (o OptUnixNano) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUnixNano) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUnixNano) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUnixNano) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUnixNano) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUnixSeconds returns new OptUnixSeconds with value set to v.
func NewOptUnixSeconds(v time.Time) OptUnixSeconds {
	return OptUnixSeconds{
		Value: v,
		Set:   true,
	}
}

// OptUnixSeconds is optional time.Time.
type OptUnixSeconds struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptUnixSeconds was set.
func (o OptUnixSeconds) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUnixSeconds) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUnixSeconds) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUnixSeconds) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUnixSeconds) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type TestRequestEmptyStructReq struct{}

type TestRequestFormatTestReq struct {
	RequiredAny                                jx.Raw               `json:"required_any"`
	RequiredArrayAny                           []jx.Raw             `json:"required_array_any"`
	RequiredArrayBoolean                       []bool               `json:"required_array_boolean"`
	RequiredArrayInteger                       []int                `json:"required_array_integer"`
	RequiredArrayIntegerInt32                  []int32              `json:"required_array_integer_int32"`
	RequiredArrayIntegerInt64                  []int64              `json:"required_array_integer_int64"`
	RequiredArrayIntegerUint                   []uint               `json:"required_array_integer_uint"`
	RequiredArrayIntegerUint32                 []uint32             `json:"required_array_integer_uint32"`
	RequiredArrayIntegerUint64                 []uint64             `json:"required_array_integer_uint64"`
	RequiredArrayIntegerUnix                   []time.Time          `json:"required_array_integer_unix"`
	RequiredArrayIntegerUnixMinusMicro         []time.Time          `json:"required_array_integer_unix-micro"`
	RequiredArrayIntegerUnixMinusMilli         []time.Time          `json:"required_array_integer_unix-milli"`
	RequiredArrayIntegerUnixMinusNano          []time.Time          `json:"required_array_integer_unix-nano"`
	RequiredArrayIntegerUnixMinusSeconds       []time.Time          `json:"required_array_integer_unix-seconds"`
	RequiredArrayNull                          []struct{}           `json:"required_array_null"`
	RequiredArrayNumber                        []float64            `json:"required_array_number"`
	RequiredArrayNumberDouble                  []float64            `json:"required_array_number_double"`
	RequiredArrayNumberFloat                   []float32            `json:"required_array_number_float"`
	RequiredArrayNumberInt32                   []int32              `json:"required_array_number_int32"`
	RequiredArrayNumberInt64                   []int64              `json:"required_array_number_int64"`
	RequiredArrayString                        []string             `json:"required_array_string"`
	RequiredArrayStringBinary                  []string             `json:"required_array_string_binary"`
	RequiredArrayStringByte                    [][]byte             `json:"required_array_string_byte"`
	RequiredArrayStringDate                    []time.Time          `json:"required_array_string_date"`
	RequiredArrayStringDateMinusTime           []time.Time          `json:"required_array_string_date-time"`
	RequiredArrayStringDuration                []time.Duration      `json:"required_array_string_duration"`
	RequiredArrayStringEmail                   []string             `json:"required_array_string_email"`
	RequiredArrayStringHostname                []string             `json:"required_array_string_hostname"`
	RequiredArrayStringInt32                   []int32              `json:"required_array_string_int32"`
	RequiredArrayStringInt64                   []int64              `json:"required_array_string_int64"`
	RequiredArrayStringIP                      []netip.Addr         `json:"required_array_string_ip"`
	RequiredArrayStringIpv4                    []netip.Addr         `json:"required_array_string_ipv4"`
	RequiredArrayStringIpv6                    []netip.Addr         `json:"required_array_string_ipv6"`
	RequiredArrayStringPassword                []string             `json:"required_array_string_password"`
	RequiredArrayStringTime                    []time.Time          `json:"required_array_string_time"`
	RequiredArrayStringUnix                    []time.Time          `json:"required_array_string_unix"`
	RequiredArrayStringUnixMinusMicro          []time.Time          `json:"required_array_string_unix-micro"`
	RequiredArrayStringUnixMinusMilli          []time.Time          `json:"required_array_string_unix-milli"`
	RequiredArrayStringUnixMinusNano           []time.Time          `json:"required_array_string_unix-nano"`
	RequiredArrayStringUnixMinusSeconds        []time.Time          `json:"required_array_string_unix-seconds"`
	RequiredArrayStringURI                     []url.URL            `json:"required_array_string_uri"`
	RequiredArrayStringUUID                    []uuid.UUID          `json:"required_array_string_uuid"`
	RequiredBoolean                            bool                 `json:"required_boolean"`
	RequiredDoubleArrayAny                     [][]jx.Raw           `json:"required_double_array_any"`
	RequiredDoubleArrayBoolean                 [][]bool             `json:"required_double_array_boolean"`
	RequiredDoubleArrayInteger                 [][]int              `json:"required_double_array_integer"`
	RequiredDoubleArrayIntegerInt32            [][]int32            `json:"required_double_array_integer_int32"`
	RequiredDoubleArrayIntegerInt64            [][]int64            `json:"required_double_array_integer_int64"`
	RequiredDoubleArrayIntegerUint             [][]uint             `json:"required_double_array_integer_uint"`
	RequiredDoubleArrayIntegerUint32           [][]uint32           `json:"required_double_array_integer_uint32"`
	RequiredDoubleArrayIntegerUint64           [][]uint64           `json:"required_double_array_integer_uint64"`
	RequiredDoubleArrayIntegerUnix             [][]time.Time        `json:"required_double_array_integer_unix"`
	RequiredDoubleArrayIntegerUnixMinusMicro   [][]time.Time        `json:"required_double_array_integer_unix-micro"`
	RequiredDoubleArrayIntegerUnixMinusMilli   [][]time.Time        `json:"required_double_array_integer_unix-milli"`
	RequiredDoubleArrayIntegerUnixMinusNano    [][]time.Time        `json:"required_double_array_integer_unix-nano"`
	RequiredDoubleArrayIntegerUnixMinusSeconds [][]time.Time        `json:"required_double_array_integer_unix-seconds"`
	RequiredDoubleArrayNull                    [][]struct{}         `json:"required_double_array_null"`
	RequiredDoubleArrayNumber                  [][]float64          `json:"required_double_array_number"`
	RequiredDoubleArrayNumberDouble            [][]float64          `json:"required_double_array_number_double"`
	RequiredDoubleArrayNumberFloat             [][]float32          `json:"required_double_array_number_float"`
	RequiredDoubleArrayNumberInt32             [][]int32            `json:"required_double_array_number_int32"`
	RequiredDoubleArrayNumberInt64             [][]int64            `json:"required_double_array_number_int64"`
	RequiredDoubleArrayString                  [][]string           `json:"required_double_array_string"`
	RequiredDoubleArrayStringBinary            [][]string           `json:"required_double_array_string_binary"`
	RequiredDoubleArrayStringByte              [][][]byte           `json:"required_double_array_string_byte"`
	RequiredDoubleArrayStringDate              [][]time.Time        `json:"required_double_array_string_date"`
	RequiredDoubleArrayStringDateMinusTime     [][]time.Time        `json:"required_double_array_string_date-time"`
	RequiredDoubleArrayStringDuration          [][]time.Duration    `json:"required_double_array_string_duration"`
	RequiredDoubleArrayStringEmail             [][]string           `json:"required_double_array_string_email"`
	RequiredDoubleArrayStringHostname          [][]string           `json:"required_double_array_string_hostname"`
	RequiredDoubleArrayStringInt32             [][]int32            `json:"required_double_array_string_int32"`
	RequiredDoubleArrayStringInt64             [][]int64            `json:"required_double_array_string_int64"`
	RequiredDoubleArrayStringIP                [][]netip.Addr       `json:"required_double_array_string_ip"`
	RequiredDoubleArrayStringIpv4              [][]netip.Addr       `json:"required_double_array_string_ipv4"`
	RequiredDoubleArrayStringIpv6              [][]netip.Addr       `json:"required_double_array_string_ipv6"`
	RequiredDoubleArrayStringPassword          [][]string           `json:"required_double_array_string_password"`
	RequiredDoubleArrayStringTime              [][]time.Time        `json:"required_double_array_string_time"`
	RequiredDoubleArrayStringUnix              [][]time.Time        `json:"required_double_array_string_unix"`
	RequiredDoubleArrayStringUnixMinusMicro    [][]time.Time        `json:"required_double_array_string_unix-micro"`
	RequiredDoubleArrayStringUnixMinusMilli    [][]time.Time        `json:"required_double_array_string_unix-milli"`
	RequiredDoubleArrayStringUnixMinusNano     [][]time.Time        `json:"required_double_array_string_unix-nano"`
	RequiredDoubleArrayStringUnixMinusSeconds  [][]time.Time        `json:"required_double_array_string_unix-seconds"`
	RequiredDoubleArrayStringURI               [][]url.URL          `json:"required_double_array_string_uri"`
	RequiredDoubleArrayStringUUID              [][]uuid.UUID        `json:"required_double_array_string_uuid"`
	RequiredInteger                            int                  `json:"required_integer"`
	RequiredIntegerInt32                       int32                `json:"required_integer_int32"`
	RequiredIntegerInt64                       int64                `json:"required_integer_int64"`
	RequiredIntegerUint                        uint                 `json:"required_integer_uint"`
	RequiredIntegerUint32                      uint32               `json:"required_integer_uint32"`
	RequiredIntegerUint64                      uint64               `json:"required_integer_uint64"`
	RequiredIntegerUnix                        time.Time            `json:"required_integer_unix"`
	RequiredIntegerUnixMinusMicro              time.Time            `json:"required_integer_unix-micro"`
	RequiredIntegerUnixMinusMilli              time.Time            `json:"required_integer_unix-milli"`
	RequiredIntegerUnixMinusNano               time.Time            `json:"required_integer_unix-nano"`
	RequiredIntegerUnixMinusSeconds            time.Time            `json:"required_integer_unix-seconds"`
	RequiredNull                               struct{}             `json:"required_null"`
	RequiredNumber                             float64              `json:"required_number"`
	RequiredNumberDouble                       float64              `json:"required_number_double"`
	RequiredNumberFloat                        float32              `json:"required_number_float"`
	RequiredNumberInt32                        int32                `json:"required_number_int32"`
	RequiredNumberInt64                        int64                `json:"required_number_int64"`
	RequiredString                             string               `json:"required_string"`
	RequiredStringBinary                       string               `json:"required_string_binary"`
	RequiredStringByte                         []byte               `json:"required_string_byte"`
	RequiredStringDate                         time.Time            `json:"required_string_date"`
	RequiredStringDateMinusTime                time.Time            `json:"required_string_date-time"`
	RequiredStringDuration                     time.Duration        `json:"required_string_duration"`
	RequiredStringEmail                        string               `json:"required_string_email"`
	RequiredStringHostname                     string               `json:"required_string_hostname"`
	RequiredStringInt32                        int32                `json:"required_string_int32"`
	RequiredStringInt64                        int64                `json:"required_string_int64"`
	RequiredStringIP                           netip.Addr           `json:"required_string_ip"`
	RequiredStringIpv4                         netip.Addr           `json:"required_string_ipv4"`
	RequiredStringIpv6                         netip.Addr           `json:"required_string_ipv6"`
	RequiredStringPassword                     string               `json:"required_string_password"`
	RequiredStringTime                         time.Time            `json:"required_string_time"`
	RequiredStringUnix                         time.Time            `json:"required_string_unix"`
	RequiredStringUnixMinusMicro               time.Time            `json:"required_string_unix-micro"`
	RequiredStringUnixMinusMilli               time.Time            `json:"required_string_unix-milli"`
	RequiredStringUnixMinusNano                time.Time            `json:"required_string_unix-nano"`
	RequiredStringUnixMinusSeconds             time.Time            `json:"required_string_unix-seconds"`
	RequiredStringURI                          url.URL              `json:"required_string_uri"`
	RequiredStringUUID                         uuid.UUID            `json:"required_string_uuid"`
	OptionalAny                                jx.Raw               `json:"optional_any,omitempty"`
	OptionalArrayAny                           []jx.Raw             `json:"optional_array_any,omitempty"`
	OptionalArrayBoolean                       []bool               `json:"optional_array_boolean,omitempty"`
	OptionalArrayInteger                       []int                `json:"optional_array_integer,omitempty"`
	OptionalArrayIntegerInt32                  []int32              `json:"optional_array_integer_int32,omitempty"`
	OptionalArrayIntegerInt64                  []int64              `json:"optional_array_integer_int64,omitempty"`
	OptionalArrayIntegerUint                   []uint               `json:"optional_array_integer_uint,omitempty"`
	OptionalArrayIntegerUint32                 []uint32             `json:"optional_array_integer_uint32,omitempty"`
	OptionalArrayIntegerUint64                 []uint64             `json:"optional_array_integer_uint64,omitempty"`
	OptionalArrayIntegerUnix                   []time.Time          `json:"optional_array_integer_unix,omitempty"`
	OptionalArrayIntegerUnixMinusMicro         []time.Time          `json:"optional_array_integer_unix-micro,omitempty"`
	OptionalArrayIntegerUnixMinusMilli         []time.Time          `json:"optional_array_integer_unix-milli,omitempty"`
	OptionalArrayIntegerUnixMinusNano          []time.Time          `json:"optional_array_integer_unix-nano,omitempty"`
	OptionalArrayIntegerUnixMinusSeconds       []time.Time          `json:"optional_array_integer_unix-seconds,omitempty"`
	OptionalArrayNull                          []struct{}           `json:"optional_array_null,omitempty"`
	OptionalArrayNumber                        []float64            `json:"optional_array_number,omitempty"`
	OptionalArrayNumberDouble                  []float64            `json:"optional_array_number_double,omitempty"`
	OptionalArrayNumberFloat                   []float32            `json:"optional_array_number_float,omitempty"`
	OptionalArrayNumberInt32                   []int32              `json:"optional_array_number_int32,omitempty"`
	OptionalArrayNumberInt64                   []int64              `json:"optional_array_number_int64,omitempty"`
	OptionalArrayString                        []string             `json:"optional_array_string,omitempty"`
	OptionalArrayStringBinary                  []string             `json:"optional_array_string_binary,omitempty"`
	OptionalArrayStringByte                    [][]byte             `json:"optional_array_string_byte,omitempty"`
	OptionalArrayStringDate                    []time.Time          `json:"optional_array_string_date,omitempty"`
	OptionalArrayStringDateMinusTime           []time.Time          `json:"optional_array_string_date-time,omitempty"`
	OptionalArrayStringDuration                []time.Duration      `json:"optional_array_string_duration,omitempty"`
	OptionalArrayStringEmail                   []string             `json:"optional_array_string_email,omitempty"`
	OptionalArrayStringHostname                []string             `json:"optional_array_string_hostname,omitempty"`
	OptionalArrayStringInt32                   []int32              `json:"optional_array_string_int32,omitempty"`
	OptionalArrayStringInt64                   []int64              `json:"optional_array_string_int64,omitempty"`
	OptionalArrayStringIP                      []netip.Addr         `json:"optional_array_string_ip,omitempty"`
	OptionalArrayStringIpv4                    []netip.Addr         `json:"optional_array_string_ipv4,omitempty"`
	OptionalArrayStringIpv6                    []netip.Addr         `json:"optional_array_string_ipv6,omitempty"`
	OptionalArrayStringPassword                []string             `json:"optional_array_string_password,omitempty"`
	OptionalArrayStringTime                    []time.Time          `json:"optional_array_string_time,omitempty"`
	OptionalArrayStringUnix                    []time.Time          `json:"optional_array_string_unix,omitempty"`
	OptionalArrayStringUnixMinusMicro          []time.Time          `json:"optional_array_string_unix-micro,omitempty"`
	OptionalArrayStringUnixMinusMilli          []time.Time          `json:"optional_array_string_unix-milli,omitempty"`
	OptionalArrayStringUnixMinusNano           []time.Time          `json:"optional_array_string_unix-nano,omitempty"`
	OptionalArrayStringUnixMinusSeconds        []time.Time          `json:"optional_array_string_unix-seconds,omitempty"`
	OptionalArrayStringURI                     []url.URL            `json:"optional_array_string_uri,omitempty"`
	OptionalArrayStringUUID                    []uuid.UUID          `json:"optional_array_string_uuid,omitempty"`
	OptionalBoolean                            OptBool              `json:"optional_boolean,omitempty"`
	OptionalDoubleArrayAny                     [][]jx.Raw           `json:"optional_double_array_any,omitempty"`
	OptionalDoubleArrayBoolean                 [][]bool             `json:"optional_double_array_boolean,omitempty"`
	OptionalDoubleArrayInteger                 [][]int              `json:"optional_double_array_integer,omitempty"`
	OptionalDoubleArrayIntegerInt32            [][]int32            `json:"optional_double_array_integer_int32,omitempty"`
	OptionalDoubleArrayIntegerInt64            [][]int64            `json:"optional_double_array_integer_int64,omitempty"`
	OptionalDoubleArrayIntegerUint             [][]uint             `json:"optional_double_array_integer_uint,omitempty"`
	OptionalDoubleArrayIntegerUint32           [][]uint32           `json:"optional_double_array_integer_uint32,omitempty"`
	OptionalDoubleArrayIntegerUint64           [][]uint64           `json:"optional_double_array_integer_uint64,omitempty"`
	OptionalDoubleArrayIntegerUnix             [][]time.Time        `json:"optional_double_array_integer_unix,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusMicro   [][]time.Time        `json:"optional_double_array_integer_unix-micro,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusMilli   [][]time.Time        `json:"optional_double_array_integer_unix-milli,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusNano    [][]time.Time        `json:"optional_double_array_integer_unix-nano,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusSeconds [][]time.Time        `json:"optional_double_array_integer_unix-seconds,omitempty"`
	OptionalDoubleArrayNull                    [][]struct{}         `json:"optional_double_array_null,omitempty"`
	OptionalDoubleArrayNumber                  [][]float64          `json:"optional_double_array_number,omitempty"`
	OptionalDoubleArrayNumberDouble            [][]float64          `json:"optional_double_array_number_double,omitempty"`
	OptionalDoubleArrayNumberFloat             [][]float32          `json:"optional_double_array_number_float,omitempty"`
	OptionalDoubleArrayNumberInt32             [][]int32            `json:"optional_double_array_number_int32,omitempty"`
	OptionalDoubleArrayNumberInt64             [][]int64            `json:"optional_double_array_number_int64,omitempty"`
	OptionalDoubleArrayString                  [][]string           `json:"optional_double_array_string,omitempty"`
	OptionalDoubleArrayStringBinary            [][]string           `json:"optional_double_array_string_binary,omitempty"`
	OptionalDoubleArrayStringByte              [][][]byte           `json:"optional_double_array_string_byte,omitempty"`
	OptionalDoubleArrayStringDate              [][]time.Time        `json:"optional_double_array_string_date,omitempty"`
	OptionalDoubleArrayStringDateMinusTime     [][]time.Time        `json:"optional_double_array_string_date-time,omitempty"`
	OptionalDoubleArrayStringDuration          [][]time.Duration    `json:"optional_double_array_string_duration,omitempty"`
	OptionalDoubleArrayStringEmail             [][]string           `json:"optional_double_array_string_email,omitempty"`
	OptionalDoubleArrayStringHostname          [][]string           `json:"optional_double_array_string_hostname,omitempty"`
	OptionalDoubleArrayStringInt32             [][]int32            `json:"optional_double_array_string_int32,omitempty"`
	OptionalDoubleArrayStringInt64             [][]int64            `json:"optional_double_array_string_int64,omitempty"`
	OptionalDoubleArrayStringIP                [][]netip.Addr       `json:"optional_double_array_string_ip,omitempty"`
	OptionalDoubleArrayStringIpv4              [][]netip.Addr       `json:"optional_double_array_string_ipv4,omitempty"`
	OptionalDoubleArrayStringIpv6              [][]netip.Addr       `json:"optional_double_array_string_ipv6,omitempty"`
	OptionalDoubleArrayStringPassword          [][]string           `json:"optional_double_array_string_password,omitempty"`
	OptionalDoubleArrayStringTime              [][]time.Time        `json:"optional_double_array_string_time,omitempty"`
	OptionalDoubleArrayStringUnix              [][]time.Time        `json:"optional_double_array_string_unix,omitempty"`
	OptionalDoubleArrayStringUnixMinusMicro    [][]time.Time        `json:"optional_double_array_string_unix-micro,omitempty"`
	OptionalDoubleArrayStringUnixMinusMilli    [][]time.Time        `json:"optional_double_array_string_unix-milli,omitempty"`
	OptionalDoubleArrayStringUnixMinusNano     [][]time.Time        `json:"optional_double_array_string_unix-nano,omitempty"`
	OptionalDoubleArrayStringUnixMinusSeconds  [][]time.Time        `json:"optional_double_array_string_unix-seconds,omitempty"`
	OptionalDoubleArrayStringURI               [][]url.URL          `json:"optional_double_array_string_uri,omitempty"`
	OptionalDoubleArrayStringUUID              [][]uuid.UUID        `json:"optional_double_array_string_uuid,omitempty"`
	OptionalInteger                            OptInt               `json:"optional_integer,omitempty"`
	OptionalIntegerInt32                       OptInt32             `json:"optional_integer_int32,omitempty"`
	OptionalIntegerInt64                       OptInt64             `json:"optional_integer_int64,omitempty"`
	OptionalIntegerUint                        OptUint              `json:"optional_integer_uint,omitempty"`
	OptionalIntegerUint32                      OptUint32            `json:"optional_integer_uint32,omitempty"`
	OptionalIntegerUint64                      OptUint64            `json:"optional_integer_uint64,omitempty"`
	OptionalIntegerUnix                        OptUnixSeconds       `json:"optional_integer_unix,omitempty"`
	OptionalIntegerUnixMinusMicro              OptUnixMicro         `json:"optional_integer_unix-micro,omitempty"`
	OptionalIntegerUnixMinusMilli              OptUnixMilli         `json:"optional_integer_unix-milli,omitempty"`
	OptionalIntegerUnixMinusNano               OptUnixNano          `json:"optional_integer_unix-nano,omitempty"`
	OptionalIntegerUnixMinusSeconds            OptUnixSeconds       `json:"optional_integer_unix-seconds,omitempty"`
	OptionalNull                               OptNull              `json:"optional_null,omitempty"`
	OptionalNumber                             OptFloat64           `json:"optional_number,omitempty"`
	OptionalNumberDouble                       OptFloat64           `json:"optional_number_double,omitempty"`
	OptionalNumberFloat                        OptFloat32           `json:"optional_number_float,omitempty"`
	OptionalNumberInt32                        OptInt32             `json:"optional_number_int32,omitempty"`
	OptionalNumberInt64                        OptInt64             `json:"optional_number_int64,omitempty"`
	OptionalString                             OptString            `json:"optional_string,omitempty"`
	OptionalStringBinary                       OptString            `json:"optional_string_binary,omitempty"`
	OptionalStringByte                         []byte               `json:"optional_string_byte,omitempty"`
	OptionalStringDate                         OptDate              `json:"optional_string_date,omitempty"`
	OptionalStringDateMinusTime                OptDateTime          `json:"optional_string_date-time,omitempty"`
	OptionalStringDuration                     OptDuration          `json:"optional_string_duration,omitempty"`
	OptionalStringEmail                        OptString            `json:"optional_string_email,omitempty"`
	OptionalStringHostname                     OptString            `json:"optional_string_hostname,omitempty"`
	OptionalStringInt32                        OptStringInt32       `json:"optional_string_int32,omitempty"`
	OptionalStringInt64                        OptStringInt64       `json:"optional_string_int64,omitempty"`
	OptionalStringIP                           OptIP                `json:"optional_string_ip,omitempty"`
	OptionalStringIpv4                         OptIPv4              `json:"optional_string_ipv4,omitempty"`
	OptionalStringIpv6                         OptIPv6              `json:"optional_string_ipv6,omitempty"`
	OptionalStringPassword                     OptString            `json:"optional_string_password,omitempty"`
	OptionalStringTime                         OptTime              `json:"optional_string_time,omitempty"`
	OptionalStringUnix                         OptStringUnixSeconds `json:"optional_string_unix,omitempty"`
	OptionalStringUnixMinusMicro               OptStringUnixMicro   `json:"optional_string_unix-micro,omitempty"`
	OptionalStringUnixMinusMilli               OptStringUnixMilli   `json:"optional_string_unix-milli,omitempty"`
	OptionalStringUnixMinusNano                OptStringUnixNano    `json:"optional_string_unix-nano,omitempty"`
	OptionalStringUnixMinusSeconds             OptStringUnixSeconds `json:"optional_string_unix-seconds,omitempty"`
	OptionalStringURI                          OptURI               `json:"optional_string_uri,omitempty"`
	OptionalStringUUID                         OptUUID              `json:"optional_string_uuid,omitempty"`
}

// GetRequiredAny returns the value of RequiredAny.
func (s TestRequestFormatTestReq) GetRequiredAny() jx.Raw {
	return s.RequiredAny
}

// GetRequiredArrayAny returns the value of RequiredArrayAny.
func (s TestRequestFormatTestReq) GetRequiredArrayAny() []jx.Raw {
	return s.RequiredArrayAny
}

// GetRequiredArrayBoolean returns the value of RequiredArrayBoolean.
func (s TestRequestFormatTestReq) GetRequiredArrayBoolean() []bool {
	return s.RequiredArrayBoolean
}

// GetRequiredArrayInteger returns the value of RequiredArrayInteger.
func (s TestRequestFormatTestReq) GetRequiredArrayInteger() []int {
	return s.RequiredArrayInteger
}

// GetRequiredArrayIntegerInt32 returns the value of RequiredArrayIntegerInt32.
func (s TestRequestFormatTestReq) GetRequiredArrayIntegerInt32() []int32 {
	return s.RequiredArrayIntegerInt32
}

// GetRequiredArrayIntegerInt64 returns the value of RequiredArrayIntegerInt64.
func (s TestRequestFormatTestReq) GetRequiredArrayIntegerInt64() []int64 {
	return s.RequiredArrayIntegerInt64
}

// GetRequiredArrayIntegerUint returns the value of RequiredArrayIntegerUint.
func (s TestRequestFormatTestReq) GetRequiredArrayIntegerUint() []uint {
	return s.RequiredArrayIntegerUint
}

// GetRequiredArrayIntegerUint32 returns the value of RequiredArrayIntegerUint32.
func (s TestRequestFormatTestReq) GetRequiredArrayIntegerUint32() []uint32 {
	return s.RequiredArrayIntegerUint32
}

// GetRequiredArrayIntegerUint64 returns the value of RequiredArrayIntegerUint64.
func (s TestRequestFormatTestReq) GetRequiredArrayIntegerUint64() []uint64 {
	return s.RequiredArrayIntegerUint64
}

// GetRequiredArrayIntegerUnix returns the value of RequiredArrayIntegerUnix.
func (s TestRequestFormatTestReq) GetRequiredArrayIntegerUnix() []time.Time {
	return s.RequiredArrayIntegerUnix
}

// GetRequiredArrayIntegerUnixMinusMicro returns the value of RequiredArrayIntegerUnixMinusMicro.
func (s TestRequestFormatTestReq) GetRequiredArrayIntegerUnixMinusMicro() []time.Time {
	return s.RequiredArrayIntegerUnixMinusMicro
}

// GetRequiredArrayIntegerUnixMinusMilli returns the value of RequiredArrayIntegerUnixMinusMilli.
func (s TestRequestFormatTestReq) GetRequiredArrayIntegerUnixMinusMilli() []time.Time {
	return s.RequiredArrayIntegerUnixMinusMilli
}

// GetRequiredArrayIntegerUnixMinusNano returns the value of RequiredArrayIntegerUnixMinusNano.
func (s TestRequestFormatTestReq) GetRequiredArrayIntegerUnixMinusNano() []time.Time {
	return s.RequiredArrayIntegerUnixMinusNano
}

// GetRequiredArrayIntegerUnixMinusSeconds returns the value of RequiredArrayIntegerUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetRequiredArrayIntegerUnixMinusSeconds() []time.Time {
	return s.RequiredArrayIntegerUnixMinusSeconds
}

// GetRequiredArrayNull returns the value of RequiredArrayNull.
func (s TestRequestFormatTestReq) GetRequiredArrayNull() []struct{} {
	return s.RequiredArrayNull
}

// GetRequiredArrayNumber returns the value of RequiredArrayNumber.
func (s TestRequestFormatTestReq) GetRequiredArrayNumber() []float64 {
	return s.RequiredArrayNumber
}

// GetRequiredArrayNumberDouble returns the value of RequiredArrayNumberDouble.
func (s TestRequestFormatTestReq) GetRequiredArrayNumberDouble() []float64 {
	return s.RequiredArrayNumberDouble
}

// GetRequiredArrayNumberFloat returns the value of RequiredArrayNumberFloat.
func (s TestRequestFormatTestReq) GetRequiredArrayNumberFloat() []float32 {
	return s.RequiredArrayNumberFloat
}

// GetRequiredArrayNumberInt32 returns the value of RequiredArrayNumberInt32.
func (s TestRequestFormatTestReq) GetRequiredArrayNumberInt32() []int32 {
	return s.RequiredArrayNumberInt32
}

// GetRequiredArrayNumberInt64 returns the value of RequiredArrayNumberInt64.
func (s TestRequestFormatTestReq) GetRequiredArrayNumberInt64() []int64 {
	return s.RequiredArrayNumberInt64
}

// GetRequiredArrayString returns the value of RequiredArrayString.
func (s TestRequestFormatTestReq) GetRequiredArrayString() []string {
	return s.RequiredArrayString
}

// GetRequiredArrayStringBinary returns the value of RequiredArrayStringBinary.
func (s TestRequestFormatTestReq) GetRequiredArrayStringBinary() []string {
	return s.RequiredArrayStringBinary
}

// GetRequiredArrayStringByte returns the value of RequiredArrayStringByte.
func (s TestRequestFormatTestReq) GetRequiredArrayStringByte() [][]byte {
	return s.RequiredArrayStringByte
}

// GetRequiredArrayStringDate returns the value of RequiredArrayStringDate.
func (s TestRequestFormatTestReq) GetRequiredArrayStringDate() []time.Time {
	return s.RequiredArrayStringDate
}

// GetRequiredArrayStringDateMinusTime returns the value of RequiredArrayStringDateMinusTime.
func (s TestRequestFormatTestReq) GetRequiredArrayStringDateMinusTime() []time.Time {
	return s.RequiredArrayStringDateMinusTime
}

// GetRequiredArrayStringDuration returns the value of RequiredArrayStringDuration.
func (s TestRequestFormatTestReq) GetRequiredArrayStringDuration() []time.Duration {
	return s.RequiredArrayStringDuration
}

// GetRequiredArrayStringEmail returns the value of RequiredArrayStringEmail.
func (s TestRequestFormatTestReq) GetRequiredArrayStringEmail() []string {
	return s.RequiredArrayStringEmail
}

// GetRequiredArrayStringHostname returns the value of RequiredArrayStringHostname.
func (s TestRequestFormatTestReq) GetRequiredArrayStringHostname() []string {
	return s.RequiredArrayStringHostname
}

// GetRequiredArrayStringInt32 returns the value of RequiredArrayStringInt32.
func (s TestRequestFormatTestReq) GetRequiredArrayStringInt32() []int32 {
	return s.RequiredArrayStringInt32
}

// GetRequiredArrayStringInt64 returns the value of RequiredArrayStringInt64.
func (s TestRequestFormatTestReq) GetRequiredArrayStringInt64() []int64 {
	return s.RequiredArrayStringInt64
}

// GetRequiredArrayStringIP returns the value of RequiredArrayStringIP.
func (s TestRequestFormatTestReq) GetRequiredArrayStringIP() []netip.Addr {
	return s.RequiredArrayStringIP
}

// GetRequiredArrayStringIpv4 returns the value of RequiredArrayStringIpv4.
func (s TestRequestFormatTestReq) GetRequiredArrayStringIpv4() []netip.Addr {
	return s.RequiredArrayStringIpv4
}

// GetRequiredArrayStringIpv6 returns the value of RequiredArrayStringIpv6.
func (s TestRequestFormatTestReq) GetRequiredArrayStringIpv6() []netip.Addr {
	return s.RequiredArrayStringIpv6
}

// GetRequiredArrayStringPassword returns the value of RequiredArrayStringPassword.
func (s TestRequestFormatTestReq) GetRequiredArrayStringPassword() []string {
	return s.RequiredArrayStringPassword
}

// GetRequiredArrayStringTime returns the value of RequiredArrayStringTime.
func (s TestRequestFormatTestReq) GetRequiredArrayStringTime() []time.Time {
	return s.RequiredArrayStringTime
}

// GetRequiredArrayStringUnix returns the value of RequiredArrayStringUnix.
func (s TestRequestFormatTestReq) GetRequiredArrayStringUnix() []time.Time {
	return s.RequiredArrayStringUnix
}

// GetRequiredArrayStringUnixMinusMicro returns the value of RequiredArrayStringUnixMinusMicro.
func (s TestRequestFormatTestReq) GetRequiredArrayStringUnixMinusMicro() []time.Time {
	return s.RequiredArrayStringUnixMinusMicro
}

// GetRequiredArrayStringUnixMinusMilli returns the value of RequiredArrayStringUnixMinusMilli.
func (s TestRequestFormatTestReq) GetRequiredArrayStringUnixMinusMilli() []time.Time {
	return s.RequiredArrayStringUnixMinusMilli
}

// GetRequiredArrayStringUnixMinusNano returns the value of RequiredArrayStringUnixMinusNano.
func (s TestRequestFormatTestReq) GetRequiredArrayStringUnixMinusNano() []time.Time {
	return s.RequiredArrayStringUnixMinusNano
}

// GetRequiredArrayStringUnixMinusSeconds returns the value of RequiredArrayStringUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetRequiredArrayStringUnixMinusSeconds() []time.Time {
	return s.RequiredArrayStringUnixMinusSeconds
}

// GetRequiredArrayStringURI returns the value of RequiredArrayStringURI.
func (s TestRequestFormatTestReq) GetRequiredArrayStringURI() []url.URL {
	return s.RequiredArrayStringURI
}

// GetRequiredArrayStringUUID returns the value of RequiredArrayStringUUID.
func (s TestRequestFormatTestReq) GetRequiredArrayStringUUID() []uuid.UUID {
	return s.RequiredArrayStringUUID
}

// GetRequiredBoolean returns the value of RequiredBoolean.
func (s TestRequestFormatTestReq) GetRequiredBoolean() bool {
	return s.RequiredBoolean
}

// GetRequiredDoubleArrayAny returns the value of RequiredDoubleArrayAny.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayAny() [][]jx.Raw {
	return s.RequiredDoubleArrayAny
}

// GetRequiredDoubleArrayBoolean returns the value of RequiredDoubleArrayBoolean.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayBoolean() [][]bool {
	return s.RequiredDoubleArrayBoolean
}

// GetRequiredDoubleArrayInteger returns the value of RequiredDoubleArrayInteger.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayInteger() [][]int {
	return s.RequiredDoubleArrayInteger
}

// GetRequiredDoubleArrayIntegerInt32 returns the value of RequiredDoubleArrayIntegerInt32.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayIntegerInt32() [][]int32 {
	return s.RequiredDoubleArrayIntegerInt32
}

// GetRequiredDoubleArrayIntegerInt64 returns the value of RequiredDoubleArrayIntegerInt64.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayIntegerInt64() [][]int64 {
	return s.RequiredDoubleArrayIntegerInt64
}

// GetRequiredDoubleArrayIntegerUint returns the value of RequiredDoubleArrayIntegerUint.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayIntegerUint() [][]uint {
	return s.RequiredDoubleArrayIntegerUint
}

// GetRequiredDoubleArrayIntegerUint32 returns the value of RequiredDoubleArrayIntegerUint32.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayIntegerUint32() [][]uint32 {
	return s.RequiredDoubleArrayIntegerUint32
}

// GetRequiredDoubleArrayIntegerUint64 returns the value of RequiredDoubleArrayIntegerUint64.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayIntegerUint64() [][]uint64 {
	return s.RequiredDoubleArrayIntegerUint64
}

// GetRequiredDoubleArrayIntegerUnix returns the value of RequiredDoubleArrayIntegerUnix.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayIntegerUnix() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnix
}

// GetRequiredDoubleArrayIntegerUnixMinusMicro returns the value of RequiredDoubleArrayIntegerUnixMinusMicro.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayIntegerUnixMinusMicro() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusMicro
}

// GetRequiredDoubleArrayIntegerUnixMinusMilli returns the value of RequiredDoubleArrayIntegerUnixMinusMilli.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayIntegerUnixMinusMilli() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusMilli
}

// GetRequiredDoubleArrayIntegerUnixMinusNano returns the value of RequiredDoubleArrayIntegerUnixMinusNano.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayIntegerUnixMinusNano() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusNano
}

// GetRequiredDoubleArrayIntegerUnixMinusSeconds returns the value of RequiredDoubleArrayIntegerUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayIntegerUnixMinusSeconds() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusSeconds
}

// GetRequiredDoubleArrayNull returns the value of RequiredDoubleArrayNull.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayNull() [][]struct{} {
	return s.RequiredDoubleArrayNull
}

// GetRequiredDoubleArrayNumber returns the value of RequiredDoubleArrayNumber.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayNumber() [][]float64 {
	return s.RequiredDoubleArrayNumber
}

// GetRequiredDoubleArrayNumberDouble returns the value of RequiredDoubleArrayNumberDouble.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayNumberDouble() [][]float64 {
	return s.RequiredDoubleArrayNumberDouble
}

// GetRequiredDoubleArrayNumberFloat returns the value of RequiredDoubleArrayNumberFloat.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayNumberFloat() [][]float32 {
	return s.RequiredDoubleArrayNumberFloat
}

// GetRequiredDoubleArrayNumberInt32 returns the value of RequiredDoubleArrayNumberInt32.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayNumberInt32() [][]int32 {
	return s.RequiredDoubleArrayNumberInt32
}

// GetRequiredDoubleArrayNumberInt64 returns the value of RequiredDoubleArrayNumberInt64.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayNumberInt64() [][]int64 {
	return s.RequiredDoubleArrayNumberInt64
}

// GetRequiredDoubleArrayString returns the value of RequiredDoubleArrayString.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayString() [][]string {
	return s.RequiredDoubleArrayString
}

// GetRequiredDoubleArrayStringBinary returns the value of RequiredDoubleArrayStringBinary.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringBinary() [][]string {
	return s.RequiredDoubleArrayStringBinary
}

// GetRequiredDoubleArrayStringByte returns the value of RequiredDoubleArrayStringByte.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringByte() [][][]byte {
	return s.RequiredDoubleArrayStringByte
}

// GetRequiredDoubleArrayStringDate returns the value of RequiredDoubleArrayStringDate.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringDate() [][]time.Time {
	return s.RequiredDoubleArrayStringDate
}

// GetRequiredDoubleArrayStringDateMinusTime returns the value of RequiredDoubleArrayStringDateMinusTime.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringDateMinusTime() [][]time.Time {
	return s.RequiredDoubleArrayStringDateMinusTime
}

// GetRequiredDoubleArrayStringDuration returns the value of RequiredDoubleArrayStringDuration.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringDuration() [][]time.Duration {
	return s.RequiredDoubleArrayStringDuration
}

// GetRequiredDoubleArrayStringEmail returns the value of RequiredDoubleArrayStringEmail.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringEmail() [][]string {
	return s.RequiredDoubleArrayStringEmail
}

// GetRequiredDoubleArrayStringHostname returns the value of RequiredDoubleArrayStringHostname.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringHostname() [][]string {
	return s.RequiredDoubleArrayStringHostname
}

// GetRequiredDoubleArrayStringInt32 returns the value of RequiredDoubleArrayStringInt32.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringInt32() [][]int32 {
	return s.RequiredDoubleArrayStringInt32
}

// GetRequiredDoubleArrayStringInt64 returns the value of RequiredDoubleArrayStringInt64.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringInt64() [][]int64 {
	return s.RequiredDoubleArrayStringInt64
}

// GetRequiredDoubleArrayStringIP returns the value of RequiredDoubleArrayStringIP.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringIP() [][]netip.Addr {
	return s.RequiredDoubleArrayStringIP
}

// GetRequiredDoubleArrayStringIpv4 returns the value of RequiredDoubleArrayStringIpv4.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringIpv4() [][]netip.Addr {
	return s.RequiredDoubleArrayStringIpv4
}

// GetRequiredDoubleArrayStringIpv6 returns the value of RequiredDoubleArrayStringIpv6.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringIpv6() [][]netip.Addr {
	return s.RequiredDoubleArrayStringIpv6
}

// GetRequiredDoubleArrayStringPassword returns the value of RequiredDoubleArrayStringPassword.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringPassword() [][]string {
	return s.RequiredDoubleArrayStringPassword
}

// GetRequiredDoubleArrayStringTime returns the value of RequiredDoubleArrayStringTime.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringTime() [][]time.Time {
	return s.RequiredDoubleArrayStringTime
}

// GetRequiredDoubleArrayStringUnix returns the value of RequiredDoubleArrayStringUnix.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringUnix() [][]time.Time {
	return s.RequiredDoubleArrayStringUnix
}

// GetRequiredDoubleArrayStringUnixMinusMicro returns the value of RequiredDoubleArrayStringUnixMinusMicro.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringUnixMinusMicro() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusMicro
}

// GetRequiredDoubleArrayStringUnixMinusMilli returns the value of RequiredDoubleArrayStringUnixMinusMilli.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringUnixMinusMilli() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusMilli
}

// GetRequiredDoubleArrayStringUnixMinusNano returns the value of RequiredDoubleArrayStringUnixMinusNano.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringUnixMinusNano() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusNano
}

// GetRequiredDoubleArrayStringUnixMinusSeconds returns the value of RequiredDoubleArrayStringUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringUnixMinusSeconds() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusSeconds
}

// GetRequiredDoubleArrayStringURI returns the value of RequiredDoubleArrayStringURI.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringURI() [][]url.URL {
	return s.RequiredDoubleArrayStringURI
}

// GetRequiredDoubleArrayStringUUID returns the value of RequiredDoubleArrayStringUUID.
func (s TestRequestFormatTestReq) GetRequiredDoubleArrayStringUUID() [][]uuid.UUID {
	return s.RequiredDoubleArrayStringUUID
}

// GetRequiredInteger returns the value of RequiredInteger.
func (s TestRequestFormatTestReq) GetRequiredInteger() int {
	return s.RequiredInteger
}

// GetRequiredIntegerInt32 returns the value of RequiredIntegerInt32.
func (s TestRequestFormatTestReq) GetRequiredIntegerInt32() int32 {
	return s.RequiredIntegerInt32
}

// GetRequiredIntegerInt64 returns the value of RequiredIntegerInt64.
func (s TestRequestFormatTestReq) GetRequiredIntegerInt64() int64 {
	return s.RequiredIntegerInt64
}

// GetRequiredIntegerUint returns the value of RequiredIntegerUint.
func (s TestRequestFormatTestReq) GetRequiredIntegerUint() uint {
	return s.RequiredIntegerUint
}

// GetRequiredIntegerUint32 returns the value of RequiredIntegerUint32.
func (s TestRequestFormatTestReq) GetRequiredIntegerUint32() uint32 {
	return s.RequiredIntegerUint32
}

// GetRequiredIntegerUint64 returns the value of RequiredIntegerUint64.
func (s TestRequestFormatTestReq) GetRequiredIntegerUint64() uint64 {
	return s.RequiredIntegerUint64
}

// GetRequiredIntegerUnix returns the value of RequiredIntegerUnix.
func (s TestRequestFormatTestReq) GetRequiredIntegerUnix() time.Time {
	return s.RequiredIntegerUnix
}

// GetRequiredIntegerUnixMinusMicro returns the value of RequiredIntegerUnixMinusMicro.
func (s TestRequestFormatTestReq) GetRequiredIntegerUnixMinusMicro() time.Time {
	return s.RequiredIntegerUnixMinusMicro
}

// GetRequiredIntegerUnixMinusMilli returns the value of RequiredIntegerUnixMinusMilli.
func (s TestRequestFormatTestReq) GetRequiredIntegerUnixMinusMilli() time.Time {
	return s.RequiredIntegerUnixMinusMilli
}

// GetRequiredIntegerUnixMinusNano returns the value of RequiredIntegerUnixMinusNano.
func (s TestRequestFormatTestReq) GetRequiredIntegerUnixMinusNano() time.Time {
	return s.RequiredIntegerUnixMinusNano
}

// GetRequiredIntegerUnixMinusSeconds returns the value of RequiredIntegerUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetRequiredIntegerUnixMinusSeconds() time.Time {
	return s.RequiredIntegerUnixMinusSeconds
}

// GetRequiredNull returns the value of RequiredNull.
func (s TestRequestFormatTestReq) GetRequiredNull() struct{} {
	return s.RequiredNull
}

// GetRequiredNumber returns the value of RequiredNumber.
func (s TestRequestFormatTestReq) GetRequiredNumber() float64 {
	return s.RequiredNumber
}

// GetRequiredNumberDouble returns the value of RequiredNumberDouble.
func (s TestRequestFormatTestReq) GetRequiredNumberDouble() float64 {
	return s.RequiredNumberDouble
}

// GetRequiredNumberFloat returns the value of RequiredNumberFloat.
func (s TestRequestFormatTestReq) GetRequiredNumberFloat() float32 {
	return s.RequiredNumberFloat
}

// GetRequiredNumberInt32 returns the value of RequiredNumberInt32.
func (s TestRequestFormatTestReq) GetRequiredNumberInt32() int32 {
	return s.RequiredNumberInt32
}

// GetRequiredNumberInt64 returns the value of RequiredNumberInt64.
func (s TestRequestFormatTestReq) GetRequiredNumberInt64() int64 {
	return s.RequiredNumberInt64
}

// GetRequiredString returns the value of RequiredString.
func (s TestRequestFormatTestReq) GetRequiredString() string {
	return s.RequiredString
}

// GetRequiredStringBinary returns the value of RequiredStringBinary.
func (s TestRequestFormatTestReq) GetRequiredStringBinary() string {
	return s.RequiredStringBinary
}

// GetRequiredStringByte returns the value of RequiredStringByte.
func (s TestRequestFormatTestReq) GetRequiredStringByte() []byte {
	return s.RequiredStringByte
}

// GetRequiredStringDate returns the value of RequiredStringDate.
func (s TestRequestFormatTestReq) GetRequiredStringDate() time.Time {
	return s.RequiredStringDate
}

// GetRequiredStringDateMinusTime returns the value of RequiredStringDateMinusTime.
func (s TestRequestFormatTestReq) GetRequiredStringDateMinusTime() time.Time {
	return s.RequiredStringDateMinusTime
}

// GetRequiredStringDuration returns the value of RequiredStringDuration.
func (s TestRequestFormatTestReq) GetRequiredStringDuration() time.Duration {
	return s.RequiredStringDuration
}

// GetRequiredStringEmail returns the value of RequiredStringEmail.
func (s TestRequestFormatTestReq) GetRequiredStringEmail() string {
	return s.RequiredStringEmail
}

// GetRequiredStringHostname returns the value of RequiredStringHostname.
func (s TestRequestFormatTestReq) GetRequiredStringHostname() string {
	return s.RequiredStringHostname
}

// GetRequiredStringInt32 returns the value of RequiredStringInt32.
func (s TestRequestFormatTestReq) GetRequiredStringInt32() int32 {
	return s.RequiredStringInt32
}

// GetRequiredStringInt64 returns the value of RequiredStringInt64.
func (s TestRequestFormatTestReq) GetRequiredStringInt64() int64 {
	return s.RequiredStringInt64
}

// GetRequiredStringIP returns the value of RequiredStringIP.
func (s TestRequestFormatTestReq) GetRequiredStringIP() netip.Addr {
	return s.RequiredStringIP
}

// GetRequiredStringIpv4 returns the value of RequiredStringIpv4.
func (s TestRequestFormatTestReq) GetRequiredStringIpv4() netip.Addr {
	return s.RequiredStringIpv4
}

// GetRequiredStringIpv6 returns the value of RequiredStringIpv6.
func (s TestRequestFormatTestReq) GetRequiredStringIpv6() netip.Addr {
	return s.RequiredStringIpv6
}

// GetRequiredStringPassword returns the value of RequiredStringPassword.
func (s TestRequestFormatTestReq) GetRequiredStringPassword() string {
	return s.RequiredStringPassword
}

// GetRequiredStringTime returns the value of RequiredStringTime.
func (s TestRequestFormatTestReq) GetRequiredStringTime() time.Time {
	return s.RequiredStringTime
}

// GetRequiredStringUnix returns the value of RequiredStringUnix.
func (s TestRequestFormatTestReq) GetRequiredStringUnix() time.Time {
	return s.RequiredStringUnix
}

// GetRequiredStringUnixMinusMicro returns the value of RequiredStringUnixMinusMicro.
func (s TestRequestFormatTestReq) GetRequiredStringUnixMinusMicro() time.Time {
	return s.RequiredStringUnixMinusMicro
}

// GetRequiredStringUnixMinusMilli returns the value of RequiredStringUnixMinusMilli.
func (s TestRequestFormatTestReq) GetRequiredStringUnixMinusMilli() time.Time {
	return s.RequiredStringUnixMinusMilli
}

// GetRequiredStringUnixMinusNano returns the value of RequiredStringUnixMinusNano.
func (s TestRequestFormatTestReq) GetRequiredStringUnixMinusNano() time.Time {
	return s.RequiredStringUnixMinusNano
}

// GetRequiredStringUnixMinusSeconds returns the value of RequiredStringUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetRequiredStringUnixMinusSeconds() time.Time {
	return s.RequiredStringUnixMinusSeconds
}

// GetRequiredStringURI returns the value of RequiredStringURI.
func (s TestRequestFormatTestReq) GetRequiredStringURI() url.URL {
	return s.RequiredStringURI
}

// GetRequiredStringUUID returns the value of RequiredStringUUID.
func (s TestRequestFormatTestReq) GetRequiredStringUUID() uuid.UUID {
	return s.RequiredStringUUID
}

// GetOptionalAny returns the value of OptionalAny.
func (s TestRequestFormatTestReq) GetOptionalAny() jx.Raw {
	return s.OptionalAny
}

// GetOptionalArrayAny returns the value of OptionalArrayAny.
func (s TestRequestFormatTestReq) GetOptionalArrayAny() []jx.Raw {
	return s.OptionalArrayAny
}

// GetOptionalArrayBoolean returns the value of OptionalArrayBoolean.
func (s TestRequestFormatTestReq) GetOptionalArrayBoolean() []bool {
	return s.OptionalArrayBoolean
}

// GetOptionalArrayInteger returns the value of OptionalArrayInteger.
func (s TestRequestFormatTestReq) GetOptionalArrayInteger() []int {
	return s.OptionalArrayInteger
}

// GetOptionalArrayIntegerInt32 returns the value of OptionalArrayIntegerInt32.
func (s TestRequestFormatTestReq) GetOptionalArrayIntegerInt32() []int32 {
	return s.OptionalArrayIntegerInt32
}

// GetOptionalArrayIntegerInt64 returns the value of OptionalArrayIntegerInt64.
func (s TestRequestFormatTestReq) GetOptionalArrayIntegerInt64() []int64 {
	return s.OptionalArrayIntegerInt64
}

// GetOptionalArrayIntegerUint returns the value of OptionalArrayIntegerUint.
func (s TestRequestFormatTestReq) GetOptionalArrayIntegerUint() []uint {
	return s.OptionalArrayIntegerUint
}

// GetOptionalArrayIntegerUint32 returns the value of OptionalArrayIntegerUint32.
func (s TestRequestFormatTestReq) GetOptionalArrayIntegerUint32() []uint32 {
	return s.OptionalArrayIntegerUint32
}

// GetOptionalArrayIntegerUint64 returns the value of OptionalArrayIntegerUint64.
func (s TestRequestFormatTestReq) GetOptionalArrayIntegerUint64() []uint64 {
	return s.OptionalArrayIntegerUint64
}

// GetOptionalArrayIntegerUnix returns the value of OptionalArrayIntegerUnix.
func (s TestRequestFormatTestReq) GetOptionalArrayIntegerUnix() []time.Time {
	return s.OptionalArrayIntegerUnix
}

// GetOptionalArrayIntegerUnixMinusMicro returns the value of OptionalArrayIntegerUnixMinusMicro.
func (s TestRequestFormatTestReq) GetOptionalArrayIntegerUnixMinusMicro() []time.Time {
	return s.OptionalArrayIntegerUnixMinusMicro
}

// GetOptionalArrayIntegerUnixMinusMilli returns the value of OptionalArrayIntegerUnixMinusMilli.
func (s TestRequestFormatTestReq) GetOptionalArrayIntegerUnixMinusMilli() []time.Time {
	return s.OptionalArrayIntegerUnixMinusMilli
}

// GetOptionalArrayIntegerUnixMinusNano returns the value of OptionalArrayIntegerUnixMinusNano.
func (s TestRequestFormatTestReq) GetOptionalArrayIntegerUnixMinusNano() []time.Time {
	return s.OptionalArrayIntegerUnixMinusNano
}

// GetOptionalArrayIntegerUnixMinusSeconds returns the value of OptionalArrayIntegerUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetOptionalArrayIntegerUnixMinusSeconds() []time.Time {
	return s.OptionalArrayIntegerUnixMinusSeconds
}

// GetOptionalArrayNull returns the value of OptionalArrayNull.
func (s TestRequestFormatTestReq) GetOptionalArrayNull() []struct{} {
	return s.OptionalArrayNull
}

// GetOptionalArrayNumber returns the value of OptionalArrayNumber.
func (s TestRequestFormatTestReq) GetOptionalArrayNumber() []float64 {
	return s.OptionalArrayNumber
}

// GetOptionalArrayNumberDouble returns the value of OptionalArrayNumberDouble.
func (s TestRequestFormatTestReq) GetOptionalArrayNumberDouble() []float64 {
	return s.OptionalArrayNumberDouble
}

// GetOptionalArrayNumberFloat returns the value of OptionalArrayNumberFloat.
func (s TestRequestFormatTestReq) GetOptionalArrayNumberFloat() []float32 {
	return s.OptionalArrayNumberFloat
}

// GetOptionalArrayNumberInt32 returns the value of OptionalArrayNumberInt32.
func (s TestRequestFormatTestReq) GetOptionalArrayNumberInt32() []int32 {
	return s.OptionalArrayNumberInt32
}

// GetOptionalArrayNumberInt64 returns the value of OptionalArrayNumberInt64.
func (s TestRequestFormatTestReq) GetOptionalArrayNumberInt64() []int64 {
	return s.OptionalArrayNumberInt64
}

// GetOptionalArrayString returns the value of OptionalArrayString.
func (s TestRequestFormatTestReq) GetOptionalArrayString() []string {
	return s.OptionalArrayString
}

// GetOptionalArrayStringBinary returns the value of OptionalArrayStringBinary.
func (s TestRequestFormatTestReq) GetOptionalArrayStringBinary() []string {
	return s.OptionalArrayStringBinary
}

// GetOptionalArrayStringByte returns the value of OptionalArrayStringByte.
func (s TestRequestFormatTestReq) GetOptionalArrayStringByte() [][]byte {
	return s.OptionalArrayStringByte
}

// GetOptionalArrayStringDate returns the value of OptionalArrayStringDate.
func (s TestRequestFormatTestReq) GetOptionalArrayStringDate() []time.Time {
	return s.OptionalArrayStringDate
}

// GetOptionalArrayStringDateMinusTime returns the value of OptionalArrayStringDateMinusTime.
func (s TestRequestFormatTestReq) GetOptionalArrayStringDateMinusTime() []time.Time {
	return s.OptionalArrayStringDateMinusTime
}

// GetOptionalArrayStringDuration returns the value of OptionalArrayStringDuration.
func (s TestRequestFormatTestReq) GetOptionalArrayStringDuration() []time.Duration {
	return s.OptionalArrayStringDuration
}

// GetOptionalArrayStringEmail returns the value of OptionalArrayStringEmail.
func (s TestRequestFormatTestReq) GetOptionalArrayStringEmail() []string {
	return s.OptionalArrayStringEmail
}

// GetOptionalArrayStringHostname returns the value of OptionalArrayStringHostname.
func (s TestRequestFormatTestReq) GetOptionalArrayStringHostname() []string {
	return s.OptionalArrayStringHostname
}

// GetOptionalArrayStringInt32 returns the value of OptionalArrayStringInt32.
func (s TestRequestFormatTestReq) GetOptionalArrayStringInt32() []int32 {
	return s.OptionalArrayStringInt32
}

// GetOptionalArrayStringInt64 returns the value of OptionalArrayStringInt64.
func (s TestRequestFormatTestReq) GetOptionalArrayStringInt64() []int64 {
	return s.OptionalArrayStringInt64
}

// GetOptionalArrayStringIP returns the value of OptionalArrayStringIP.
func (s TestRequestFormatTestReq) GetOptionalArrayStringIP() []netip.Addr {
	return s.OptionalArrayStringIP
}

// GetOptionalArrayStringIpv4 returns the value of OptionalArrayStringIpv4.
func (s TestRequestFormatTestReq) GetOptionalArrayStringIpv4() []netip.Addr {
	return s.OptionalArrayStringIpv4
}

// GetOptionalArrayStringIpv6 returns the value of OptionalArrayStringIpv6.
func (s TestRequestFormatTestReq) GetOptionalArrayStringIpv6() []netip.Addr {
	return s.OptionalArrayStringIpv6
}

// GetOptionalArrayStringPassword returns the value of OptionalArrayStringPassword.
func (s TestRequestFormatTestReq) GetOptionalArrayStringPassword() []string {
	return s.OptionalArrayStringPassword
}

// GetOptionalArrayStringTime returns the value of OptionalArrayStringTime.
func (s TestRequestFormatTestReq) GetOptionalArrayStringTime() []time.Time {
	return s.OptionalArrayStringTime
}

// GetOptionalArrayStringUnix returns the value of OptionalArrayStringUnix.
func (s TestRequestFormatTestReq) GetOptionalArrayStringUnix() []time.Time {
	return s.OptionalArrayStringUnix
}

// GetOptionalArrayStringUnixMinusMicro returns the value of OptionalArrayStringUnixMinusMicro.
func (s TestRequestFormatTestReq) GetOptionalArrayStringUnixMinusMicro() []time.Time {
	return s.OptionalArrayStringUnixMinusMicro
}

// GetOptionalArrayStringUnixMinusMilli returns the value of OptionalArrayStringUnixMinusMilli.
func (s TestRequestFormatTestReq) GetOptionalArrayStringUnixMinusMilli() []time.Time {
	return s.OptionalArrayStringUnixMinusMilli
}

// GetOptionalArrayStringUnixMinusNano returns the value of OptionalArrayStringUnixMinusNano.
func (s TestRequestFormatTestReq) GetOptionalArrayStringUnixMinusNano() []time.Time {
	return s.OptionalArrayStringUnixMinusNano
}

// GetOptionalArrayStringUnixMinusSeconds returns the value of OptionalArrayStringUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetOptionalArrayStringUnixMinusSeconds() []time.Time {
	return s.OptionalArrayStringUnixMinusSeconds
}

// GetOptionalArrayStringURI returns the value of OptionalArrayStringURI.
func (s TestRequestFormatTestReq) GetOptionalArrayStringURI() []url.URL {
	return s.OptionalArrayStringURI
}

// GetOptionalArrayStringUUID returns the value of OptionalArrayStringUUID.
func (s TestRequestFormatTestReq) GetOptionalArrayStringUUID() []uuid.UUID {
	return s.OptionalArrayStringUUID
}

// GetOptionalBoolean returns the value of OptionalBoolean.
func (s TestRequestFormatTestReq) GetOptionalBoolean() OptBool {
	return s.OptionalBoolean
}

// GetOptionalDoubleArrayAny returns the value of OptionalDoubleArrayAny.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayAny() [][]jx.Raw {
	return s.OptionalDoubleArrayAny
}

// GetOptionalDoubleArrayBoolean returns the value of OptionalDoubleArrayBoolean.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayBoolean() [][]bool {
	return s.OptionalDoubleArrayBoolean
}

// GetOptionalDoubleArrayInteger returns the value of OptionalDoubleArrayInteger.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayInteger() [][]int {
	return s.OptionalDoubleArrayInteger
}

// GetOptionalDoubleArrayIntegerInt32 returns the value of OptionalDoubleArrayIntegerInt32.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayIntegerInt32() [][]int32 {
	return s.OptionalDoubleArrayIntegerInt32
}

// GetOptionalDoubleArrayIntegerInt64 returns the value of OptionalDoubleArrayIntegerInt64.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayIntegerInt64() [][]int64 {
	return s.OptionalDoubleArrayIntegerInt64
}

// GetOptionalDoubleArrayIntegerUint returns the value of OptionalDoubleArrayIntegerUint.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayIntegerUint() [][]uint {
	return s.OptionalDoubleArrayIntegerUint
}

// GetOptionalDoubleArrayIntegerUint32 returns the value of OptionalDoubleArrayIntegerUint32.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayIntegerUint32() [][]uint32 {
	return s.OptionalDoubleArrayIntegerUint32
}

// GetOptionalDoubleArrayIntegerUint64 returns the value of OptionalDoubleArrayIntegerUint64.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayIntegerUint64() [][]uint64 {
	return s.OptionalDoubleArrayIntegerUint64
}

// GetOptionalDoubleArrayIntegerUnix returns the value of OptionalDoubleArrayIntegerUnix.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayIntegerUnix() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnix
}

// GetOptionalDoubleArrayIntegerUnixMinusMicro returns the value of OptionalDoubleArrayIntegerUnixMinusMicro.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayIntegerUnixMinusMicro() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusMicro
}

// GetOptionalDoubleArrayIntegerUnixMinusMilli returns the value of OptionalDoubleArrayIntegerUnixMinusMilli.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayIntegerUnixMinusMilli() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusMilli
}

// GetOptionalDoubleArrayIntegerUnixMinusNano returns the value of OptionalDoubleArrayIntegerUnixMinusNano.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayIntegerUnixMinusNano() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusNano
}

// GetOptionalDoubleArrayIntegerUnixMinusSeconds returns the value of OptionalDoubleArrayIntegerUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayIntegerUnixMinusSeconds() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusSeconds
}

// GetOptionalDoubleArrayNull returns the value of OptionalDoubleArrayNull.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayNull() [][]struct{} {
	return s.OptionalDoubleArrayNull
}

// GetOptionalDoubleArrayNumber returns the value of OptionalDoubleArrayNumber.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayNumber() [][]float64 {
	return s.OptionalDoubleArrayNumber
}

// GetOptionalDoubleArrayNumberDouble returns the value of OptionalDoubleArrayNumberDouble.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayNumberDouble() [][]float64 {
	return s.OptionalDoubleArrayNumberDouble
}

// GetOptionalDoubleArrayNumberFloat returns the value of OptionalDoubleArrayNumberFloat.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayNumberFloat() [][]float32 {
	return s.OptionalDoubleArrayNumberFloat
}

// GetOptionalDoubleArrayNumberInt32 returns the value of OptionalDoubleArrayNumberInt32.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayNumberInt32() [][]int32 {
	return s.OptionalDoubleArrayNumberInt32
}

// GetOptionalDoubleArrayNumberInt64 returns the value of OptionalDoubleArrayNumberInt64.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayNumberInt64() [][]int64 {
	return s.OptionalDoubleArrayNumberInt64
}

// GetOptionalDoubleArrayString returns the value of OptionalDoubleArrayString.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayString() [][]string {
	return s.OptionalDoubleArrayString
}

// GetOptionalDoubleArrayStringBinary returns the value of OptionalDoubleArrayStringBinary.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringBinary() [][]string {
	return s.OptionalDoubleArrayStringBinary
}

// GetOptionalDoubleArrayStringByte returns the value of OptionalDoubleArrayStringByte.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringByte() [][][]byte {
	return s.OptionalDoubleArrayStringByte
}

// GetOptionalDoubleArrayStringDate returns the value of OptionalDoubleArrayStringDate.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringDate() [][]time.Time {
	return s.OptionalDoubleArrayStringDate
}

// GetOptionalDoubleArrayStringDateMinusTime returns the value of OptionalDoubleArrayStringDateMinusTime.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringDateMinusTime() [][]time.Time {
	return s.OptionalDoubleArrayStringDateMinusTime
}

// GetOptionalDoubleArrayStringDuration returns the value of OptionalDoubleArrayStringDuration.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringDuration() [][]time.Duration {
	return s.OptionalDoubleArrayStringDuration
}

// GetOptionalDoubleArrayStringEmail returns the value of OptionalDoubleArrayStringEmail.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringEmail() [][]string {
	return s.OptionalDoubleArrayStringEmail
}

// GetOptionalDoubleArrayStringHostname returns the value of OptionalDoubleArrayStringHostname.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringHostname() [][]string {
	return s.OptionalDoubleArrayStringHostname
}

// GetOptionalDoubleArrayStringInt32 returns the value of OptionalDoubleArrayStringInt32.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringInt32() [][]int32 {
	return s.OptionalDoubleArrayStringInt32
}

// GetOptionalDoubleArrayStringInt64 returns the value of OptionalDoubleArrayStringInt64.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringInt64() [][]int64 {
	return s.OptionalDoubleArrayStringInt64
}

// GetOptionalDoubleArrayStringIP returns the value of OptionalDoubleArrayStringIP.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringIP() [][]netip.Addr {
	return s.OptionalDoubleArrayStringIP
}

// GetOptionalDoubleArrayStringIpv4 returns the value of OptionalDoubleArrayStringIpv4.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringIpv4() [][]netip.Addr {
	return s.OptionalDoubleArrayStringIpv4
}

// GetOptionalDoubleArrayStringIpv6 returns the value of OptionalDoubleArrayStringIpv6.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringIpv6() [][]netip.Addr {
	return s.OptionalDoubleArrayStringIpv6
}

// GetOptionalDoubleArrayStringPassword returns the value of OptionalDoubleArrayStringPassword.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringPassword() [][]string {
	return s.OptionalDoubleArrayStringPassword
}

// GetOptionalDoubleArrayStringTime returns the value of OptionalDoubleArrayStringTime.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringTime() [][]time.Time {
	return s.OptionalDoubleArrayStringTime
}

// GetOptionalDoubleArrayStringUnix returns the value of OptionalDoubleArrayStringUnix.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringUnix() [][]time.Time {
	return s.OptionalDoubleArrayStringUnix
}

// GetOptionalDoubleArrayStringUnixMinusMicro returns the value of OptionalDoubleArrayStringUnixMinusMicro.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringUnixMinusMicro() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusMicro
}

// GetOptionalDoubleArrayStringUnixMinusMilli returns the value of OptionalDoubleArrayStringUnixMinusMilli.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringUnixMinusMilli() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusMilli
}

// GetOptionalDoubleArrayStringUnixMinusNano returns the value of OptionalDoubleArrayStringUnixMinusNano.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringUnixMinusNano() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusNano
}

// GetOptionalDoubleArrayStringUnixMinusSeconds returns the value of OptionalDoubleArrayStringUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringUnixMinusSeconds() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusSeconds
}

// GetOptionalDoubleArrayStringURI returns the value of OptionalDoubleArrayStringURI.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringURI() [][]url.URL {
	return s.OptionalDoubleArrayStringURI
}

// GetOptionalDoubleArrayStringUUID returns the value of OptionalDoubleArrayStringUUID.
func (s TestRequestFormatTestReq) GetOptionalDoubleArrayStringUUID() [][]uuid.UUID {
	return s.OptionalDoubleArrayStringUUID
}

// GetOptionalInteger returns the value of OptionalInteger.
func (s TestRequestFormatTestReq) GetOptionalInteger() OptInt {
	return s.OptionalInteger
}

// GetOptionalIntegerInt32 returns the value of OptionalIntegerInt32.
func (s TestRequestFormatTestReq) GetOptionalIntegerInt32() OptInt32 {
	return s.OptionalIntegerInt32
}

// GetOptionalIntegerInt64 returns the value of OptionalIntegerInt64.
func (s TestRequestFormatTestReq) GetOptionalIntegerInt64() OptInt64 {
	return s.OptionalIntegerInt64
}

// GetOptionalIntegerUint returns the value of OptionalIntegerUint.
func (s TestRequestFormatTestReq) GetOptionalIntegerUint() OptUint {
	return s.OptionalIntegerUint
}

// GetOptionalIntegerUint32 returns the value of OptionalIntegerUint32.
func (s TestRequestFormatTestReq) GetOptionalIntegerUint32() OptUint32 {
	return s.OptionalIntegerUint32
}

// GetOptionalIntegerUint64 returns the value of OptionalIntegerUint64.
func (s TestRequestFormatTestReq) GetOptionalIntegerUint64() OptUint64 {
	return s.OptionalIntegerUint64
}

// GetOptionalIntegerUnix returns the value of OptionalIntegerUnix.
func (s TestRequestFormatTestReq) GetOptionalIntegerUnix() OptUnixSeconds {
	return s.OptionalIntegerUnix
}

// GetOptionalIntegerUnixMinusMicro returns the value of OptionalIntegerUnixMinusMicro.
func (s TestRequestFormatTestReq) GetOptionalIntegerUnixMinusMicro() OptUnixMicro {
	return s.OptionalIntegerUnixMinusMicro
}

// GetOptionalIntegerUnixMinusMilli returns the value of OptionalIntegerUnixMinusMilli.
func (s TestRequestFormatTestReq) GetOptionalIntegerUnixMinusMilli() OptUnixMilli {
	return s.OptionalIntegerUnixMinusMilli
}

// GetOptionalIntegerUnixMinusNano returns the value of OptionalIntegerUnixMinusNano.
func (s TestRequestFormatTestReq) GetOptionalIntegerUnixMinusNano() OptUnixNano {
	return s.OptionalIntegerUnixMinusNano
}

// GetOptionalIntegerUnixMinusSeconds returns the value of OptionalIntegerUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetOptionalIntegerUnixMinusSeconds() OptUnixSeconds {
	return s.OptionalIntegerUnixMinusSeconds
}

// GetOptionalNull returns the value of OptionalNull.
func (s TestRequestFormatTestReq) GetOptionalNull() OptNull {
	return s.OptionalNull
}

// GetOptionalNumber returns the value of OptionalNumber.
func (s TestRequestFormatTestReq) GetOptionalNumber() OptFloat64 {
	return s.OptionalNumber
}

// GetOptionalNumberDouble returns the value of OptionalNumberDouble.
func (s TestRequestFormatTestReq) GetOptionalNumberDouble() OptFloat64 {
	return s.OptionalNumberDouble
}

// GetOptionalNumberFloat returns the value of OptionalNumberFloat.
func (s TestRequestFormatTestReq) GetOptionalNumberFloat() OptFloat32 {
	return s.OptionalNumberFloat
}

// GetOptionalNumberInt32 returns the value of OptionalNumberInt32.
func (s TestRequestFormatTestReq) GetOptionalNumberInt32() OptInt32 {
	return s.OptionalNumberInt32
}

// GetOptionalNumberInt64 returns the value of OptionalNumberInt64.
func (s TestRequestFormatTestReq) GetOptionalNumberInt64() OptInt64 {
	return s.OptionalNumberInt64
}

// GetOptionalString returns the value of OptionalString.
func (s TestRequestFormatTestReq) GetOptionalString() OptString {
	return s.OptionalString
}

// GetOptionalStringBinary returns the value of OptionalStringBinary.
func (s TestRequestFormatTestReq) GetOptionalStringBinary() OptString {
	return s.OptionalStringBinary
}

// GetOptionalStringByte returns the value of OptionalStringByte.
func (s TestRequestFormatTestReq) GetOptionalStringByte() []byte {
	return s.OptionalStringByte
}

// GetOptionalStringDate returns the value of OptionalStringDate.
func (s TestRequestFormatTestReq) GetOptionalStringDate() OptDate {
	return s.OptionalStringDate
}

// GetOptionalStringDateMinusTime returns the value of OptionalStringDateMinusTime.
func (s TestRequestFormatTestReq) GetOptionalStringDateMinusTime() OptDateTime {
	return s.OptionalStringDateMinusTime
}

// GetOptionalStringDuration returns the value of OptionalStringDuration.
func (s TestRequestFormatTestReq) GetOptionalStringDuration() OptDuration {
	return s.OptionalStringDuration
}

// GetOptionalStringEmail returns the value of OptionalStringEmail.
func (s TestRequestFormatTestReq) GetOptionalStringEmail() OptString {
	return s.OptionalStringEmail
}

// GetOptionalStringHostname returns the value of OptionalStringHostname.
func (s TestRequestFormatTestReq) GetOptionalStringHostname() OptString {
	return s.OptionalStringHostname
}

// GetOptionalStringInt32 returns the value of OptionalStringInt32.
func (s TestRequestFormatTestReq) GetOptionalStringInt32() OptStringInt32 {
	return s.OptionalStringInt32
}

// GetOptionalStringInt64 returns the value of OptionalStringInt64.
func (s TestRequestFormatTestReq) GetOptionalStringInt64() OptStringInt64 {
	return s.OptionalStringInt64
}

// GetOptionalStringIP returns the value of OptionalStringIP.
func (s TestRequestFormatTestReq) GetOptionalStringIP() OptIP {
	return s.OptionalStringIP
}

// GetOptionalStringIpv4 returns the value of OptionalStringIpv4.
func (s TestRequestFormatTestReq) GetOptionalStringIpv4() OptIPv4 {
	return s.OptionalStringIpv4
}

// GetOptionalStringIpv6 returns the value of OptionalStringIpv6.
func (s TestRequestFormatTestReq) GetOptionalStringIpv6() OptIPv6 {
	return s.OptionalStringIpv6
}

// GetOptionalStringPassword returns the value of OptionalStringPassword.
func (s TestRequestFormatTestReq) GetOptionalStringPassword() OptString {
	return s.OptionalStringPassword
}

// GetOptionalStringTime returns the value of OptionalStringTime.
func (s TestRequestFormatTestReq) GetOptionalStringTime() OptTime {
	return s.OptionalStringTime
}

// GetOptionalStringUnix returns the value of OptionalStringUnix.
func (s TestRequestFormatTestReq) GetOptionalStringUnix() OptStringUnixSeconds {
	return s.OptionalStringUnix
}

// GetOptionalStringUnixMinusMicro returns the value of OptionalStringUnixMinusMicro.
func (s TestRequestFormatTestReq) GetOptionalStringUnixMinusMicro() OptStringUnixMicro {
	return s.OptionalStringUnixMinusMicro
}

// GetOptionalStringUnixMinusMilli returns the value of OptionalStringUnixMinusMilli.
func (s TestRequestFormatTestReq) GetOptionalStringUnixMinusMilli() OptStringUnixMilli {
	return s.OptionalStringUnixMinusMilli
}

// GetOptionalStringUnixMinusNano returns the value of OptionalStringUnixMinusNano.
func (s TestRequestFormatTestReq) GetOptionalStringUnixMinusNano() OptStringUnixNano {
	return s.OptionalStringUnixMinusNano
}

// GetOptionalStringUnixMinusSeconds returns the value of OptionalStringUnixMinusSeconds.
func (s TestRequestFormatTestReq) GetOptionalStringUnixMinusSeconds() OptStringUnixSeconds {
	return s.OptionalStringUnixMinusSeconds
}

// GetOptionalStringURI returns the value of OptionalStringURI.
func (s TestRequestFormatTestReq) GetOptionalStringURI() OptURI {
	return s.OptionalStringURI
}

// GetOptionalStringUUID returns the value of OptionalStringUUID.
func (s TestRequestFormatTestReq) GetOptionalStringUUID() OptUUID {
	return s.OptionalStringUUID
}

// SetRequiredAny sets the value of RequiredAny.
func (s *TestRequestFormatTestReq) SetRequiredAny(val jx.Raw) {
	s.RequiredAny = val
}

// SetRequiredArrayAny sets the value of RequiredArrayAny.
func (s *TestRequestFormatTestReq) SetRequiredArrayAny(val []jx.Raw) {
	s.RequiredArrayAny = val
}

// SetRequiredArrayBoolean sets the value of RequiredArrayBoolean.
func (s *TestRequestFormatTestReq) SetRequiredArrayBoolean(val []bool) {
	s.RequiredArrayBoolean = val
}

// SetRequiredArrayInteger sets the value of RequiredArrayInteger.
func (s *TestRequestFormatTestReq) SetRequiredArrayInteger(val []int) {
	s.RequiredArrayInteger = val
}

// SetRequiredArrayIntegerInt32 sets the value of RequiredArrayIntegerInt32.
func (s *TestRequestFormatTestReq) SetRequiredArrayIntegerInt32(val []int32) {
	s.RequiredArrayIntegerInt32 = val
}

// SetRequiredArrayIntegerInt64 sets the value of RequiredArrayIntegerInt64.
func (s *TestRequestFormatTestReq) SetRequiredArrayIntegerInt64(val []int64) {
	s.RequiredArrayIntegerInt64 = val
}

// SetRequiredArrayIntegerUint sets the value of RequiredArrayIntegerUint.
func (s *TestRequestFormatTestReq) SetRequiredArrayIntegerUint(val []uint) {
	s.RequiredArrayIntegerUint = val
}

// SetRequiredArrayIntegerUint32 sets the value of RequiredArrayIntegerUint32.
func (s *TestRequestFormatTestReq) SetRequiredArrayIntegerUint32(val []uint32) {
	s.RequiredArrayIntegerUint32 = val
}

// SetRequiredArrayIntegerUint64 sets the value of RequiredArrayIntegerUint64.
func (s *TestRequestFormatTestReq) SetRequiredArrayIntegerUint64(val []uint64) {
	s.RequiredArrayIntegerUint64 = val
}

// SetRequiredArrayIntegerUnix sets the value of RequiredArrayIntegerUnix.
func (s *TestRequestFormatTestReq) SetRequiredArrayIntegerUnix(val []time.Time) {
	s.RequiredArrayIntegerUnix = val
}

// SetRequiredArrayIntegerUnixMinusMicro sets the value of RequiredArrayIntegerUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetRequiredArrayIntegerUnixMinusMicro(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusMicro = val
}

// SetRequiredArrayIntegerUnixMinusMilli sets the value of RequiredArrayIntegerUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetRequiredArrayIntegerUnixMinusMilli(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusMilli = val
}

// SetRequiredArrayIntegerUnixMinusNano sets the value of RequiredArrayIntegerUnixMinusNano.
func (s *TestRequestFormatTestReq) SetRequiredArrayIntegerUnixMinusNano(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusNano = val
}

// SetRequiredArrayIntegerUnixMinusSeconds sets the value of RequiredArrayIntegerUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetRequiredArrayIntegerUnixMinusSeconds(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusSeconds = val
}

// SetRequiredArrayNull sets the value of RequiredArrayNull.
func (s *TestRequestFormatTestReq) SetRequiredArrayNull(val []struct{}) {
	s.RequiredArrayNull = val
}

// SetRequiredArrayNumber sets the value of RequiredArrayNumber.
func (s *TestRequestFormatTestReq) SetRequiredArrayNumber(val []float64) {
	s.RequiredArrayNumber = val
}

// SetRequiredArrayNumberDouble sets the value of RequiredArrayNumberDouble.
func (s *TestRequestFormatTestReq) SetRequiredArrayNumberDouble(val []float64) {
	s.RequiredArrayNumberDouble = val
}

// SetRequiredArrayNumberFloat sets the value of RequiredArrayNumberFloat.
func (s *TestRequestFormatTestReq) SetRequiredArrayNumberFloat(val []float32) {
	s.RequiredArrayNumberFloat = val
}

// SetRequiredArrayNumberInt32 sets the value of RequiredArrayNumberInt32.
func (s *TestRequestFormatTestReq) SetRequiredArrayNumberInt32(val []int32) {
	s.RequiredArrayNumberInt32 = val
}

// SetRequiredArrayNumberInt64 sets the value of RequiredArrayNumberInt64.
func (s *TestRequestFormatTestReq) SetRequiredArrayNumberInt64(val []int64) {
	s.RequiredArrayNumberInt64 = val
}

// SetRequiredArrayString sets the value of RequiredArrayString.
func (s *TestRequestFormatTestReq) SetRequiredArrayString(val []string) {
	s.RequiredArrayString = val
}

// SetRequiredArrayStringBinary sets the value of RequiredArrayStringBinary.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringBinary(val []string) {
	s.RequiredArrayStringBinary = val
}

// SetRequiredArrayStringByte sets the value of RequiredArrayStringByte.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringByte(val [][]byte) {
	s.RequiredArrayStringByte = val
}

// SetRequiredArrayStringDate sets the value of RequiredArrayStringDate.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringDate(val []time.Time) {
	s.RequiredArrayStringDate = val
}

// SetRequiredArrayStringDateMinusTime sets the value of RequiredArrayStringDateMinusTime.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringDateMinusTime(val []time.Time) {
	s.RequiredArrayStringDateMinusTime = val
}

// SetRequiredArrayStringDuration sets the value of RequiredArrayStringDuration.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringDuration(val []time.Duration) {
	s.RequiredArrayStringDuration = val
}

// SetRequiredArrayStringEmail sets the value of RequiredArrayStringEmail.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringEmail(val []string) {
	s.RequiredArrayStringEmail = val
}

// SetRequiredArrayStringHostname sets the value of RequiredArrayStringHostname.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringHostname(val []string) {
	s.RequiredArrayStringHostname = val
}

// SetRequiredArrayStringInt32 sets the value of RequiredArrayStringInt32.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringInt32(val []int32) {
	s.RequiredArrayStringInt32 = val
}

// SetRequiredArrayStringInt64 sets the value of RequiredArrayStringInt64.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringInt64(val []int64) {
	s.RequiredArrayStringInt64 = val
}

// SetRequiredArrayStringIP sets the value of RequiredArrayStringIP.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringIP(val []netip.Addr) {
	s.RequiredArrayStringIP = val
}

// SetRequiredArrayStringIpv4 sets the value of RequiredArrayStringIpv4.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringIpv4(val []netip.Addr) {
	s.RequiredArrayStringIpv4 = val
}

// SetRequiredArrayStringIpv6 sets the value of RequiredArrayStringIpv6.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringIpv6(val []netip.Addr) {
	s.RequiredArrayStringIpv6 = val
}

// SetRequiredArrayStringPassword sets the value of RequiredArrayStringPassword.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringPassword(val []string) {
	s.RequiredArrayStringPassword = val
}

// SetRequiredArrayStringTime sets the value of RequiredArrayStringTime.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringTime(val []time.Time) {
	s.RequiredArrayStringTime = val
}

// SetRequiredArrayStringUnix sets the value of RequiredArrayStringUnix.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringUnix(val []time.Time) {
	s.RequiredArrayStringUnix = val
}

// SetRequiredArrayStringUnixMinusMicro sets the value of RequiredArrayStringUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringUnixMinusMicro(val []time.Time) {
	s.RequiredArrayStringUnixMinusMicro = val
}

// SetRequiredArrayStringUnixMinusMilli sets the value of RequiredArrayStringUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringUnixMinusMilli(val []time.Time) {
	s.RequiredArrayStringUnixMinusMilli = val
}

// SetRequiredArrayStringUnixMinusNano sets the value of RequiredArrayStringUnixMinusNano.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringUnixMinusNano(val []time.Time) {
	s.RequiredArrayStringUnixMinusNano = val
}

// SetRequiredArrayStringUnixMinusSeconds sets the value of RequiredArrayStringUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringUnixMinusSeconds(val []time.Time) {
	s.RequiredArrayStringUnixMinusSeconds = val
}

// SetRequiredArrayStringURI sets the value of RequiredArrayStringURI.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringURI(val []url.URL) {
	s.RequiredArrayStringURI = val
}

// SetRequiredArrayStringUUID sets the value of RequiredArrayStringUUID.
func (s *TestRequestFormatTestReq) SetRequiredArrayStringUUID(val []uuid.UUID) {
	s.RequiredArrayStringUUID = val
}

// SetRequiredBoolean sets the value of RequiredBoolean.
func (s *TestRequestFormatTestReq) SetRequiredBoolean(val bool) {
	s.RequiredBoolean = val
}

// SetRequiredDoubleArrayAny sets the value of RequiredDoubleArrayAny.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayAny(val [][]jx.Raw) {
	s.RequiredDoubleArrayAny = val
}

// SetRequiredDoubleArrayBoolean sets the value of RequiredDoubleArrayBoolean.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayBoolean(val [][]bool) {
	s.RequiredDoubleArrayBoolean = val
}

// SetRequiredDoubleArrayInteger sets the value of RequiredDoubleArrayInteger.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayInteger(val [][]int) {
	s.RequiredDoubleArrayInteger = val
}

// SetRequiredDoubleArrayIntegerInt32 sets the value of RequiredDoubleArrayIntegerInt32.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayIntegerInt32(val [][]int32) {
	s.RequiredDoubleArrayIntegerInt32 = val
}

// SetRequiredDoubleArrayIntegerInt64 sets the value of RequiredDoubleArrayIntegerInt64.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayIntegerInt64(val [][]int64) {
	s.RequiredDoubleArrayIntegerInt64 = val
}

// SetRequiredDoubleArrayIntegerUint sets the value of RequiredDoubleArrayIntegerUint.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayIntegerUint(val [][]uint) {
	s.RequiredDoubleArrayIntegerUint = val
}

// SetRequiredDoubleArrayIntegerUint32 sets the value of RequiredDoubleArrayIntegerUint32.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayIntegerUint32(val [][]uint32) {
	s.RequiredDoubleArrayIntegerUint32 = val
}

// SetRequiredDoubleArrayIntegerUint64 sets the value of RequiredDoubleArrayIntegerUint64.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayIntegerUint64(val [][]uint64) {
	s.RequiredDoubleArrayIntegerUint64 = val
}

// SetRequiredDoubleArrayIntegerUnix sets the value of RequiredDoubleArrayIntegerUnix.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayIntegerUnix(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnix = val
}

// SetRequiredDoubleArrayIntegerUnixMinusMicro sets the value of RequiredDoubleArrayIntegerUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayIntegerUnixMinusMicro(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusMicro = val
}

// SetRequiredDoubleArrayIntegerUnixMinusMilli sets the value of RequiredDoubleArrayIntegerUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayIntegerUnixMinusMilli(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusMilli = val
}

// SetRequiredDoubleArrayIntegerUnixMinusNano sets the value of RequiredDoubleArrayIntegerUnixMinusNano.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayIntegerUnixMinusNano(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusNano = val
}

// SetRequiredDoubleArrayIntegerUnixMinusSeconds sets the value of RequiredDoubleArrayIntegerUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayIntegerUnixMinusSeconds(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusSeconds = val
}

// SetRequiredDoubleArrayNull sets the value of RequiredDoubleArrayNull.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayNull(val [][]struct{}) {
	s.RequiredDoubleArrayNull = val
}

// SetRequiredDoubleArrayNumber sets the value of RequiredDoubleArrayNumber.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayNumber(val [][]float64) {
	s.RequiredDoubleArrayNumber = val
}

// SetRequiredDoubleArrayNumberDouble sets the value of RequiredDoubleArrayNumberDouble.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayNumberDouble(val [][]float64) {
	s.RequiredDoubleArrayNumberDouble = val
}

// SetRequiredDoubleArrayNumberFloat sets the value of RequiredDoubleArrayNumberFloat.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayNumberFloat(val [][]float32) {
	s.RequiredDoubleArrayNumberFloat = val
}

// SetRequiredDoubleArrayNumberInt32 sets the value of RequiredDoubleArrayNumberInt32.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayNumberInt32(val [][]int32) {
	s.RequiredDoubleArrayNumberInt32 = val
}

// SetRequiredDoubleArrayNumberInt64 sets the value of RequiredDoubleArrayNumberInt64.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayNumberInt64(val [][]int64) {
	s.RequiredDoubleArrayNumberInt64 = val
}

// SetRequiredDoubleArrayString sets the value of RequiredDoubleArrayString.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayString(val [][]string) {
	s.RequiredDoubleArrayString = val
}

// SetRequiredDoubleArrayStringBinary sets the value of RequiredDoubleArrayStringBinary.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringBinary(val [][]string) {
	s.RequiredDoubleArrayStringBinary = val
}

// SetRequiredDoubleArrayStringByte sets the value of RequiredDoubleArrayStringByte.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringByte(val [][][]byte) {
	s.RequiredDoubleArrayStringByte = val
}

// SetRequiredDoubleArrayStringDate sets the value of RequiredDoubleArrayStringDate.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringDate(val [][]time.Time) {
	s.RequiredDoubleArrayStringDate = val
}

// SetRequiredDoubleArrayStringDateMinusTime sets the value of RequiredDoubleArrayStringDateMinusTime.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringDateMinusTime(val [][]time.Time) {
	s.RequiredDoubleArrayStringDateMinusTime = val
}

// SetRequiredDoubleArrayStringDuration sets the value of RequiredDoubleArrayStringDuration.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringDuration(val [][]time.Duration) {
	s.RequiredDoubleArrayStringDuration = val
}

// SetRequiredDoubleArrayStringEmail sets the value of RequiredDoubleArrayStringEmail.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringEmail(val [][]string) {
	s.RequiredDoubleArrayStringEmail = val
}

// SetRequiredDoubleArrayStringHostname sets the value of RequiredDoubleArrayStringHostname.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringHostname(val [][]string) {
	s.RequiredDoubleArrayStringHostname = val
}

// SetRequiredDoubleArrayStringInt32 sets the value of RequiredDoubleArrayStringInt32.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringInt32(val [][]int32) {
	s.RequiredDoubleArrayStringInt32 = val
}

// SetRequiredDoubleArrayStringInt64 sets the value of RequiredDoubleArrayStringInt64.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringInt64(val [][]int64) {
	s.RequiredDoubleArrayStringInt64 = val
}

// SetRequiredDoubleArrayStringIP sets the value of RequiredDoubleArrayStringIP.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringIP(val [][]netip.Addr) {
	s.RequiredDoubleArrayStringIP = val
}

// SetRequiredDoubleArrayStringIpv4 sets the value of RequiredDoubleArrayStringIpv4.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringIpv4(val [][]netip.Addr) {
	s.RequiredDoubleArrayStringIpv4 = val
}

// SetRequiredDoubleArrayStringIpv6 sets the value of RequiredDoubleArrayStringIpv6.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringIpv6(val [][]netip.Addr) {
	s.RequiredDoubleArrayStringIpv6 = val
}

// SetRequiredDoubleArrayStringPassword sets the value of RequiredDoubleArrayStringPassword.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringPassword(val [][]string) {
	s.RequiredDoubleArrayStringPassword = val
}

// SetRequiredDoubleArrayStringTime sets the value of RequiredDoubleArrayStringTime.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringTime(val [][]time.Time) {
	s.RequiredDoubleArrayStringTime = val
}

// SetRequiredDoubleArrayStringUnix sets the value of RequiredDoubleArrayStringUnix.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringUnix(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnix = val
}

// SetRequiredDoubleArrayStringUnixMinusMicro sets the value of RequiredDoubleArrayStringUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringUnixMinusMicro(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusMicro = val
}

// SetRequiredDoubleArrayStringUnixMinusMilli sets the value of RequiredDoubleArrayStringUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringUnixMinusMilli(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusMilli = val
}

// SetRequiredDoubleArrayStringUnixMinusNano sets the value of RequiredDoubleArrayStringUnixMinusNano.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringUnixMinusNano(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusNano = val
}

// SetRequiredDoubleArrayStringUnixMinusSeconds sets the value of RequiredDoubleArrayStringUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringUnixMinusSeconds(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusSeconds = val
}

// SetRequiredDoubleArrayStringURI sets the value of RequiredDoubleArrayStringURI.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringURI(val [][]url.URL) {
	s.RequiredDoubleArrayStringURI = val
}

// SetRequiredDoubleArrayStringUUID sets the value of RequiredDoubleArrayStringUUID.
func (s *TestRequestFormatTestReq) SetRequiredDoubleArrayStringUUID(val [][]uuid.UUID) {
	s.RequiredDoubleArrayStringUUID = val
}

// SetRequiredInteger sets the value of RequiredInteger.
func (s *TestRequestFormatTestReq) SetRequiredInteger(val int) {
	s.RequiredInteger = val
}

// SetRequiredIntegerInt32 sets the value of RequiredIntegerInt32.
func (s *TestRequestFormatTestReq) SetRequiredIntegerInt32(val int32) {
	s.RequiredIntegerInt32 = val
}

// SetRequiredIntegerInt64 sets the value of RequiredIntegerInt64.
func (s *TestRequestFormatTestReq) SetRequiredIntegerInt64(val int64) {
	s.RequiredIntegerInt64 = val
}

// SetRequiredIntegerUint sets the value of RequiredIntegerUint.
func (s *TestRequestFormatTestReq) SetRequiredIntegerUint(val uint) {
	s.RequiredIntegerUint = val
}

// SetRequiredIntegerUint32 sets the value of RequiredIntegerUint32.
func (s *TestRequestFormatTestReq) SetRequiredIntegerUint32(val uint32) {
	s.RequiredIntegerUint32 = val
}

// SetRequiredIntegerUint64 sets the value of RequiredIntegerUint64.
func (s *TestRequestFormatTestReq) SetRequiredIntegerUint64(val uint64) {
	s.RequiredIntegerUint64 = val
}

// SetRequiredIntegerUnix sets the value of RequiredIntegerUnix.
func (s *TestRequestFormatTestReq) SetRequiredIntegerUnix(val time.Time) {
	s.RequiredIntegerUnix = val
}

// SetRequiredIntegerUnixMinusMicro sets the value of RequiredIntegerUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetRequiredIntegerUnixMinusMicro(val time.Time) {
	s.RequiredIntegerUnixMinusMicro = val
}

// SetRequiredIntegerUnixMinusMilli sets the value of RequiredIntegerUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetRequiredIntegerUnixMinusMilli(val time.Time) {
	s.RequiredIntegerUnixMinusMilli = val
}

// SetRequiredIntegerUnixMinusNano sets the value of RequiredIntegerUnixMinusNano.
func (s *TestRequestFormatTestReq) SetRequiredIntegerUnixMinusNano(val time.Time) {
	s.RequiredIntegerUnixMinusNano = val
}

// SetRequiredIntegerUnixMinusSeconds sets the value of RequiredIntegerUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetRequiredIntegerUnixMinusSeconds(val time.Time) {
	s.RequiredIntegerUnixMinusSeconds = val
}

// SetRequiredNull sets the value of RequiredNull.
func (s *TestRequestFormatTestReq) SetRequiredNull(val struct{}) {
	s.RequiredNull = val
}

// SetRequiredNumber sets the value of RequiredNumber.
func (s *TestRequestFormatTestReq) SetRequiredNumber(val float64) {
	s.RequiredNumber = val
}

// SetRequiredNumberDouble sets the value of RequiredNumberDouble.
func (s *TestRequestFormatTestReq) SetRequiredNumberDouble(val float64) {
	s.RequiredNumberDouble = val
}

// SetRequiredNumberFloat sets the value of RequiredNumberFloat.
func (s *TestRequestFormatTestReq) SetRequiredNumberFloat(val float32) {
	s.RequiredNumberFloat = val
}

// SetRequiredNumberInt32 sets the value of RequiredNumberInt32.
func (s *TestRequestFormatTestReq) SetRequiredNumberInt32(val int32) {
	s.RequiredNumberInt32 = val
}

// SetRequiredNumberInt64 sets the value of RequiredNumberInt64.
func (s *TestRequestFormatTestReq) SetRequiredNumberInt64(val int64) {
	s.RequiredNumberInt64 = val
}

// SetRequiredString sets the value of RequiredString.
func (s *TestRequestFormatTestReq) SetRequiredString(val string) {
	s.RequiredString = val
}

// SetRequiredStringBinary sets the value of RequiredStringBinary.
func (s *TestRequestFormatTestReq) SetRequiredStringBinary(val string) {
	s.RequiredStringBinary = val
}

// SetRequiredStringByte sets the value of RequiredStringByte.
func (s *TestRequestFormatTestReq) SetRequiredStringByte(val []byte) {
	s.RequiredStringByte = val
}

// SetRequiredStringDate sets the value of RequiredStringDate.
func (s *TestRequestFormatTestReq) SetRequiredStringDate(val time.Time) {
	s.RequiredStringDate = val
}

// SetRequiredStringDateMinusTime sets the value of RequiredStringDateMinusTime.
func (s *TestRequestFormatTestReq) SetRequiredStringDateMinusTime(val time.Time) {
	s.RequiredStringDateMinusTime = val
}

// SetRequiredStringDuration sets the value of RequiredStringDuration.
func (s *TestRequestFormatTestReq) SetRequiredStringDuration(val time.Duration) {
	s.RequiredStringDuration = val
}

// SetRequiredStringEmail sets the value of RequiredStringEmail.
func (s *TestRequestFormatTestReq) SetRequiredStringEmail(val string) {
	s.RequiredStringEmail = val
}

// SetRequiredStringHostname sets the value of RequiredStringHostname.
func (s *TestRequestFormatTestReq) SetRequiredStringHostname(val string) {
	s.RequiredStringHostname = val
}

// SetRequiredStringInt32 sets the value of RequiredStringInt32.
func (s *TestRequestFormatTestReq) SetRequiredStringInt32(val int32) {
	s.RequiredStringInt32 = val
}

// SetRequiredStringInt64 sets the value of RequiredStringInt64.
func (s *TestRequestFormatTestReq) SetRequiredStringInt64(val int64) {
	s.RequiredStringInt64 = val
}

// SetRequiredStringIP sets the value of RequiredStringIP.
func (s *TestRequestFormatTestReq) SetRequiredStringIP(val netip.Addr) {
	s.RequiredStringIP = val
}

// SetRequiredStringIpv4 sets the value of RequiredStringIpv4.
func (s *TestRequestFormatTestReq) SetRequiredStringIpv4(val netip.Addr) {
	s.RequiredStringIpv4 = val
}

// SetRequiredStringIpv6 sets the value of RequiredStringIpv6.
func (s *TestRequestFormatTestReq) SetRequiredStringIpv6(val netip.Addr) {
	s.RequiredStringIpv6 = val
}

// SetRequiredStringPassword sets the value of RequiredStringPassword.
func (s *TestRequestFormatTestReq) SetRequiredStringPassword(val string) {
	s.RequiredStringPassword = val
}

// SetRequiredStringTime sets the value of RequiredStringTime.
func (s *TestRequestFormatTestReq) SetRequiredStringTime(val time.Time) {
	s.RequiredStringTime = val
}

// SetRequiredStringUnix sets the value of RequiredStringUnix.
func (s *TestRequestFormatTestReq) SetRequiredStringUnix(val time.Time) {
	s.RequiredStringUnix = val
}

// SetRequiredStringUnixMinusMicro sets the value of RequiredStringUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetRequiredStringUnixMinusMicro(val time.Time) {
	s.RequiredStringUnixMinusMicro = val
}

// SetRequiredStringUnixMinusMilli sets the value of RequiredStringUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetRequiredStringUnixMinusMilli(val time.Time) {
	s.RequiredStringUnixMinusMilli = val
}

// SetRequiredStringUnixMinusNano sets the value of RequiredStringUnixMinusNano.
func (s *TestRequestFormatTestReq) SetRequiredStringUnixMinusNano(val time.Time) {
	s.RequiredStringUnixMinusNano = val
}

// SetRequiredStringUnixMinusSeconds sets the value of RequiredStringUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetRequiredStringUnixMinusSeconds(val time.Time) {
	s.RequiredStringUnixMinusSeconds = val
}

// SetRequiredStringURI sets the value of RequiredStringURI.
func (s *TestRequestFormatTestReq) SetRequiredStringURI(val url.URL) {
	s.RequiredStringURI = val
}

// SetRequiredStringUUID sets the value of RequiredStringUUID.
func (s *TestRequestFormatTestReq) SetRequiredStringUUID(val uuid.UUID) {
	s.RequiredStringUUID = val
}

// SetOptionalAny sets the value of OptionalAny.
func (s *TestRequestFormatTestReq) SetOptionalAny(val jx.Raw) {
	s.OptionalAny = val
}

// SetOptionalArrayAny sets the value of OptionalArrayAny.
func (s *TestRequestFormatTestReq) SetOptionalArrayAny(val []jx.Raw) {
	s.OptionalArrayAny = val
}

// SetOptionalArrayBoolean sets the value of OptionalArrayBoolean.
func (s *TestRequestFormatTestReq) SetOptionalArrayBoolean(val []bool) {
	s.OptionalArrayBoolean = val
}

// SetOptionalArrayInteger sets the value of OptionalArrayInteger.
func (s *TestRequestFormatTestReq) SetOptionalArrayInteger(val []int) {
	s.OptionalArrayInteger = val
}

// SetOptionalArrayIntegerInt32 sets the value of OptionalArrayIntegerInt32.
func (s *TestRequestFormatTestReq) SetOptionalArrayIntegerInt32(val []int32) {
	s.OptionalArrayIntegerInt32 = val
}

// SetOptionalArrayIntegerInt64 sets the value of OptionalArrayIntegerInt64.
func (s *TestRequestFormatTestReq) SetOptionalArrayIntegerInt64(val []int64) {
	s.OptionalArrayIntegerInt64 = val
}

// SetOptionalArrayIntegerUint sets the value of OptionalArrayIntegerUint.
func (s *TestRequestFormatTestReq) SetOptionalArrayIntegerUint(val []uint) {
	s.OptionalArrayIntegerUint = val
}

// SetOptionalArrayIntegerUint32 sets the value of OptionalArrayIntegerUint32.
func (s *TestRequestFormatTestReq) SetOptionalArrayIntegerUint32(val []uint32) {
	s.OptionalArrayIntegerUint32 = val
}

// SetOptionalArrayIntegerUint64 sets the value of OptionalArrayIntegerUint64.
func (s *TestRequestFormatTestReq) SetOptionalArrayIntegerUint64(val []uint64) {
	s.OptionalArrayIntegerUint64 = val
}

// SetOptionalArrayIntegerUnix sets the value of OptionalArrayIntegerUnix.
func (s *TestRequestFormatTestReq) SetOptionalArrayIntegerUnix(val []time.Time) {
	s.OptionalArrayIntegerUnix = val
}

// SetOptionalArrayIntegerUnixMinusMicro sets the value of OptionalArrayIntegerUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetOptionalArrayIntegerUnixMinusMicro(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusMicro = val
}

// SetOptionalArrayIntegerUnixMinusMilli sets the value of OptionalArrayIntegerUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetOptionalArrayIntegerUnixMinusMilli(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusMilli = val
}

// SetOptionalArrayIntegerUnixMinusNano sets the value of OptionalArrayIntegerUnixMinusNano.
func (s *TestRequestFormatTestReq) SetOptionalArrayIntegerUnixMinusNano(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusNano = val
}

// SetOptionalArrayIntegerUnixMinusSeconds sets the value of OptionalArrayIntegerUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetOptionalArrayIntegerUnixMinusSeconds(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusSeconds = val
}

// SetOptionalArrayNull sets the value of OptionalArrayNull.
func (s *TestRequestFormatTestReq) SetOptionalArrayNull(val []struct{}) {
	s.OptionalArrayNull = val
}

// SetOptionalArrayNumber sets the value of OptionalArrayNumber.
func (s *TestRequestFormatTestReq) SetOptionalArrayNumber(val []float64) {
	s.OptionalArrayNumber = val
}

// SetOptionalArrayNumberDouble sets the value of OptionalArrayNumberDouble.
func (s *TestRequestFormatTestReq) SetOptionalArrayNumberDouble(val []float64) {
	s.OptionalArrayNumberDouble = val
}

// SetOptionalArrayNumberFloat sets the value of OptionalArrayNumberFloat.
func (s *TestRequestFormatTestReq) SetOptionalArrayNumberFloat(val []float32) {
	s.OptionalArrayNumberFloat = val
}

// SetOptionalArrayNumberInt32 sets the value of OptionalArrayNumberInt32.
func (s *TestRequestFormatTestReq) SetOptionalArrayNumberInt32(val []int32) {
	s.OptionalArrayNumberInt32 = val
}

// SetOptionalArrayNumberInt64 sets the value of OptionalArrayNumberInt64.
func (s *TestRequestFormatTestReq) SetOptionalArrayNumberInt64(val []int64) {
	s.OptionalArrayNumberInt64 = val
}

// SetOptionalArrayString sets the value of OptionalArrayString.
func (s *TestRequestFormatTestReq) SetOptionalArrayString(val []string) {
	s.OptionalArrayString = val
}

// SetOptionalArrayStringBinary sets the value of OptionalArrayStringBinary.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringBinary(val []string) {
	s.OptionalArrayStringBinary = val
}

// SetOptionalArrayStringByte sets the value of OptionalArrayStringByte.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringByte(val [][]byte) {
	s.OptionalArrayStringByte = val
}

// SetOptionalArrayStringDate sets the value of OptionalArrayStringDate.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringDate(val []time.Time) {
	s.OptionalArrayStringDate = val
}

// SetOptionalArrayStringDateMinusTime sets the value of OptionalArrayStringDateMinusTime.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringDateMinusTime(val []time.Time) {
	s.OptionalArrayStringDateMinusTime = val
}

// SetOptionalArrayStringDuration sets the value of OptionalArrayStringDuration.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringDuration(val []time.Duration) {
	s.OptionalArrayStringDuration = val
}

// SetOptionalArrayStringEmail sets the value of OptionalArrayStringEmail.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringEmail(val []string) {
	s.OptionalArrayStringEmail = val
}

// SetOptionalArrayStringHostname sets the value of OptionalArrayStringHostname.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringHostname(val []string) {
	s.OptionalArrayStringHostname = val
}

// SetOptionalArrayStringInt32 sets the value of OptionalArrayStringInt32.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringInt32(val []int32) {
	s.OptionalArrayStringInt32 = val
}

// SetOptionalArrayStringInt64 sets the value of OptionalArrayStringInt64.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringInt64(val []int64) {
	s.OptionalArrayStringInt64 = val
}

// SetOptionalArrayStringIP sets the value of OptionalArrayStringIP.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringIP(val []netip.Addr) {
	s.OptionalArrayStringIP = val
}

// SetOptionalArrayStringIpv4 sets the value of OptionalArrayStringIpv4.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringIpv4(val []netip.Addr) {
	s.OptionalArrayStringIpv4 = val
}

// SetOptionalArrayStringIpv6 sets the value of OptionalArrayStringIpv6.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringIpv6(val []netip.Addr) {
	s.OptionalArrayStringIpv6 = val
}

// SetOptionalArrayStringPassword sets the value of OptionalArrayStringPassword.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringPassword(val []string) {
	s.OptionalArrayStringPassword = val
}

// SetOptionalArrayStringTime sets the value of OptionalArrayStringTime.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringTime(val []time.Time) {
	s.OptionalArrayStringTime = val
}

// SetOptionalArrayStringUnix sets the value of OptionalArrayStringUnix.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringUnix(val []time.Time) {
	s.OptionalArrayStringUnix = val
}

// SetOptionalArrayStringUnixMinusMicro sets the value of OptionalArrayStringUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringUnixMinusMicro(val []time.Time) {
	s.OptionalArrayStringUnixMinusMicro = val
}

// SetOptionalArrayStringUnixMinusMilli sets the value of OptionalArrayStringUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringUnixMinusMilli(val []time.Time) {
	s.OptionalArrayStringUnixMinusMilli = val
}

// SetOptionalArrayStringUnixMinusNano sets the value of OptionalArrayStringUnixMinusNano.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringUnixMinusNano(val []time.Time) {
	s.OptionalArrayStringUnixMinusNano = val
}

// SetOptionalArrayStringUnixMinusSeconds sets the value of OptionalArrayStringUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringUnixMinusSeconds(val []time.Time) {
	s.OptionalArrayStringUnixMinusSeconds = val
}

// SetOptionalArrayStringURI sets the value of OptionalArrayStringURI.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringURI(val []url.URL) {
	s.OptionalArrayStringURI = val
}

// SetOptionalArrayStringUUID sets the value of OptionalArrayStringUUID.
func (s *TestRequestFormatTestReq) SetOptionalArrayStringUUID(val []uuid.UUID) {
	s.OptionalArrayStringUUID = val
}

// SetOptionalBoolean sets the value of OptionalBoolean.
func (s *TestRequestFormatTestReq) SetOptionalBoolean(val OptBool) {
	s.OptionalBoolean = val
}

// SetOptionalDoubleArrayAny sets the value of OptionalDoubleArrayAny.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayAny(val [][]jx.Raw) {
	s.OptionalDoubleArrayAny = val
}

// SetOptionalDoubleArrayBoolean sets the value of OptionalDoubleArrayBoolean.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayBoolean(val [][]bool) {
	s.OptionalDoubleArrayBoolean = val
}

// SetOptionalDoubleArrayInteger sets the value of OptionalDoubleArrayInteger.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayInteger(val [][]int) {
	s.OptionalDoubleArrayInteger = val
}

// SetOptionalDoubleArrayIntegerInt32 sets the value of OptionalDoubleArrayIntegerInt32.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayIntegerInt32(val [][]int32) {
	s.OptionalDoubleArrayIntegerInt32 = val
}

// SetOptionalDoubleArrayIntegerInt64 sets the value of OptionalDoubleArrayIntegerInt64.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayIntegerInt64(val [][]int64) {
	s.OptionalDoubleArrayIntegerInt64 = val
}

// SetOptionalDoubleArrayIntegerUint sets the value of OptionalDoubleArrayIntegerUint.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayIntegerUint(val [][]uint) {
	s.OptionalDoubleArrayIntegerUint = val
}

// SetOptionalDoubleArrayIntegerUint32 sets the value of OptionalDoubleArrayIntegerUint32.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayIntegerUint32(val [][]uint32) {
	s.OptionalDoubleArrayIntegerUint32 = val
}

// SetOptionalDoubleArrayIntegerUint64 sets the value of OptionalDoubleArrayIntegerUint64.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayIntegerUint64(val [][]uint64) {
	s.OptionalDoubleArrayIntegerUint64 = val
}

// SetOptionalDoubleArrayIntegerUnix sets the value of OptionalDoubleArrayIntegerUnix.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayIntegerUnix(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnix = val
}

// SetOptionalDoubleArrayIntegerUnixMinusMicro sets the value of OptionalDoubleArrayIntegerUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayIntegerUnixMinusMicro(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusMicro = val
}

// SetOptionalDoubleArrayIntegerUnixMinusMilli sets the value of OptionalDoubleArrayIntegerUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayIntegerUnixMinusMilli(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusMilli = val
}

// SetOptionalDoubleArrayIntegerUnixMinusNano sets the value of OptionalDoubleArrayIntegerUnixMinusNano.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayIntegerUnixMinusNano(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusNano = val
}

// SetOptionalDoubleArrayIntegerUnixMinusSeconds sets the value of OptionalDoubleArrayIntegerUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayIntegerUnixMinusSeconds(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusSeconds = val
}

// SetOptionalDoubleArrayNull sets the value of OptionalDoubleArrayNull.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayNull(val [][]struct{}) {
	s.OptionalDoubleArrayNull = val
}

// SetOptionalDoubleArrayNumber sets the value of OptionalDoubleArrayNumber.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayNumber(val [][]float64) {
	s.OptionalDoubleArrayNumber = val
}

// SetOptionalDoubleArrayNumberDouble sets the value of OptionalDoubleArrayNumberDouble.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayNumberDouble(val [][]float64) {
	s.OptionalDoubleArrayNumberDouble = val
}

// SetOptionalDoubleArrayNumberFloat sets the value of OptionalDoubleArrayNumberFloat.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayNumberFloat(val [][]float32) {
	s.OptionalDoubleArrayNumberFloat = val
}

// SetOptionalDoubleArrayNumberInt32 sets the value of OptionalDoubleArrayNumberInt32.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayNumberInt32(val [][]int32) {
	s.OptionalDoubleArrayNumberInt32 = val
}

// SetOptionalDoubleArrayNumberInt64 sets the value of OptionalDoubleArrayNumberInt64.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayNumberInt64(val [][]int64) {
	s.OptionalDoubleArrayNumberInt64 = val
}

// SetOptionalDoubleArrayString sets the value of OptionalDoubleArrayString.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayString(val [][]string) {
	s.OptionalDoubleArrayString = val
}

// SetOptionalDoubleArrayStringBinary sets the value of OptionalDoubleArrayStringBinary.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringBinary(val [][]string) {
	s.OptionalDoubleArrayStringBinary = val
}

// SetOptionalDoubleArrayStringByte sets the value of OptionalDoubleArrayStringByte.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringByte(val [][][]byte) {
	s.OptionalDoubleArrayStringByte = val
}

// SetOptionalDoubleArrayStringDate sets the value of OptionalDoubleArrayStringDate.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringDate(val [][]time.Time) {
	s.OptionalDoubleArrayStringDate = val
}

// SetOptionalDoubleArrayStringDateMinusTime sets the value of OptionalDoubleArrayStringDateMinusTime.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringDateMinusTime(val [][]time.Time) {
	s.OptionalDoubleArrayStringDateMinusTime = val
}

// SetOptionalDoubleArrayStringDuration sets the value of OptionalDoubleArrayStringDuration.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringDuration(val [][]time.Duration) {
	s.OptionalDoubleArrayStringDuration = val
}

// SetOptionalDoubleArrayStringEmail sets the value of OptionalDoubleArrayStringEmail.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringEmail(val [][]string) {
	s.OptionalDoubleArrayStringEmail = val
}

// SetOptionalDoubleArrayStringHostname sets the value of OptionalDoubleArrayStringHostname.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringHostname(val [][]string) {
	s.OptionalDoubleArrayStringHostname = val
}

// SetOptionalDoubleArrayStringInt32 sets the value of OptionalDoubleArrayStringInt32.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringInt32(val [][]int32) {
	s.OptionalDoubleArrayStringInt32 = val
}

// SetOptionalDoubleArrayStringInt64 sets the value of OptionalDoubleArrayStringInt64.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringInt64(val [][]int64) {
	s.OptionalDoubleArrayStringInt64 = val
}

// SetOptionalDoubleArrayStringIP sets the value of OptionalDoubleArrayStringIP.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringIP(val [][]netip.Addr) {
	s.OptionalDoubleArrayStringIP = val
}

// SetOptionalDoubleArrayStringIpv4 sets the value of OptionalDoubleArrayStringIpv4.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringIpv4(val [][]netip.Addr) {
	s.OptionalDoubleArrayStringIpv4 = val
}

// SetOptionalDoubleArrayStringIpv6 sets the value of OptionalDoubleArrayStringIpv6.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringIpv6(val [][]netip.Addr) {
	s.OptionalDoubleArrayStringIpv6 = val
}

// SetOptionalDoubleArrayStringPassword sets the value of OptionalDoubleArrayStringPassword.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringPassword(val [][]string) {
	s.OptionalDoubleArrayStringPassword = val
}

// SetOptionalDoubleArrayStringTime sets the value of OptionalDoubleArrayStringTime.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringTime(val [][]time.Time) {
	s.OptionalDoubleArrayStringTime = val
}

// SetOptionalDoubleArrayStringUnix sets the value of OptionalDoubleArrayStringUnix.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringUnix(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnix = val
}

// SetOptionalDoubleArrayStringUnixMinusMicro sets the value of OptionalDoubleArrayStringUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringUnixMinusMicro(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusMicro = val
}

// SetOptionalDoubleArrayStringUnixMinusMilli sets the value of OptionalDoubleArrayStringUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringUnixMinusMilli(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusMilli = val
}

// SetOptionalDoubleArrayStringUnixMinusNano sets the value of OptionalDoubleArrayStringUnixMinusNano.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringUnixMinusNano(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusNano = val
}

// SetOptionalDoubleArrayStringUnixMinusSeconds sets the value of OptionalDoubleArrayStringUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringUnixMinusSeconds(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusSeconds = val
}

// SetOptionalDoubleArrayStringURI sets the value of OptionalDoubleArrayStringURI.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringURI(val [][]url.URL) {
	s.OptionalDoubleArrayStringURI = val
}

// SetOptionalDoubleArrayStringUUID sets the value of OptionalDoubleArrayStringUUID.
func (s *TestRequestFormatTestReq) SetOptionalDoubleArrayStringUUID(val [][]uuid.UUID) {
	s.OptionalDoubleArrayStringUUID = val
}

// SetOptionalInteger sets the value of OptionalInteger.
func (s *TestRequestFormatTestReq) SetOptionalInteger(val OptInt) {
	s.OptionalInteger = val
}

// SetOptionalIntegerInt32 sets the value of OptionalIntegerInt32.
func (s *TestRequestFormatTestReq) SetOptionalIntegerInt32(val OptInt32) {
	s.OptionalIntegerInt32 = val
}

// SetOptionalIntegerInt64 sets the value of OptionalIntegerInt64.
func (s *TestRequestFormatTestReq) SetOptionalIntegerInt64(val OptInt64) {
	s.OptionalIntegerInt64 = val
}

// SetOptionalIntegerUint sets the value of OptionalIntegerUint.
func (s *TestRequestFormatTestReq) SetOptionalIntegerUint(val OptUint) {
	s.OptionalIntegerUint = val
}

// SetOptionalIntegerUint32 sets the value of OptionalIntegerUint32.
func (s *TestRequestFormatTestReq) SetOptionalIntegerUint32(val OptUint32) {
	s.OptionalIntegerUint32 = val
}

// SetOptionalIntegerUint64 sets the value of OptionalIntegerUint64.
func (s *TestRequestFormatTestReq) SetOptionalIntegerUint64(val OptUint64) {
	s.OptionalIntegerUint64 = val
}

// SetOptionalIntegerUnix sets the value of OptionalIntegerUnix.
func (s *TestRequestFormatTestReq) SetOptionalIntegerUnix(val OptUnixSeconds) {
	s.OptionalIntegerUnix = val
}

// SetOptionalIntegerUnixMinusMicro sets the value of OptionalIntegerUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetOptionalIntegerUnixMinusMicro(val OptUnixMicro) {
	s.OptionalIntegerUnixMinusMicro = val
}

// SetOptionalIntegerUnixMinusMilli sets the value of OptionalIntegerUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetOptionalIntegerUnixMinusMilli(val OptUnixMilli) {
	s.OptionalIntegerUnixMinusMilli = val
}

// SetOptionalIntegerUnixMinusNano sets the value of OptionalIntegerUnixMinusNano.
func (s *TestRequestFormatTestReq) SetOptionalIntegerUnixMinusNano(val OptUnixNano) {
	s.OptionalIntegerUnixMinusNano = val
}

// SetOptionalIntegerUnixMinusSeconds sets the value of OptionalIntegerUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetOptionalIntegerUnixMinusSeconds(val OptUnixSeconds) {
	s.OptionalIntegerUnixMinusSeconds = val
}

// SetOptionalNull sets the value of OptionalNull.
func (s *TestRequestFormatTestReq) SetOptionalNull(val OptNull) {
	s.OptionalNull = val
}

// SetOptionalNumber sets the value of OptionalNumber.
func (s *TestRequestFormatTestReq) SetOptionalNumber(val OptFloat64) {
	s.OptionalNumber = val
}

// SetOptionalNumberDouble sets the value of OptionalNumberDouble.
func (s *TestRequestFormatTestReq) SetOptionalNumberDouble(val OptFloat64) {
	s.OptionalNumberDouble = val
}

// SetOptionalNumberFloat sets the value of OptionalNumberFloat.
func (s *TestRequestFormatTestReq) SetOptionalNumberFloat(val OptFloat32) {
	s.OptionalNumberFloat = val
}

// SetOptionalNumberInt32 sets the value of OptionalNumberInt32.
func (s *TestRequestFormatTestReq) SetOptionalNumberInt32(val OptInt32) {
	s.OptionalNumberInt32 = val
}

// SetOptionalNumberInt64 sets the value of OptionalNumberInt64.
func (s *TestRequestFormatTestReq) SetOptionalNumberInt64(val OptInt64) {
	s.OptionalNumberInt64 = val
}

// SetOptionalString sets the value of OptionalString.
func (s *TestRequestFormatTestReq) SetOptionalString(val OptString) {
	s.OptionalString = val
}

// SetOptionalStringBinary sets the value of OptionalStringBinary.
func (s *TestRequestFormatTestReq) SetOptionalStringBinary(val OptString) {
	s.OptionalStringBinary = val
}

// SetOptionalStringByte sets the value of OptionalStringByte.
func (s *TestRequestFormatTestReq) SetOptionalStringByte(val []byte) {
	s.OptionalStringByte = val
}

// SetOptionalStringDate sets the value of OptionalStringDate.
func (s *TestRequestFormatTestReq) SetOptionalStringDate(val OptDate) {
	s.OptionalStringDate = val
}

// SetOptionalStringDateMinusTime sets the value of OptionalStringDateMinusTime.
func (s *TestRequestFormatTestReq) SetOptionalStringDateMinusTime(val OptDateTime) {
	s.OptionalStringDateMinusTime = val
}

// SetOptionalStringDuration sets the value of OptionalStringDuration.
func (s *TestRequestFormatTestReq) SetOptionalStringDuration(val OptDuration) {
	s.OptionalStringDuration = val
}

// SetOptionalStringEmail sets the value of OptionalStringEmail.
func (s *TestRequestFormatTestReq) SetOptionalStringEmail(val OptString) {
	s.OptionalStringEmail = val
}

// SetOptionalStringHostname sets the value of OptionalStringHostname.
func (s *TestRequestFormatTestReq) SetOptionalStringHostname(val OptString) {
	s.OptionalStringHostname = val
}

// SetOptionalStringInt32 sets the value of OptionalStringInt32.
func (s *TestRequestFormatTestReq) SetOptionalStringInt32(val OptStringInt32) {
	s.OptionalStringInt32 = val
}

// SetOptionalStringInt64 sets the value of OptionalStringInt64.
func (s *TestRequestFormatTestReq) SetOptionalStringInt64(val OptStringInt64) {
	s.OptionalStringInt64 = val
}

// SetOptionalStringIP sets the value of OptionalStringIP.
func (s *TestRequestFormatTestReq) SetOptionalStringIP(val OptIP) {
	s.OptionalStringIP = val
}

// SetOptionalStringIpv4 sets the value of OptionalStringIpv4.
func (s *TestRequestFormatTestReq) SetOptionalStringIpv4(val OptIPv4) {
	s.OptionalStringIpv4 = val
}

// SetOptionalStringIpv6 sets the value of OptionalStringIpv6.
func (s *TestRequestFormatTestReq) SetOptionalStringIpv6(val OptIPv6) {
	s.OptionalStringIpv6 = val
}

// SetOptionalStringPassword sets the value of OptionalStringPassword.
func (s *TestRequestFormatTestReq) SetOptionalStringPassword(val OptString) {
	s.OptionalStringPassword = val
}

// SetOptionalStringTime sets the value of OptionalStringTime.
func (s *TestRequestFormatTestReq) SetOptionalStringTime(val OptTime) {
	s.OptionalStringTime = val
}

// SetOptionalStringUnix sets the value of OptionalStringUnix.
func (s *TestRequestFormatTestReq) SetOptionalStringUnix(val OptStringUnixSeconds) {
	s.OptionalStringUnix = val
}

// SetOptionalStringUnixMinusMicro sets the value of OptionalStringUnixMinusMicro.
func (s *TestRequestFormatTestReq) SetOptionalStringUnixMinusMicro(val OptStringUnixMicro) {
	s.OptionalStringUnixMinusMicro = val
}

// SetOptionalStringUnixMinusMilli sets the value of OptionalStringUnixMinusMilli.
func (s *TestRequestFormatTestReq) SetOptionalStringUnixMinusMilli(val OptStringUnixMilli) {
	s.OptionalStringUnixMinusMilli = val
}

// SetOptionalStringUnixMinusNano sets the value of OptionalStringUnixMinusNano.
func (s *TestRequestFormatTestReq) SetOptionalStringUnixMinusNano(val OptStringUnixNano) {
	s.OptionalStringUnixMinusNano = val
}

// SetOptionalStringUnixMinusSeconds sets the value of OptionalStringUnixMinusSeconds.
func (s *TestRequestFormatTestReq) SetOptionalStringUnixMinusSeconds(val OptStringUnixSeconds) {
	s.OptionalStringUnixMinusSeconds = val
}

// SetOptionalStringURI sets the value of OptionalStringURI.
func (s *TestRequestFormatTestReq) SetOptionalStringURI(val OptURI) {
	s.OptionalStringURI = val
}

// SetOptionalStringUUID sets the value of OptionalStringUUID.
func (s *TestRequestFormatTestReq) SetOptionalStringUUID(val OptUUID) {
	s.OptionalStringUUID = val
}

type TestRequestRequiredEmptyStructReq struct{}

type TestRequestRequiredFormatTestReq struct {
	RequiredAny                                jx.Raw               `json:"required_any"`
	RequiredArrayAny                           []jx.Raw             `json:"required_array_any"`
	RequiredArrayBoolean                       []bool               `json:"required_array_boolean"`
	RequiredArrayInteger                       []int                `json:"required_array_integer"`
	RequiredArrayIntegerInt32                  []int32              `json:"required_array_integer_int32"`
	RequiredArrayIntegerInt64                  []int64              `json:"required_array_integer_int64"`
	RequiredArrayIntegerUint                   []uint               `json:"required_array_integer_uint"`
	RequiredArrayIntegerUint32                 []uint32             `json:"required_array_integer_uint32"`
	RequiredArrayIntegerUint64                 []uint64             `json:"required_array_integer_uint64"`
	RequiredArrayIntegerUnix                   []time.Time          `json:"required_array_integer_unix"`
	RequiredArrayIntegerUnixMinusMicro         []time.Time          `json:"required_array_integer_unix-micro"`
	RequiredArrayIntegerUnixMinusMilli         []time.Time          `json:"required_array_integer_unix-milli"`
	RequiredArrayIntegerUnixMinusNano          []time.Time          `json:"required_array_integer_unix-nano"`
	RequiredArrayIntegerUnixMinusSeconds       []time.Time          `json:"required_array_integer_unix-seconds"`
	RequiredArrayNull                          []struct{}           `json:"required_array_null"`
	RequiredArrayNumber                        []float64            `json:"required_array_number"`
	RequiredArrayNumberDouble                  []float64            `json:"required_array_number_double"`
	RequiredArrayNumberFloat                   []float32            `json:"required_array_number_float"`
	RequiredArrayNumberInt32                   []int32              `json:"required_array_number_int32"`
	RequiredArrayNumberInt64                   []int64              `json:"required_array_number_int64"`
	RequiredArrayString                        []string             `json:"required_array_string"`
	RequiredArrayStringBinary                  []string             `json:"required_array_string_binary"`
	RequiredArrayStringByte                    [][]byte             `json:"required_array_string_byte"`
	RequiredArrayStringDate                    []time.Time          `json:"required_array_string_date"`
	RequiredArrayStringDateMinusTime           []time.Time          `json:"required_array_string_date-time"`
	RequiredArrayStringDuration                []time.Duration      `json:"required_array_string_duration"`
	RequiredArrayStringEmail                   []string             `json:"required_array_string_email"`
	RequiredArrayStringHostname                []string             `json:"required_array_string_hostname"`
	RequiredArrayStringInt32                   []int32              `json:"required_array_string_int32"`
	RequiredArrayStringInt64                   []int64              `json:"required_array_string_int64"`
	RequiredArrayStringIP                      []netip.Addr         `json:"required_array_string_ip"`
	RequiredArrayStringIpv4                    []netip.Addr         `json:"required_array_string_ipv4"`
	RequiredArrayStringIpv6                    []netip.Addr         `json:"required_array_string_ipv6"`
	RequiredArrayStringPassword                []string             `json:"required_array_string_password"`
	RequiredArrayStringTime                    []time.Time          `json:"required_array_string_time"`
	RequiredArrayStringUnix                    []time.Time          `json:"required_array_string_unix"`
	RequiredArrayStringUnixMinusMicro          []time.Time          `json:"required_array_string_unix-micro"`
	RequiredArrayStringUnixMinusMilli          []time.Time          `json:"required_array_string_unix-milli"`
	RequiredArrayStringUnixMinusNano           []time.Time          `json:"required_array_string_unix-nano"`
	RequiredArrayStringUnixMinusSeconds        []time.Time          `json:"required_array_string_unix-seconds"`
	RequiredArrayStringURI                     []url.URL            `json:"required_array_string_uri"`
	RequiredArrayStringUUID                    []uuid.UUID          `json:"required_array_string_uuid"`
	RequiredBoolean                            bool                 `json:"required_boolean"`
	RequiredDoubleArrayAny                     [][]jx.Raw           `json:"required_double_array_any"`
	RequiredDoubleArrayBoolean                 [][]bool             `json:"required_double_array_boolean"`
	RequiredDoubleArrayInteger                 [][]int              `json:"required_double_array_integer"`
	RequiredDoubleArrayIntegerInt32            [][]int32            `json:"required_double_array_integer_int32"`
	RequiredDoubleArrayIntegerInt64            [][]int64            `json:"required_double_array_integer_int64"`
	RequiredDoubleArrayIntegerUint             [][]uint             `json:"required_double_array_integer_uint"`
	RequiredDoubleArrayIntegerUint32           [][]uint32           `json:"required_double_array_integer_uint32"`
	RequiredDoubleArrayIntegerUint64           [][]uint64           `json:"required_double_array_integer_uint64"`
	RequiredDoubleArrayIntegerUnix             [][]time.Time        `json:"required_double_array_integer_unix"`
	RequiredDoubleArrayIntegerUnixMinusMicro   [][]time.Time        `json:"required_double_array_integer_unix-micro"`
	RequiredDoubleArrayIntegerUnixMinusMilli   [][]time.Time        `json:"required_double_array_integer_unix-milli"`
	RequiredDoubleArrayIntegerUnixMinusNano    [][]time.Time        `json:"required_double_array_integer_unix-nano"`
	RequiredDoubleArrayIntegerUnixMinusSeconds [][]time.Time        `json:"required_double_array_integer_unix-seconds"`
	RequiredDoubleArrayNull                    [][]struct{}         `json:"required_double_array_null"`
	RequiredDoubleArrayNumber                  [][]float64          `json:"required_double_array_number"`
	RequiredDoubleArrayNumberDouble            [][]float64          `json:"required_double_array_number_double"`
	RequiredDoubleArrayNumberFloat             [][]float32          `json:"required_double_array_number_float"`
	RequiredDoubleArrayNumberInt32             [][]int32            `json:"required_double_array_number_int32"`
	RequiredDoubleArrayNumberInt64             [][]int64            `json:"required_double_array_number_int64"`
	RequiredDoubleArrayString                  [][]string           `json:"required_double_array_string"`
	RequiredDoubleArrayStringBinary            [][]string           `json:"required_double_array_string_binary"`
	RequiredDoubleArrayStringByte              [][][]byte           `json:"required_double_array_string_byte"`
	RequiredDoubleArrayStringDate              [][]time.Time        `json:"required_double_array_string_date"`
	RequiredDoubleArrayStringDateMinusTime     [][]time.Time        `json:"required_double_array_string_date-time"`
	RequiredDoubleArrayStringDuration          [][]time.Duration    `json:"required_double_array_string_duration"`
	RequiredDoubleArrayStringEmail             [][]string           `json:"required_double_array_string_email"`
	RequiredDoubleArrayStringHostname          [][]string           `json:"required_double_array_string_hostname"`
	RequiredDoubleArrayStringInt32             [][]int32            `json:"required_double_array_string_int32"`
	RequiredDoubleArrayStringInt64             [][]int64            `json:"required_double_array_string_int64"`
	RequiredDoubleArrayStringIP                [][]netip.Addr       `json:"required_double_array_string_ip"`
	RequiredDoubleArrayStringIpv4              [][]netip.Addr       `json:"required_double_array_string_ipv4"`
	RequiredDoubleArrayStringIpv6              [][]netip.Addr       `json:"required_double_array_string_ipv6"`
	RequiredDoubleArrayStringPassword          [][]string           `json:"required_double_array_string_password"`
	RequiredDoubleArrayStringTime              [][]time.Time        `json:"required_double_array_string_time"`
	RequiredDoubleArrayStringUnix              [][]time.Time        `json:"required_double_array_string_unix"`
	RequiredDoubleArrayStringUnixMinusMicro    [][]time.Time        `json:"required_double_array_string_unix-micro"`
	RequiredDoubleArrayStringUnixMinusMilli    [][]time.Time        `json:"required_double_array_string_unix-milli"`
	RequiredDoubleArrayStringUnixMinusNano     [][]time.Time        `json:"required_double_array_string_unix-nano"`
	RequiredDoubleArrayStringUnixMinusSeconds  [][]time.Time        `json:"required_double_array_string_unix-seconds"`
	RequiredDoubleArrayStringURI               [][]url.URL          `json:"required_double_array_string_uri"`
	RequiredDoubleArrayStringUUID              [][]uuid.UUID        `json:"required_double_array_string_uuid"`
	RequiredInteger                            int                  `json:"required_integer"`
	RequiredIntegerInt32                       int32                `json:"required_integer_int32"`
	RequiredIntegerInt64                       int64                `json:"required_integer_int64"`
	RequiredIntegerUint                        uint                 `json:"required_integer_uint"`
	RequiredIntegerUint32                      uint32               `json:"required_integer_uint32"`
	RequiredIntegerUint64                      uint64               `json:"required_integer_uint64"`
	RequiredIntegerUnix                        time.Time            `json:"required_integer_unix"`
	RequiredIntegerUnixMinusMicro              time.Time            `json:"required_integer_unix-micro"`
	RequiredIntegerUnixMinusMilli              time.Time            `json:"required_integer_unix-milli"`
	RequiredIntegerUnixMinusNano               time.Time            `json:"required_integer_unix-nano"`
	RequiredIntegerUnixMinusSeconds            time.Time            `json:"required_integer_unix-seconds"`
	RequiredNull                               struct{}             `json:"required_null"`
	RequiredNumber                             float64              `json:"required_number"`
	RequiredNumberDouble                       float64              `json:"required_number_double"`
	RequiredNumberFloat                        float32              `json:"required_number_float"`
	RequiredNumberInt32                        int32                `json:"required_number_int32"`
	RequiredNumberInt64                        int64                `json:"required_number_int64"`
	RequiredString                             string               `json:"required_string"`
	RequiredStringBinary                       string               `json:"required_string_binary"`
	RequiredStringByte                         []byte               `json:"required_string_byte"`
	RequiredStringDate                         time.Time            `json:"required_string_date"`
	RequiredStringDateMinusTime                time.Time            `json:"required_string_date-time"`
	RequiredStringDuration                     time.Duration        `json:"required_string_duration"`
	RequiredStringEmail                        string               `json:"required_string_email"`
	RequiredStringHostname                     string               `json:"required_string_hostname"`
	RequiredStringInt32                        int32                `json:"required_string_int32"`
	RequiredStringInt64                        int64                `json:"required_string_int64"`
	RequiredStringIP                           netip.Addr           `json:"required_string_ip"`
	RequiredStringIpv4                         netip.Addr           `json:"required_string_ipv4"`
	RequiredStringIpv6                         netip.Addr           `json:"required_string_ipv6"`
	RequiredStringPassword                     string               `json:"required_string_password"`
	RequiredStringTime                         time.Time            `json:"required_string_time"`
	RequiredStringUnix                         time.Time            `json:"required_string_unix"`
	RequiredStringUnixMinusMicro               time.Time            `json:"required_string_unix-micro"`
	RequiredStringUnixMinusMilli               time.Time            `json:"required_string_unix-milli"`
	RequiredStringUnixMinusNano                time.Time            `json:"required_string_unix-nano"`
	RequiredStringUnixMinusSeconds             time.Time            `json:"required_string_unix-seconds"`
	RequiredStringURI                          url.URL              `json:"required_string_uri"`
	RequiredStringUUID                         uuid.UUID            `json:"required_string_uuid"`
	OptionalAny                                jx.Raw               `json:"optional_any,omitempty"`
	OptionalArrayAny                           []jx.Raw             `json:"optional_array_any,omitempty"`
	OptionalArrayBoolean                       []bool               `json:"optional_array_boolean,omitempty"`
	OptionalArrayInteger                       []int                `json:"optional_array_integer,omitempty"`
	OptionalArrayIntegerInt32                  []int32              `json:"optional_array_integer_int32,omitempty"`
	OptionalArrayIntegerInt64                  []int64              `json:"optional_array_integer_int64,omitempty"`
	OptionalArrayIntegerUint                   []uint               `json:"optional_array_integer_uint,omitempty"`
	OptionalArrayIntegerUint32                 []uint32             `json:"optional_array_integer_uint32,omitempty"`
	OptionalArrayIntegerUint64                 []uint64             `json:"optional_array_integer_uint64,omitempty"`
	OptionalArrayIntegerUnix                   []time.Time          `json:"optional_array_integer_unix,omitempty"`
	OptionalArrayIntegerUnixMinusMicro         []time.Time          `json:"optional_array_integer_unix-micro,omitempty"`
	OptionalArrayIntegerUnixMinusMilli         []time.Time          `json:"optional_array_integer_unix-milli,omitempty"`
	OptionalArrayIntegerUnixMinusNano          []time.Time          `json:"optional_array_integer_unix-nano,omitempty"`
	OptionalArrayIntegerUnixMinusSeconds       []time.Time          `json:"optional_array_integer_unix-seconds,omitempty"`
	OptionalArrayNull                          []struct{}           `json:"optional_array_null,omitempty"`
	OptionalArrayNumber                        []float64            `json:"optional_array_number,omitempty"`
	OptionalArrayNumberDouble                  []float64            `json:"optional_array_number_double,omitempty"`
	OptionalArrayNumberFloat                   []float32            `json:"optional_array_number_float,omitempty"`
	OptionalArrayNumberInt32                   []int32              `json:"optional_array_number_int32,omitempty"`
	OptionalArrayNumberInt64                   []int64              `json:"optional_array_number_int64,omitempty"`
	OptionalArrayString                        []string             `json:"optional_array_string,omitempty"`
	OptionalArrayStringBinary                  []string             `json:"optional_array_string_binary,omitempty"`
	OptionalArrayStringByte                    [][]byte             `json:"optional_array_string_byte,omitempty"`
	OptionalArrayStringDate                    []time.Time          `json:"optional_array_string_date,omitempty"`
	OptionalArrayStringDateMinusTime           []time.Time          `json:"optional_array_string_date-time,omitempty"`
	OptionalArrayStringDuration                []time.Duration      `json:"optional_array_string_duration,omitempty"`
	OptionalArrayStringEmail                   []string             `json:"optional_array_string_email,omitempty"`
	OptionalArrayStringHostname                []string             `json:"optional_array_string_hostname,omitempty"`
	OptionalArrayStringInt32                   []int32              `json:"optional_array_string_int32,omitempty"`
	OptionalArrayStringInt64                   []int64              `json:"optional_array_string_int64,omitempty"`
	OptionalArrayStringIP                      []netip.Addr         `json:"optional_array_string_ip,omitempty"`
	OptionalArrayStringIpv4                    []netip.Addr         `json:"optional_array_string_ipv4,omitempty"`
	OptionalArrayStringIpv6                    []netip.Addr         `json:"optional_array_string_ipv6,omitempty"`
	OptionalArrayStringPassword                []string             `json:"optional_array_string_password,omitempty"`
	OptionalArrayStringTime                    []time.Time          `json:"optional_array_string_time,omitempty"`
	OptionalArrayStringUnix                    []time.Time          `json:"optional_array_string_unix,omitempty"`
	OptionalArrayStringUnixMinusMicro          []time.Time          `json:"optional_array_string_unix-micro,omitempty"`
	OptionalArrayStringUnixMinusMilli          []time.Time          `json:"optional_array_string_unix-milli,omitempty"`
	OptionalArrayStringUnixMinusNano           []time.Time          `json:"optional_array_string_unix-nano,omitempty"`
	OptionalArrayStringUnixMinusSeconds        []time.Time          `json:"optional_array_string_unix-seconds,omitempty"`
	OptionalArrayStringURI                     []url.URL            `json:"optional_array_string_uri,omitempty"`
	OptionalArrayStringUUID                    []uuid.UUID          `json:"optional_array_string_uuid,omitempty"`
	OptionalBoolean                            OptBool              `json:"optional_boolean,omitempty"`
	OptionalDoubleArrayAny                     [][]jx.Raw           `json:"optional_double_array_any,omitempty"`
	OptionalDoubleArrayBoolean                 [][]bool             `json:"optional_double_array_boolean,omitempty"`
	OptionalDoubleArrayInteger                 [][]int              `json:"optional_double_array_integer,omitempty"`
	OptionalDoubleArrayIntegerInt32            [][]int32            `json:"optional_double_array_integer_int32,omitempty"`
	OptionalDoubleArrayIntegerInt64            [][]int64            `json:"optional_double_array_integer_int64,omitempty"`
	OptionalDoubleArrayIntegerUint             [][]uint             `json:"optional_double_array_integer_uint,omitempty"`
	OptionalDoubleArrayIntegerUint32           [][]uint32           `json:"optional_double_array_integer_uint32,omitempty"`
	OptionalDoubleArrayIntegerUint64           [][]uint64           `json:"optional_double_array_integer_uint64,omitempty"`
	OptionalDoubleArrayIntegerUnix             [][]time.Time        `json:"optional_double_array_integer_unix,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusMicro   [][]time.Time        `json:"optional_double_array_integer_unix-micro,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusMilli   [][]time.Time        `json:"optional_double_array_integer_unix-milli,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusNano    [][]time.Time        `json:"optional_double_array_integer_unix-nano,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusSeconds [][]time.Time        `json:"optional_double_array_integer_unix-seconds,omitempty"`
	OptionalDoubleArrayNull                    [][]struct{}         `json:"optional_double_array_null,omitempty"`
	OptionalDoubleArrayNumber                  [][]float64          `json:"optional_double_array_number,omitempty"`
	OptionalDoubleArrayNumberDouble            [][]float64          `json:"optional_double_array_number_double,omitempty"`
	OptionalDoubleArrayNumberFloat             [][]float32          `json:"optional_double_array_number_float,omitempty"`
	OptionalDoubleArrayNumberInt32             [][]int32            `json:"optional_double_array_number_int32,omitempty"`
	OptionalDoubleArrayNumberInt64             [][]int64            `json:"optional_double_array_number_int64,omitempty"`
	OptionalDoubleArrayString                  [][]string           `json:"optional_double_array_string,omitempty"`
	OptionalDoubleArrayStringBinary            [][]string           `json:"optional_double_array_string_binary,omitempty"`
	OptionalDoubleArrayStringByte              [][][]byte           `json:"optional_double_array_string_byte,omitempty"`
	OptionalDoubleArrayStringDate              [][]time.Time        `json:"optional_double_array_string_date,omitempty"`
	OptionalDoubleArrayStringDateMinusTime     [][]time.Time        `json:"optional_double_array_string_date-time,omitempty"`
	OptionalDoubleArrayStringDuration          [][]time.Duration    `json:"optional_double_array_string_duration,omitempty"`
	OptionalDoubleArrayStringEmail             [][]string           `json:"optional_double_array_string_email,omitempty"`
	OptionalDoubleArrayStringHostname          [][]string           `json:"optional_double_array_string_hostname,omitempty"`
	OptionalDoubleArrayStringInt32             [][]int32            `json:"optional_double_array_string_int32,omitempty"`
	OptionalDoubleArrayStringInt64             [][]int64            `json:"optional_double_array_string_int64,omitempty"`
	OptionalDoubleArrayStringIP                [][]netip.Addr       `json:"optional_double_array_string_ip,omitempty"`
	OptionalDoubleArrayStringIpv4              [][]netip.Addr       `json:"optional_double_array_string_ipv4,omitempty"`
	OptionalDoubleArrayStringIpv6              [][]netip.Addr       `json:"optional_double_array_string_ipv6,omitempty"`
	OptionalDoubleArrayStringPassword          [][]string           `json:"optional_double_array_string_password,omitempty"`
	OptionalDoubleArrayStringTime              [][]time.Time        `json:"optional_double_array_string_time,omitempty"`
	OptionalDoubleArrayStringUnix              [][]time.Time        `json:"optional_double_array_string_unix,omitempty"`
	OptionalDoubleArrayStringUnixMinusMicro    [][]time.Time        `json:"optional_double_array_string_unix-micro,omitempty"`
	OptionalDoubleArrayStringUnixMinusMilli    [][]time.Time        `json:"optional_double_array_string_unix-milli,omitempty"`
	OptionalDoubleArrayStringUnixMinusNano     [][]time.Time        `json:"optional_double_array_string_unix-nano,omitempty"`
	OptionalDoubleArrayStringUnixMinusSeconds  [][]time.Time        `json:"optional_double_array_string_unix-seconds,omitempty"`
	OptionalDoubleArrayStringURI               [][]url.URL          `json:"optional_double_array_string_uri,omitempty"`
	OptionalDoubleArrayStringUUID              [][]uuid.UUID        `json:"optional_double_array_string_uuid,omitempty"`
	OptionalInteger                            OptInt               `json:"optional_integer,omitempty"`
	OptionalIntegerInt32                       OptInt32             `json:"optional_integer_int32,omitempty"`
	OptionalIntegerInt64                       OptInt64             `json:"optional_integer_int64,omitempty"`
	OptionalIntegerUint                        OptUint              `json:"optional_integer_uint,omitempty"`
	OptionalIntegerUint32                      OptUint32            `json:"optional_integer_uint32,omitempty"`
	OptionalIntegerUint64                      OptUint64            `json:"optional_integer_uint64,omitempty"`
	OptionalIntegerUnix                        OptUnixSeconds       `json:"optional_integer_unix,omitempty"`
	OptionalIntegerUnixMinusMicro              OptUnixMicro         `json:"optional_integer_unix-micro,omitempty"`
	OptionalIntegerUnixMinusMilli              OptUnixMilli         `json:"optional_integer_unix-milli,omitempty"`
	OptionalIntegerUnixMinusNano               OptUnixNano          `json:"optional_integer_unix-nano,omitempty"`
	OptionalIntegerUnixMinusSeconds            OptUnixSeconds       `json:"optional_integer_unix-seconds,omitempty"`
	OptionalNull                               OptNull              `json:"optional_null,omitempty"`
	OptionalNumber                             OptFloat64           `json:"optional_number,omitempty"`
	OptionalNumberDouble                       OptFloat64           `json:"optional_number_double,omitempty"`
	OptionalNumberFloat                        OptFloat32           `json:"optional_number_float,omitempty"`
	OptionalNumberInt32                        OptInt32             `json:"optional_number_int32,omitempty"`
	OptionalNumberInt64                        OptInt64             `json:"optional_number_int64,omitempty"`
	OptionalString                             OptString            `json:"optional_string,omitempty"`
	OptionalStringBinary                       OptString            `json:"optional_string_binary,omitempty"`
	OptionalStringByte                         []byte               `json:"optional_string_byte,omitempty"`
	OptionalStringDate                         OptDate              `json:"optional_string_date,omitempty"`
	OptionalStringDateMinusTime                OptDateTime          `json:"optional_string_date-time,omitempty"`
	OptionalStringDuration                     OptDuration          `json:"optional_string_duration,omitempty"`
	OptionalStringEmail                        OptString            `json:"optional_string_email,omitempty"`
	OptionalStringHostname                     OptString            `json:"optional_string_hostname,omitempty"`
	OptionalStringInt32                        OptStringInt32       `json:"optional_string_int32,omitempty"`
	OptionalStringInt64                        OptStringInt64       `json:"optional_string_int64,omitempty"`
	OptionalStringIP                           OptIP                `json:"optional_string_ip,omitempty"`
	OptionalStringIpv4                         OptIPv4              `json:"optional_string_ipv4,omitempty"`
	OptionalStringIpv6                         OptIPv6              `json:"optional_string_ipv6,omitempty"`
	OptionalStringPassword                     OptString            `json:"optional_string_password,omitempty"`
	OptionalStringTime                         OptTime              `json:"optional_string_time,omitempty"`
	OptionalStringUnix                         OptStringUnixSeconds `json:"optional_string_unix,omitempty"`
	OptionalStringUnixMinusMicro               OptStringUnixMicro   `json:"optional_string_unix-micro,omitempty"`
	OptionalStringUnixMinusMilli               OptStringUnixMilli   `json:"optional_string_unix-milli,omitempty"`
	OptionalStringUnixMinusNano                OptStringUnixNano    `json:"optional_string_unix-nano,omitempty"`
	OptionalStringUnixMinusSeconds             OptStringUnixSeconds `json:"optional_string_unix-seconds,omitempty"`
	OptionalStringURI                          OptURI               `json:"optional_string_uri,omitempty"`
	OptionalStringUUID                         OptUUID              `json:"optional_string_uuid,omitempty"`
}

// GetRequiredAny returns the value of RequiredAny.
func (s TestRequestRequiredFormatTestReq) GetRequiredAny() jx.Raw {
	return s.RequiredAny
}

// GetRequiredArrayAny returns the value of RequiredArrayAny.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayAny() []jx.Raw {
	return s.RequiredArrayAny
}

// GetRequiredArrayBoolean returns the value of RequiredArrayBoolean.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayBoolean() []bool {
	return s.RequiredArrayBoolean
}

// GetRequiredArrayInteger returns the value of RequiredArrayInteger.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayInteger() []int {
	return s.RequiredArrayInteger
}

// GetRequiredArrayIntegerInt32 returns the value of RequiredArrayIntegerInt32.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayIntegerInt32() []int32 {
	return s.RequiredArrayIntegerInt32
}

// GetRequiredArrayIntegerInt64 returns the value of RequiredArrayIntegerInt64.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayIntegerInt64() []int64 {
	return s.RequiredArrayIntegerInt64
}

// GetRequiredArrayIntegerUint returns the value of RequiredArrayIntegerUint.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayIntegerUint() []uint {
	return s.RequiredArrayIntegerUint
}

// GetRequiredArrayIntegerUint32 returns the value of RequiredArrayIntegerUint32.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayIntegerUint32() []uint32 {
	return s.RequiredArrayIntegerUint32
}

// GetRequiredArrayIntegerUint64 returns the value of RequiredArrayIntegerUint64.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayIntegerUint64() []uint64 {
	return s.RequiredArrayIntegerUint64
}

// GetRequiredArrayIntegerUnix returns the value of RequiredArrayIntegerUnix.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayIntegerUnix() []time.Time {
	return s.RequiredArrayIntegerUnix
}

// GetRequiredArrayIntegerUnixMinusMicro returns the value of RequiredArrayIntegerUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayIntegerUnixMinusMicro() []time.Time {
	return s.RequiredArrayIntegerUnixMinusMicro
}

// GetRequiredArrayIntegerUnixMinusMilli returns the value of RequiredArrayIntegerUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayIntegerUnixMinusMilli() []time.Time {
	return s.RequiredArrayIntegerUnixMinusMilli
}

// GetRequiredArrayIntegerUnixMinusNano returns the value of RequiredArrayIntegerUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayIntegerUnixMinusNano() []time.Time {
	return s.RequiredArrayIntegerUnixMinusNano
}

// GetRequiredArrayIntegerUnixMinusSeconds returns the value of RequiredArrayIntegerUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayIntegerUnixMinusSeconds() []time.Time {
	return s.RequiredArrayIntegerUnixMinusSeconds
}

// GetRequiredArrayNull returns the value of RequiredArrayNull.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayNull() []struct{} {
	return s.RequiredArrayNull
}

// GetRequiredArrayNumber returns the value of RequiredArrayNumber.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayNumber() []float64 {
	return s.RequiredArrayNumber
}

// GetRequiredArrayNumberDouble returns the value of RequiredArrayNumberDouble.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayNumberDouble() []float64 {
	return s.RequiredArrayNumberDouble
}

// GetRequiredArrayNumberFloat returns the value of RequiredArrayNumberFloat.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayNumberFloat() []float32 {
	return s.RequiredArrayNumberFloat
}

// GetRequiredArrayNumberInt32 returns the value of RequiredArrayNumberInt32.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayNumberInt32() []int32 {
	return s.RequiredArrayNumberInt32
}

// GetRequiredArrayNumberInt64 returns the value of RequiredArrayNumberInt64.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayNumberInt64() []int64 {
	return s.RequiredArrayNumberInt64
}

// GetRequiredArrayString returns the value of RequiredArrayString.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayString() []string {
	return s.RequiredArrayString
}

// GetRequiredArrayStringBinary returns the value of RequiredArrayStringBinary.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringBinary() []string {
	return s.RequiredArrayStringBinary
}

// GetRequiredArrayStringByte returns the value of RequiredArrayStringByte.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringByte() [][]byte {
	return s.RequiredArrayStringByte
}

// GetRequiredArrayStringDate returns the value of RequiredArrayStringDate.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringDate() []time.Time {
	return s.RequiredArrayStringDate
}

// GetRequiredArrayStringDateMinusTime returns the value of RequiredArrayStringDateMinusTime.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringDateMinusTime() []time.Time {
	return s.RequiredArrayStringDateMinusTime
}

// GetRequiredArrayStringDuration returns the value of RequiredArrayStringDuration.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringDuration() []time.Duration {
	return s.RequiredArrayStringDuration
}

// GetRequiredArrayStringEmail returns the value of RequiredArrayStringEmail.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringEmail() []string {
	return s.RequiredArrayStringEmail
}

// GetRequiredArrayStringHostname returns the value of RequiredArrayStringHostname.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringHostname() []string {
	return s.RequiredArrayStringHostname
}

// GetRequiredArrayStringInt32 returns the value of RequiredArrayStringInt32.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringInt32() []int32 {
	return s.RequiredArrayStringInt32
}

// GetRequiredArrayStringInt64 returns the value of RequiredArrayStringInt64.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringInt64() []int64 {
	return s.RequiredArrayStringInt64
}

// GetRequiredArrayStringIP returns the value of RequiredArrayStringIP.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringIP() []netip.Addr {
	return s.RequiredArrayStringIP
}

// GetRequiredArrayStringIpv4 returns the value of RequiredArrayStringIpv4.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringIpv4() []netip.Addr {
	return s.RequiredArrayStringIpv4
}

// GetRequiredArrayStringIpv6 returns the value of RequiredArrayStringIpv6.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringIpv6() []netip.Addr {
	return s.RequiredArrayStringIpv6
}

// GetRequiredArrayStringPassword returns the value of RequiredArrayStringPassword.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringPassword() []string {
	return s.RequiredArrayStringPassword
}

// GetRequiredArrayStringTime returns the value of RequiredArrayStringTime.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringTime() []time.Time {
	return s.RequiredArrayStringTime
}

// GetRequiredArrayStringUnix returns the value of RequiredArrayStringUnix.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringUnix() []time.Time {
	return s.RequiredArrayStringUnix
}

// GetRequiredArrayStringUnixMinusMicro returns the value of RequiredArrayStringUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringUnixMinusMicro() []time.Time {
	return s.RequiredArrayStringUnixMinusMicro
}

// GetRequiredArrayStringUnixMinusMilli returns the value of RequiredArrayStringUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringUnixMinusMilli() []time.Time {
	return s.RequiredArrayStringUnixMinusMilli
}

// GetRequiredArrayStringUnixMinusNano returns the value of RequiredArrayStringUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringUnixMinusNano() []time.Time {
	return s.RequiredArrayStringUnixMinusNano
}

// GetRequiredArrayStringUnixMinusSeconds returns the value of RequiredArrayStringUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringUnixMinusSeconds() []time.Time {
	return s.RequiredArrayStringUnixMinusSeconds
}

// GetRequiredArrayStringURI returns the value of RequiredArrayStringURI.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringURI() []url.URL {
	return s.RequiredArrayStringURI
}

// GetRequiredArrayStringUUID returns the value of RequiredArrayStringUUID.
func (s TestRequestRequiredFormatTestReq) GetRequiredArrayStringUUID() []uuid.UUID {
	return s.RequiredArrayStringUUID
}

// GetRequiredBoolean returns the value of RequiredBoolean.
func (s TestRequestRequiredFormatTestReq) GetRequiredBoolean() bool {
	return s.RequiredBoolean
}

// GetRequiredDoubleArrayAny returns the value of RequiredDoubleArrayAny.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayAny() [][]jx.Raw {
	return s.RequiredDoubleArrayAny
}

// GetRequiredDoubleArrayBoolean returns the value of RequiredDoubleArrayBoolean.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayBoolean() [][]bool {
	return s.RequiredDoubleArrayBoolean
}

// GetRequiredDoubleArrayInteger returns the value of RequiredDoubleArrayInteger.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayInteger() [][]int {
	return s.RequiredDoubleArrayInteger
}

// GetRequiredDoubleArrayIntegerInt32 returns the value of RequiredDoubleArrayIntegerInt32.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayIntegerInt32() [][]int32 {
	return s.RequiredDoubleArrayIntegerInt32
}

// GetRequiredDoubleArrayIntegerInt64 returns the value of RequiredDoubleArrayIntegerInt64.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayIntegerInt64() [][]int64 {
	return s.RequiredDoubleArrayIntegerInt64
}

// GetRequiredDoubleArrayIntegerUint returns the value of RequiredDoubleArrayIntegerUint.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayIntegerUint() [][]uint {
	return s.RequiredDoubleArrayIntegerUint
}

// GetRequiredDoubleArrayIntegerUint32 returns the value of RequiredDoubleArrayIntegerUint32.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayIntegerUint32() [][]uint32 {
	return s.RequiredDoubleArrayIntegerUint32
}

// GetRequiredDoubleArrayIntegerUint64 returns the value of RequiredDoubleArrayIntegerUint64.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayIntegerUint64() [][]uint64 {
	return s.RequiredDoubleArrayIntegerUint64
}

// GetRequiredDoubleArrayIntegerUnix returns the value of RequiredDoubleArrayIntegerUnix.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayIntegerUnix() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnix
}

// GetRequiredDoubleArrayIntegerUnixMinusMicro returns the value of RequiredDoubleArrayIntegerUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayIntegerUnixMinusMicro() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusMicro
}

// GetRequiredDoubleArrayIntegerUnixMinusMilli returns the value of RequiredDoubleArrayIntegerUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayIntegerUnixMinusMilli() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusMilli
}

// GetRequiredDoubleArrayIntegerUnixMinusNano returns the value of RequiredDoubleArrayIntegerUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayIntegerUnixMinusNano() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusNano
}

// GetRequiredDoubleArrayIntegerUnixMinusSeconds returns the value of RequiredDoubleArrayIntegerUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayIntegerUnixMinusSeconds() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusSeconds
}

// GetRequiredDoubleArrayNull returns the value of RequiredDoubleArrayNull.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayNull() [][]struct{} {
	return s.RequiredDoubleArrayNull
}

// GetRequiredDoubleArrayNumber returns the value of RequiredDoubleArrayNumber.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayNumber() [][]float64 {
	return s.RequiredDoubleArrayNumber
}

// GetRequiredDoubleArrayNumberDouble returns the value of RequiredDoubleArrayNumberDouble.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayNumberDouble() [][]float64 {
	return s.RequiredDoubleArrayNumberDouble
}

// GetRequiredDoubleArrayNumberFloat returns the value of RequiredDoubleArrayNumberFloat.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayNumberFloat() [][]float32 {
	return s.RequiredDoubleArrayNumberFloat
}

// GetRequiredDoubleArrayNumberInt32 returns the value of RequiredDoubleArrayNumberInt32.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayNumberInt32() [][]int32 {
	return s.RequiredDoubleArrayNumberInt32
}

// GetRequiredDoubleArrayNumberInt64 returns the value of RequiredDoubleArrayNumberInt64.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayNumberInt64() [][]int64 {
	return s.RequiredDoubleArrayNumberInt64
}

// GetRequiredDoubleArrayString returns the value of RequiredDoubleArrayString.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayString() [][]string {
	return s.RequiredDoubleArrayString
}

// GetRequiredDoubleArrayStringBinary returns the value of RequiredDoubleArrayStringBinary.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringBinary() [][]string {
	return s.RequiredDoubleArrayStringBinary
}

// GetRequiredDoubleArrayStringByte returns the value of RequiredDoubleArrayStringByte.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringByte() [][][]byte {
	return s.RequiredDoubleArrayStringByte
}

// GetRequiredDoubleArrayStringDate returns the value of RequiredDoubleArrayStringDate.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringDate() [][]time.Time {
	return s.RequiredDoubleArrayStringDate
}

// GetRequiredDoubleArrayStringDateMinusTime returns the value of RequiredDoubleArrayStringDateMinusTime.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringDateMinusTime() [][]time.Time {
	return s.RequiredDoubleArrayStringDateMinusTime
}

// GetRequiredDoubleArrayStringDuration returns the value of RequiredDoubleArrayStringDuration.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringDuration() [][]time.Duration {
	return s.RequiredDoubleArrayStringDuration
}

// GetRequiredDoubleArrayStringEmail returns the value of RequiredDoubleArrayStringEmail.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringEmail() [][]string {
	return s.RequiredDoubleArrayStringEmail
}

// GetRequiredDoubleArrayStringHostname returns the value of RequiredDoubleArrayStringHostname.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringHostname() [][]string {
	return s.RequiredDoubleArrayStringHostname
}

// GetRequiredDoubleArrayStringInt32 returns the value of RequiredDoubleArrayStringInt32.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringInt32() [][]int32 {
	return s.RequiredDoubleArrayStringInt32
}

// GetRequiredDoubleArrayStringInt64 returns the value of RequiredDoubleArrayStringInt64.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringInt64() [][]int64 {
	return s.RequiredDoubleArrayStringInt64
}

// GetRequiredDoubleArrayStringIP returns the value of RequiredDoubleArrayStringIP.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringIP() [][]netip.Addr {
	return s.RequiredDoubleArrayStringIP
}

// GetRequiredDoubleArrayStringIpv4 returns the value of RequiredDoubleArrayStringIpv4.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringIpv4() [][]netip.Addr {
	return s.RequiredDoubleArrayStringIpv4
}

// GetRequiredDoubleArrayStringIpv6 returns the value of RequiredDoubleArrayStringIpv6.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringIpv6() [][]netip.Addr {
	return s.RequiredDoubleArrayStringIpv6
}

// GetRequiredDoubleArrayStringPassword returns the value of RequiredDoubleArrayStringPassword.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringPassword() [][]string {
	return s.RequiredDoubleArrayStringPassword
}

// GetRequiredDoubleArrayStringTime returns the value of RequiredDoubleArrayStringTime.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringTime() [][]time.Time {
	return s.RequiredDoubleArrayStringTime
}

// GetRequiredDoubleArrayStringUnix returns the value of RequiredDoubleArrayStringUnix.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringUnix() [][]time.Time {
	return s.RequiredDoubleArrayStringUnix
}

// GetRequiredDoubleArrayStringUnixMinusMicro returns the value of RequiredDoubleArrayStringUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringUnixMinusMicro() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusMicro
}

// GetRequiredDoubleArrayStringUnixMinusMilli returns the value of RequiredDoubleArrayStringUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringUnixMinusMilli() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusMilli
}

// GetRequiredDoubleArrayStringUnixMinusNano returns the value of RequiredDoubleArrayStringUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringUnixMinusNano() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusNano
}

// GetRequiredDoubleArrayStringUnixMinusSeconds returns the value of RequiredDoubleArrayStringUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringUnixMinusSeconds() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusSeconds
}

// GetRequiredDoubleArrayStringURI returns the value of RequiredDoubleArrayStringURI.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringURI() [][]url.URL {
	return s.RequiredDoubleArrayStringURI
}

// GetRequiredDoubleArrayStringUUID returns the value of RequiredDoubleArrayStringUUID.
func (s TestRequestRequiredFormatTestReq) GetRequiredDoubleArrayStringUUID() [][]uuid.UUID {
	return s.RequiredDoubleArrayStringUUID
}

// GetRequiredInteger returns the value of RequiredInteger.
func (s TestRequestRequiredFormatTestReq) GetRequiredInteger() int {
	return s.RequiredInteger
}

// GetRequiredIntegerInt32 returns the value of RequiredIntegerInt32.
func (s TestRequestRequiredFormatTestReq) GetRequiredIntegerInt32() int32 {
	return s.RequiredIntegerInt32
}

// GetRequiredIntegerInt64 returns the value of RequiredIntegerInt64.
func (s TestRequestRequiredFormatTestReq) GetRequiredIntegerInt64() int64 {
	return s.RequiredIntegerInt64
}

// GetRequiredIntegerUint returns the value of RequiredIntegerUint.
func (s TestRequestRequiredFormatTestReq) GetRequiredIntegerUint() uint {
	return s.RequiredIntegerUint
}

// GetRequiredIntegerUint32 returns the value of RequiredIntegerUint32.
func (s TestRequestRequiredFormatTestReq) GetRequiredIntegerUint32() uint32 {
	return s.RequiredIntegerUint32
}

// GetRequiredIntegerUint64 returns the value of RequiredIntegerUint64.
func (s TestRequestRequiredFormatTestReq) GetRequiredIntegerUint64() uint64 {
	return s.RequiredIntegerUint64
}

// GetRequiredIntegerUnix returns the value of RequiredIntegerUnix.
func (s TestRequestRequiredFormatTestReq) GetRequiredIntegerUnix() time.Time {
	return s.RequiredIntegerUnix
}

// GetRequiredIntegerUnixMinusMicro returns the value of RequiredIntegerUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetRequiredIntegerUnixMinusMicro() time.Time {
	return s.RequiredIntegerUnixMinusMicro
}

// GetRequiredIntegerUnixMinusMilli returns the value of RequiredIntegerUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetRequiredIntegerUnixMinusMilli() time.Time {
	return s.RequiredIntegerUnixMinusMilli
}

// GetRequiredIntegerUnixMinusNano returns the value of RequiredIntegerUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetRequiredIntegerUnixMinusNano() time.Time {
	return s.RequiredIntegerUnixMinusNano
}

// GetRequiredIntegerUnixMinusSeconds returns the value of RequiredIntegerUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetRequiredIntegerUnixMinusSeconds() time.Time {
	return s.RequiredIntegerUnixMinusSeconds
}

// GetRequiredNull returns the value of RequiredNull.
func (s TestRequestRequiredFormatTestReq) GetRequiredNull() struct{} {
	return s.RequiredNull
}

// GetRequiredNumber returns the value of RequiredNumber.
func (s TestRequestRequiredFormatTestReq) GetRequiredNumber() float64 {
	return s.RequiredNumber
}

// GetRequiredNumberDouble returns the value of RequiredNumberDouble.
func (s TestRequestRequiredFormatTestReq) GetRequiredNumberDouble() float64 {
	return s.RequiredNumberDouble
}

// GetRequiredNumberFloat returns the value of RequiredNumberFloat.
func (s TestRequestRequiredFormatTestReq) GetRequiredNumberFloat() float32 {
	return s.RequiredNumberFloat
}

// GetRequiredNumberInt32 returns the value of RequiredNumberInt32.
func (s TestRequestRequiredFormatTestReq) GetRequiredNumberInt32() int32 {
	return s.RequiredNumberInt32
}

// GetRequiredNumberInt64 returns the value of RequiredNumberInt64.
func (s TestRequestRequiredFormatTestReq) GetRequiredNumberInt64() int64 {
	return s.RequiredNumberInt64
}

// GetRequiredString returns the value of RequiredString.
func (s TestRequestRequiredFormatTestReq) GetRequiredString() string {
	return s.RequiredString
}

// GetRequiredStringBinary returns the value of RequiredStringBinary.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringBinary() string {
	return s.RequiredStringBinary
}

// GetRequiredStringByte returns the value of RequiredStringByte.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringByte() []byte {
	return s.RequiredStringByte
}

// GetRequiredStringDate returns the value of RequiredStringDate.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringDate() time.Time {
	return s.RequiredStringDate
}

// GetRequiredStringDateMinusTime returns the value of RequiredStringDateMinusTime.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringDateMinusTime() time.Time {
	return s.RequiredStringDateMinusTime
}

// GetRequiredStringDuration returns the value of RequiredStringDuration.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringDuration() time.Duration {
	return s.RequiredStringDuration
}

// GetRequiredStringEmail returns the value of RequiredStringEmail.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringEmail() string {
	return s.RequiredStringEmail
}

// GetRequiredStringHostname returns the value of RequiredStringHostname.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringHostname() string {
	return s.RequiredStringHostname
}

// GetRequiredStringInt32 returns the value of RequiredStringInt32.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringInt32() int32 {
	return s.RequiredStringInt32
}

// GetRequiredStringInt64 returns the value of RequiredStringInt64.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringInt64() int64 {
	return s.RequiredStringInt64
}

// GetRequiredStringIP returns the value of RequiredStringIP.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringIP() netip.Addr {
	return s.RequiredStringIP
}

// GetRequiredStringIpv4 returns the value of RequiredStringIpv4.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringIpv4() netip.Addr {
	return s.RequiredStringIpv4
}

// GetRequiredStringIpv6 returns the value of RequiredStringIpv6.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringIpv6() netip.Addr {
	return s.RequiredStringIpv6
}

// GetRequiredStringPassword returns the value of RequiredStringPassword.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringPassword() string {
	return s.RequiredStringPassword
}

// GetRequiredStringTime returns the value of RequiredStringTime.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringTime() time.Time {
	return s.RequiredStringTime
}

// GetRequiredStringUnix returns the value of RequiredStringUnix.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringUnix() time.Time {
	return s.RequiredStringUnix
}

// GetRequiredStringUnixMinusMicro returns the value of RequiredStringUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringUnixMinusMicro() time.Time {
	return s.RequiredStringUnixMinusMicro
}

// GetRequiredStringUnixMinusMilli returns the value of RequiredStringUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringUnixMinusMilli() time.Time {
	return s.RequiredStringUnixMinusMilli
}

// GetRequiredStringUnixMinusNano returns the value of RequiredStringUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringUnixMinusNano() time.Time {
	return s.RequiredStringUnixMinusNano
}

// GetRequiredStringUnixMinusSeconds returns the value of RequiredStringUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringUnixMinusSeconds() time.Time {
	return s.RequiredStringUnixMinusSeconds
}

// GetRequiredStringURI returns the value of RequiredStringURI.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringURI() url.URL {
	return s.RequiredStringURI
}

// GetRequiredStringUUID returns the value of RequiredStringUUID.
func (s TestRequestRequiredFormatTestReq) GetRequiredStringUUID() uuid.UUID {
	return s.RequiredStringUUID
}

// GetOptionalAny returns the value of OptionalAny.
func (s TestRequestRequiredFormatTestReq) GetOptionalAny() jx.Raw {
	return s.OptionalAny
}

// GetOptionalArrayAny returns the value of OptionalArrayAny.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayAny() []jx.Raw {
	return s.OptionalArrayAny
}

// GetOptionalArrayBoolean returns the value of OptionalArrayBoolean.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayBoolean() []bool {
	return s.OptionalArrayBoolean
}

// GetOptionalArrayInteger returns the value of OptionalArrayInteger.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayInteger() []int {
	return s.OptionalArrayInteger
}

// GetOptionalArrayIntegerInt32 returns the value of OptionalArrayIntegerInt32.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayIntegerInt32() []int32 {
	return s.OptionalArrayIntegerInt32
}

// GetOptionalArrayIntegerInt64 returns the value of OptionalArrayIntegerInt64.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayIntegerInt64() []int64 {
	return s.OptionalArrayIntegerInt64
}

// GetOptionalArrayIntegerUint returns the value of OptionalArrayIntegerUint.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayIntegerUint() []uint {
	return s.OptionalArrayIntegerUint
}

// GetOptionalArrayIntegerUint32 returns the value of OptionalArrayIntegerUint32.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayIntegerUint32() []uint32 {
	return s.OptionalArrayIntegerUint32
}

// GetOptionalArrayIntegerUint64 returns the value of OptionalArrayIntegerUint64.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayIntegerUint64() []uint64 {
	return s.OptionalArrayIntegerUint64
}

// GetOptionalArrayIntegerUnix returns the value of OptionalArrayIntegerUnix.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayIntegerUnix() []time.Time {
	return s.OptionalArrayIntegerUnix
}

// GetOptionalArrayIntegerUnixMinusMicro returns the value of OptionalArrayIntegerUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayIntegerUnixMinusMicro() []time.Time {
	return s.OptionalArrayIntegerUnixMinusMicro
}

// GetOptionalArrayIntegerUnixMinusMilli returns the value of OptionalArrayIntegerUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayIntegerUnixMinusMilli() []time.Time {
	return s.OptionalArrayIntegerUnixMinusMilli
}

// GetOptionalArrayIntegerUnixMinusNano returns the value of OptionalArrayIntegerUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayIntegerUnixMinusNano() []time.Time {
	return s.OptionalArrayIntegerUnixMinusNano
}

// GetOptionalArrayIntegerUnixMinusSeconds returns the value of OptionalArrayIntegerUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayIntegerUnixMinusSeconds() []time.Time {
	return s.OptionalArrayIntegerUnixMinusSeconds
}

// GetOptionalArrayNull returns the value of OptionalArrayNull.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayNull() []struct{} {
	return s.OptionalArrayNull
}

// GetOptionalArrayNumber returns the value of OptionalArrayNumber.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayNumber() []float64 {
	return s.OptionalArrayNumber
}

// GetOptionalArrayNumberDouble returns the value of OptionalArrayNumberDouble.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayNumberDouble() []float64 {
	return s.OptionalArrayNumberDouble
}

// GetOptionalArrayNumberFloat returns the value of OptionalArrayNumberFloat.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayNumberFloat() []float32 {
	return s.OptionalArrayNumberFloat
}

// GetOptionalArrayNumberInt32 returns the value of OptionalArrayNumberInt32.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayNumberInt32() []int32 {
	return s.OptionalArrayNumberInt32
}

// GetOptionalArrayNumberInt64 returns the value of OptionalArrayNumberInt64.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayNumberInt64() []int64 {
	return s.OptionalArrayNumberInt64
}

// GetOptionalArrayString returns the value of OptionalArrayString.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayString() []string {
	return s.OptionalArrayString
}

// GetOptionalArrayStringBinary returns the value of OptionalArrayStringBinary.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringBinary() []string {
	return s.OptionalArrayStringBinary
}

// GetOptionalArrayStringByte returns the value of OptionalArrayStringByte.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringByte() [][]byte {
	return s.OptionalArrayStringByte
}

// GetOptionalArrayStringDate returns the value of OptionalArrayStringDate.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringDate() []time.Time {
	return s.OptionalArrayStringDate
}

// GetOptionalArrayStringDateMinusTime returns the value of OptionalArrayStringDateMinusTime.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringDateMinusTime() []time.Time {
	return s.OptionalArrayStringDateMinusTime
}

// GetOptionalArrayStringDuration returns the value of OptionalArrayStringDuration.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringDuration() []time.Duration {
	return s.OptionalArrayStringDuration
}

// GetOptionalArrayStringEmail returns the value of OptionalArrayStringEmail.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringEmail() []string {
	return s.OptionalArrayStringEmail
}

// GetOptionalArrayStringHostname returns the value of OptionalArrayStringHostname.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringHostname() []string {
	return s.OptionalArrayStringHostname
}

// GetOptionalArrayStringInt32 returns the value of OptionalArrayStringInt32.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringInt32() []int32 {
	return s.OptionalArrayStringInt32
}

// GetOptionalArrayStringInt64 returns the value of OptionalArrayStringInt64.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringInt64() []int64 {
	return s.OptionalArrayStringInt64
}

// GetOptionalArrayStringIP returns the value of OptionalArrayStringIP.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringIP() []netip.Addr {
	return s.OptionalArrayStringIP
}

// GetOptionalArrayStringIpv4 returns the value of OptionalArrayStringIpv4.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringIpv4() []netip.Addr {
	return s.OptionalArrayStringIpv4
}

// GetOptionalArrayStringIpv6 returns the value of OptionalArrayStringIpv6.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringIpv6() []netip.Addr {
	return s.OptionalArrayStringIpv6
}

// GetOptionalArrayStringPassword returns the value of OptionalArrayStringPassword.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringPassword() []string {
	return s.OptionalArrayStringPassword
}

// GetOptionalArrayStringTime returns the value of OptionalArrayStringTime.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringTime() []time.Time {
	return s.OptionalArrayStringTime
}

// GetOptionalArrayStringUnix returns the value of OptionalArrayStringUnix.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringUnix() []time.Time {
	return s.OptionalArrayStringUnix
}

// GetOptionalArrayStringUnixMinusMicro returns the value of OptionalArrayStringUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringUnixMinusMicro() []time.Time {
	return s.OptionalArrayStringUnixMinusMicro
}

// GetOptionalArrayStringUnixMinusMilli returns the value of OptionalArrayStringUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringUnixMinusMilli() []time.Time {
	return s.OptionalArrayStringUnixMinusMilli
}

// GetOptionalArrayStringUnixMinusNano returns the value of OptionalArrayStringUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringUnixMinusNano() []time.Time {
	return s.OptionalArrayStringUnixMinusNano
}

// GetOptionalArrayStringUnixMinusSeconds returns the value of OptionalArrayStringUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringUnixMinusSeconds() []time.Time {
	return s.OptionalArrayStringUnixMinusSeconds
}

// GetOptionalArrayStringURI returns the value of OptionalArrayStringURI.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringURI() []url.URL {
	return s.OptionalArrayStringURI
}

// GetOptionalArrayStringUUID returns the value of OptionalArrayStringUUID.
func (s TestRequestRequiredFormatTestReq) GetOptionalArrayStringUUID() []uuid.UUID {
	return s.OptionalArrayStringUUID
}

// GetOptionalBoolean returns the value of OptionalBoolean.
func (s TestRequestRequiredFormatTestReq) GetOptionalBoolean() OptBool {
	return s.OptionalBoolean
}

// GetOptionalDoubleArrayAny returns the value of OptionalDoubleArrayAny.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayAny() [][]jx.Raw {
	return s.OptionalDoubleArrayAny
}

// GetOptionalDoubleArrayBoolean returns the value of OptionalDoubleArrayBoolean.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayBoolean() [][]bool {
	return s.OptionalDoubleArrayBoolean
}

// GetOptionalDoubleArrayInteger returns the value of OptionalDoubleArrayInteger.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayInteger() [][]int {
	return s.OptionalDoubleArrayInteger
}

// GetOptionalDoubleArrayIntegerInt32 returns the value of OptionalDoubleArrayIntegerInt32.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayIntegerInt32() [][]int32 {
	return s.OptionalDoubleArrayIntegerInt32
}

// GetOptionalDoubleArrayIntegerInt64 returns the value of OptionalDoubleArrayIntegerInt64.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayIntegerInt64() [][]int64 {
	return s.OptionalDoubleArrayIntegerInt64
}

// GetOptionalDoubleArrayIntegerUint returns the value of OptionalDoubleArrayIntegerUint.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayIntegerUint() [][]uint {
	return s.OptionalDoubleArrayIntegerUint
}

// GetOptionalDoubleArrayIntegerUint32 returns the value of OptionalDoubleArrayIntegerUint32.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayIntegerUint32() [][]uint32 {
	return s.OptionalDoubleArrayIntegerUint32
}

// GetOptionalDoubleArrayIntegerUint64 returns the value of OptionalDoubleArrayIntegerUint64.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayIntegerUint64() [][]uint64 {
	return s.OptionalDoubleArrayIntegerUint64
}

// GetOptionalDoubleArrayIntegerUnix returns the value of OptionalDoubleArrayIntegerUnix.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayIntegerUnix() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnix
}

// GetOptionalDoubleArrayIntegerUnixMinusMicro returns the value of OptionalDoubleArrayIntegerUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayIntegerUnixMinusMicro() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusMicro
}

// GetOptionalDoubleArrayIntegerUnixMinusMilli returns the value of OptionalDoubleArrayIntegerUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayIntegerUnixMinusMilli() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusMilli
}

// GetOptionalDoubleArrayIntegerUnixMinusNano returns the value of OptionalDoubleArrayIntegerUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayIntegerUnixMinusNano() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusNano
}

// GetOptionalDoubleArrayIntegerUnixMinusSeconds returns the value of OptionalDoubleArrayIntegerUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayIntegerUnixMinusSeconds() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusSeconds
}

// GetOptionalDoubleArrayNull returns the value of OptionalDoubleArrayNull.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayNull() [][]struct{} {
	return s.OptionalDoubleArrayNull
}

// GetOptionalDoubleArrayNumber returns the value of OptionalDoubleArrayNumber.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayNumber() [][]float64 {
	return s.OptionalDoubleArrayNumber
}

// GetOptionalDoubleArrayNumberDouble returns the value of OptionalDoubleArrayNumberDouble.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayNumberDouble() [][]float64 {
	return s.OptionalDoubleArrayNumberDouble
}

// GetOptionalDoubleArrayNumberFloat returns the value of OptionalDoubleArrayNumberFloat.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayNumberFloat() [][]float32 {
	return s.OptionalDoubleArrayNumberFloat
}

// GetOptionalDoubleArrayNumberInt32 returns the value of OptionalDoubleArrayNumberInt32.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayNumberInt32() [][]int32 {
	return s.OptionalDoubleArrayNumberInt32
}

// GetOptionalDoubleArrayNumberInt64 returns the value of OptionalDoubleArrayNumberInt64.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayNumberInt64() [][]int64 {
	return s.OptionalDoubleArrayNumberInt64
}

// GetOptionalDoubleArrayString returns the value of OptionalDoubleArrayString.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayString() [][]string {
	return s.OptionalDoubleArrayString
}

// GetOptionalDoubleArrayStringBinary returns the value of OptionalDoubleArrayStringBinary.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringBinary() [][]string {
	return s.OptionalDoubleArrayStringBinary
}

// GetOptionalDoubleArrayStringByte returns the value of OptionalDoubleArrayStringByte.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringByte() [][][]byte {
	return s.OptionalDoubleArrayStringByte
}

// GetOptionalDoubleArrayStringDate returns the value of OptionalDoubleArrayStringDate.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringDate() [][]time.Time {
	return s.OptionalDoubleArrayStringDate
}

// GetOptionalDoubleArrayStringDateMinusTime returns the value of OptionalDoubleArrayStringDateMinusTime.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringDateMinusTime() [][]time.Time {
	return s.OptionalDoubleArrayStringDateMinusTime
}

// GetOptionalDoubleArrayStringDuration returns the value of OptionalDoubleArrayStringDuration.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringDuration() [][]time.Duration {
	return s.OptionalDoubleArrayStringDuration
}

// GetOptionalDoubleArrayStringEmail returns the value of OptionalDoubleArrayStringEmail.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringEmail() [][]string {
	return s.OptionalDoubleArrayStringEmail
}

// GetOptionalDoubleArrayStringHostname returns the value of OptionalDoubleArrayStringHostname.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringHostname() [][]string {
	return s.OptionalDoubleArrayStringHostname
}

// GetOptionalDoubleArrayStringInt32 returns the value of OptionalDoubleArrayStringInt32.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringInt32() [][]int32 {
	return s.OptionalDoubleArrayStringInt32
}

// GetOptionalDoubleArrayStringInt64 returns the value of OptionalDoubleArrayStringInt64.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringInt64() [][]int64 {
	return s.OptionalDoubleArrayStringInt64
}

// GetOptionalDoubleArrayStringIP returns the value of OptionalDoubleArrayStringIP.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringIP() [][]netip.Addr {
	return s.OptionalDoubleArrayStringIP
}

// GetOptionalDoubleArrayStringIpv4 returns the value of OptionalDoubleArrayStringIpv4.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringIpv4() [][]netip.Addr {
	return s.OptionalDoubleArrayStringIpv4
}

// GetOptionalDoubleArrayStringIpv6 returns the value of OptionalDoubleArrayStringIpv6.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringIpv6() [][]netip.Addr {
	return s.OptionalDoubleArrayStringIpv6
}

// GetOptionalDoubleArrayStringPassword returns the value of OptionalDoubleArrayStringPassword.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringPassword() [][]string {
	return s.OptionalDoubleArrayStringPassword
}

// GetOptionalDoubleArrayStringTime returns the value of OptionalDoubleArrayStringTime.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringTime() [][]time.Time {
	return s.OptionalDoubleArrayStringTime
}

// GetOptionalDoubleArrayStringUnix returns the value of OptionalDoubleArrayStringUnix.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringUnix() [][]time.Time {
	return s.OptionalDoubleArrayStringUnix
}

// GetOptionalDoubleArrayStringUnixMinusMicro returns the value of OptionalDoubleArrayStringUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringUnixMinusMicro() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusMicro
}

// GetOptionalDoubleArrayStringUnixMinusMilli returns the value of OptionalDoubleArrayStringUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringUnixMinusMilli() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusMilli
}

// GetOptionalDoubleArrayStringUnixMinusNano returns the value of OptionalDoubleArrayStringUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringUnixMinusNano() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusNano
}

// GetOptionalDoubleArrayStringUnixMinusSeconds returns the value of OptionalDoubleArrayStringUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringUnixMinusSeconds() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusSeconds
}

// GetOptionalDoubleArrayStringURI returns the value of OptionalDoubleArrayStringURI.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringURI() [][]url.URL {
	return s.OptionalDoubleArrayStringURI
}

// GetOptionalDoubleArrayStringUUID returns the value of OptionalDoubleArrayStringUUID.
func (s TestRequestRequiredFormatTestReq) GetOptionalDoubleArrayStringUUID() [][]uuid.UUID {
	return s.OptionalDoubleArrayStringUUID
}

// GetOptionalInteger returns the value of OptionalInteger.
func (s TestRequestRequiredFormatTestReq) GetOptionalInteger() OptInt {
	return s.OptionalInteger
}

// GetOptionalIntegerInt32 returns the value of OptionalIntegerInt32.
func (s TestRequestRequiredFormatTestReq) GetOptionalIntegerInt32() OptInt32 {
	return s.OptionalIntegerInt32
}

// GetOptionalIntegerInt64 returns the value of OptionalIntegerInt64.
func (s TestRequestRequiredFormatTestReq) GetOptionalIntegerInt64() OptInt64 {
	return s.OptionalIntegerInt64
}

// GetOptionalIntegerUint returns the value of OptionalIntegerUint.
func (s TestRequestRequiredFormatTestReq) GetOptionalIntegerUint() OptUint {
	return s.OptionalIntegerUint
}

// GetOptionalIntegerUint32 returns the value of OptionalIntegerUint32.
func (s TestRequestRequiredFormatTestReq) GetOptionalIntegerUint32() OptUint32 {
	return s.OptionalIntegerUint32
}

// GetOptionalIntegerUint64 returns the value of OptionalIntegerUint64.
func (s TestRequestRequiredFormatTestReq) GetOptionalIntegerUint64() OptUint64 {
	return s.OptionalIntegerUint64
}

// GetOptionalIntegerUnix returns the value of OptionalIntegerUnix.
func (s TestRequestRequiredFormatTestReq) GetOptionalIntegerUnix() OptUnixSeconds {
	return s.OptionalIntegerUnix
}

// GetOptionalIntegerUnixMinusMicro returns the value of OptionalIntegerUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetOptionalIntegerUnixMinusMicro() OptUnixMicro {
	return s.OptionalIntegerUnixMinusMicro
}

// GetOptionalIntegerUnixMinusMilli returns the value of OptionalIntegerUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetOptionalIntegerUnixMinusMilli() OptUnixMilli {
	return s.OptionalIntegerUnixMinusMilli
}

// GetOptionalIntegerUnixMinusNano returns the value of OptionalIntegerUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetOptionalIntegerUnixMinusNano() OptUnixNano {
	return s.OptionalIntegerUnixMinusNano
}

// GetOptionalIntegerUnixMinusSeconds returns the value of OptionalIntegerUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetOptionalIntegerUnixMinusSeconds() OptUnixSeconds {
	return s.OptionalIntegerUnixMinusSeconds
}

// GetOptionalNull returns the value of OptionalNull.
func (s TestRequestRequiredFormatTestReq) GetOptionalNull() OptNull {
	return s.OptionalNull
}

// GetOptionalNumber returns the value of OptionalNumber.
func (s TestRequestRequiredFormatTestReq) GetOptionalNumber() OptFloat64 {
	return s.OptionalNumber
}

// GetOptionalNumberDouble returns the value of OptionalNumberDouble.
func (s TestRequestRequiredFormatTestReq) GetOptionalNumberDouble() OptFloat64 {
	return s.OptionalNumberDouble
}

// GetOptionalNumberFloat returns the value of OptionalNumberFloat.
func (s TestRequestRequiredFormatTestReq) GetOptionalNumberFloat() OptFloat32 {
	return s.OptionalNumberFloat
}

// GetOptionalNumberInt32 returns the value of OptionalNumberInt32.
func (s TestRequestRequiredFormatTestReq) GetOptionalNumberInt32() OptInt32 {
	return s.OptionalNumberInt32
}

// GetOptionalNumberInt64 returns the value of OptionalNumberInt64.
func (s TestRequestRequiredFormatTestReq) GetOptionalNumberInt64() OptInt64 {
	return s.OptionalNumberInt64
}

// GetOptionalString returns the value of OptionalString.
func (s TestRequestRequiredFormatTestReq) GetOptionalString() OptString {
	return s.OptionalString
}

// GetOptionalStringBinary returns the value of OptionalStringBinary.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringBinary() OptString {
	return s.OptionalStringBinary
}

// GetOptionalStringByte returns the value of OptionalStringByte.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringByte() []byte {
	return s.OptionalStringByte
}

// GetOptionalStringDate returns the value of OptionalStringDate.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringDate() OptDate {
	return s.OptionalStringDate
}

// GetOptionalStringDateMinusTime returns the value of OptionalStringDateMinusTime.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringDateMinusTime() OptDateTime {
	return s.OptionalStringDateMinusTime
}

// GetOptionalStringDuration returns the value of OptionalStringDuration.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringDuration() OptDuration {
	return s.OptionalStringDuration
}

// GetOptionalStringEmail returns the value of OptionalStringEmail.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringEmail() OptString {
	return s.OptionalStringEmail
}

// GetOptionalStringHostname returns the value of OptionalStringHostname.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringHostname() OptString {
	return s.OptionalStringHostname
}

// GetOptionalStringInt32 returns the value of OptionalStringInt32.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringInt32() OptStringInt32 {
	return s.OptionalStringInt32
}

// GetOptionalStringInt64 returns the value of OptionalStringInt64.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringInt64() OptStringInt64 {
	return s.OptionalStringInt64
}

// GetOptionalStringIP returns the value of OptionalStringIP.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringIP() OptIP {
	return s.OptionalStringIP
}

// GetOptionalStringIpv4 returns the value of OptionalStringIpv4.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringIpv4() OptIPv4 {
	return s.OptionalStringIpv4
}

// GetOptionalStringIpv6 returns the value of OptionalStringIpv6.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringIpv6() OptIPv6 {
	return s.OptionalStringIpv6
}

// GetOptionalStringPassword returns the value of OptionalStringPassword.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringPassword() OptString {
	return s.OptionalStringPassword
}

// GetOptionalStringTime returns the value of OptionalStringTime.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringTime() OptTime {
	return s.OptionalStringTime
}

// GetOptionalStringUnix returns the value of OptionalStringUnix.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringUnix() OptStringUnixSeconds {
	return s.OptionalStringUnix
}

// GetOptionalStringUnixMinusMicro returns the value of OptionalStringUnixMinusMicro.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringUnixMinusMicro() OptStringUnixMicro {
	return s.OptionalStringUnixMinusMicro
}

// GetOptionalStringUnixMinusMilli returns the value of OptionalStringUnixMinusMilli.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringUnixMinusMilli() OptStringUnixMilli {
	return s.OptionalStringUnixMinusMilli
}

// GetOptionalStringUnixMinusNano returns the value of OptionalStringUnixMinusNano.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringUnixMinusNano() OptStringUnixNano {
	return s.OptionalStringUnixMinusNano
}

// GetOptionalStringUnixMinusSeconds returns the value of OptionalStringUnixMinusSeconds.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringUnixMinusSeconds() OptStringUnixSeconds {
	return s.OptionalStringUnixMinusSeconds
}

// GetOptionalStringURI returns the value of OptionalStringURI.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringURI() OptURI {
	return s.OptionalStringURI
}

// GetOptionalStringUUID returns the value of OptionalStringUUID.
func (s TestRequestRequiredFormatTestReq) GetOptionalStringUUID() OptUUID {
	return s.OptionalStringUUID
}

// SetRequiredAny sets the value of RequiredAny.
func (s *TestRequestRequiredFormatTestReq) SetRequiredAny(val jx.Raw) {
	s.RequiredAny = val
}

// SetRequiredArrayAny sets the value of RequiredArrayAny.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayAny(val []jx.Raw) {
	s.RequiredArrayAny = val
}

// SetRequiredArrayBoolean sets the value of RequiredArrayBoolean.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayBoolean(val []bool) {
	s.RequiredArrayBoolean = val
}

// SetRequiredArrayInteger sets the value of RequiredArrayInteger.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayInteger(val []int) {
	s.RequiredArrayInteger = val
}

// SetRequiredArrayIntegerInt32 sets the value of RequiredArrayIntegerInt32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayIntegerInt32(val []int32) {
	s.RequiredArrayIntegerInt32 = val
}

// SetRequiredArrayIntegerInt64 sets the value of RequiredArrayIntegerInt64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayIntegerInt64(val []int64) {
	s.RequiredArrayIntegerInt64 = val
}

// SetRequiredArrayIntegerUint sets the value of RequiredArrayIntegerUint.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayIntegerUint(val []uint) {
	s.RequiredArrayIntegerUint = val
}

// SetRequiredArrayIntegerUint32 sets the value of RequiredArrayIntegerUint32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayIntegerUint32(val []uint32) {
	s.RequiredArrayIntegerUint32 = val
}

// SetRequiredArrayIntegerUint64 sets the value of RequiredArrayIntegerUint64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayIntegerUint64(val []uint64) {
	s.RequiredArrayIntegerUint64 = val
}

// SetRequiredArrayIntegerUnix sets the value of RequiredArrayIntegerUnix.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayIntegerUnix(val []time.Time) {
	s.RequiredArrayIntegerUnix = val
}

// SetRequiredArrayIntegerUnixMinusMicro sets the value of RequiredArrayIntegerUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayIntegerUnixMinusMicro(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusMicro = val
}

// SetRequiredArrayIntegerUnixMinusMilli sets the value of RequiredArrayIntegerUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayIntegerUnixMinusMilli(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusMilli = val
}

// SetRequiredArrayIntegerUnixMinusNano sets the value of RequiredArrayIntegerUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayIntegerUnixMinusNano(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusNano = val
}

// SetRequiredArrayIntegerUnixMinusSeconds sets the value of RequiredArrayIntegerUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayIntegerUnixMinusSeconds(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusSeconds = val
}

// SetRequiredArrayNull sets the value of RequiredArrayNull.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayNull(val []struct{}) {
	s.RequiredArrayNull = val
}

// SetRequiredArrayNumber sets the value of RequiredArrayNumber.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayNumber(val []float64) {
	s.RequiredArrayNumber = val
}

// SetRequiredArrayNumberDouble sets the value of RequiredArrayNumberDouble.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayNumberDouble(val []float64) {
	s.RequiredArrayNumberDouble = val
}

// SetRequiredArrayNumberFloat sets the value of RequiredArrayNumberFloat.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayNumberFloat(val []float32) {
	s.RequiredArrayNumberFloat = val
}

// SetRequiredArrayNumberInt32 sets the value of RequiredArrayNumberInt32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayNumberInt32(val []int32) {
	s.RequiredArrayNumberInt32 = val
}

// SetRequiredArrayNumberInt64 sets the value of RequiredArrayNumberInt64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayNumberInt64(val []int64) {
	s.RequiredArrayNumberInt64 = val
}

// SetRequiredArrayString sets the value of RequiredArrayString.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayString(val []string) {
	s.RequiredArrayString = val
}

// SetRequiredArrayStringBinary sets the value of RequiredArrayStringBinary.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringBinary(val []string) {
	s.RequiredArrayStringBinary = val
}

// SetRequiredArrayStringByte sets the value of RequiredArrayStringByte.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringByte(val [][]byte) {
	s.RequiredArrayStringByte = val
}

// SetRequiredArrayStringDate sets the value of RequiredArrayStringDate.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringDate(val []time.Time) {
	s.RequiredArrayStringDate = val
}

// SetRequiredArrayStringDateMinusTime sets the value of RequiredArrayStringDateMinusTime.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringDateMinusTime(val []time.Time) {
	s.RequiredArrayStringDateMinusTime = val
}

// SetRequiredArrayStringDuration sets the value of RequiredArrayStringDuration.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringDuration(val []time.Duration) {
	s.RequiredArrayStringDuration = val
}

// SetRequiredArrayStringEmail sets the value of RequiredArrayStringEmail.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringEmail(val []string) {
	s.RequiredArrayStringEmail = val
}

// SetRequiredArrayStringHostname sets the value of RequiredArrayStringHostname.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringHostname(val []string) {
	s.RequiredArrayStringHostname = val
}

// SetRequiredArrayStringInt32 sets the value of RequiredArrayStringInt32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringInt32(val []int32) {
	s.RequiredArrayStringInt32 = val
}

// SetRequiredArrayStringInt64 sets the value of RequiredArrayStringInt64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringInt64(val []int64) {
	s.RequiredArrayStringInt64 = val
}

// SetRequiredArrayStringIP sets the value of RequiredArrayStringIP.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringIP(val []netip.Addr) {
	s.RequiredArrayStringIP = val
}

// SetRequiredArrayStringIpv4 sets the value of RequiredArrayStringIpv4.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringIpv4(val []netip.Addr) {
	s.RequiredArrayStringIpv4 = val
}

// SetRequiredArrayStringIpv6 sets the value of RequiredArrayStringIpv6.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringIpv6(val []netip.Addr) {
	s.RequiredArrayStringIpv6 = val
}

// SetRequiredArrayStringPassword sets the value of RequiredArrayStringPassword.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringPassword(val []string) {
	s.RequiredArrayStringPassword = val
}

// SetRequiredArrayStringTime sets the value of RequiredArrayStringTime.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringTime(val []time.Time) {
	s.RequiredArrayStringTime = val
}

// SetRequiredArrayStringUnix sets the value of RequiredArrayStringUnix.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringUnix(val []time.Time) {
	s.RequiredArrayStringUnix = val
}

// SetRequiredArrayStringUnixMinusMicro sets the value of RequiredArrayStringUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringUnixMinusMicro(val []time.Time) {
	s.RequiredArrayStringUnixMinusMicro = val
}

// SetRequiredArrayStringUnixMinusMilli sets the value of RequiredArrayStringUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringUnixMinusMilli(val []time.Time) {
	s.RequiredArrayStringUnixMinusMilli = val
}

// SetRequiredArrayStringUnixMinusNano sets the value of RequiredArrayStringUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringUnixMinusNano(val []time.Time) {
	s.RequiredArrayStringUnixMinusNano = val
}

// SetRequiredArrayStringUnixMinusSeconds sets the value of RequiredArrayStringUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringUnixMinusSeconds(val []time.Time) {
	s.RequiredArrayStringUnixMinusSeconds = val
}

// SetRequiredArrayStringURI sets the value of RequiredArrayStringURI.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringURI(val []url.URL) {
	s.RequiredArrayStringURI = val
}

// SetRequiredArrayStringUUID sets the value of RequiredArrayStringUUID.
func (s *TestRequestRequiredFormatTestReq) SetRequiredArrayStringUUID(val []uuid.UUID) {
	s.RequiredArrayStringUUID = val
}

// SetRequiredBoolean sets the value of RequiredBoolean.
func (s *TestRequestRequiredFormatTestReq) SetRequiredBoolean(val bool) {
	s.RequiredBoolean = val
}

// SetRequiredDoubleArrayAny sets the value of RequiredDoubleArrayAny.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayAny(val [][]jx.Raw) {
	s.RequiredDoubleArrayAny = val
}

// SetRequiredDoubleArrayBoolean sets the value of RequiredDoubleArrayBoolean.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayBoolean(val [][]bool) {
	s.RequiredDoubleArrayBoolean = val
}

// SetRequiredDoubleArrayInteger sets the value of RequiredDoubleArrayInteger.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayInteger(val [][]int) {
	s.RequiredDoubleArrayInteger = val
}

// SetRequiredDoubleArrayIntegerInt32 sets the value of RequiredDoubleArrayIntegerInt32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayIntegerInt32(val [][]int32) {
	s.RequiredDoubleArrayIntegerInt32 = val
}

// SetRequiredDoubleArrayIntegerInt64 sets the value of RequiredDoubleArrayIntegerInt64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayIntegerInt64(val [][]int64) {
	s.RequiredDoubleArrayIntegerInt64 = val
}

// SetRequiredDoubleArrayIntegerUint sets the value of RequiredDoubleArrayIntegerUint.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayIntegerUint(val [][]uint) {
	s.RequiredDoubleArrayIntegerUint = val
}

// SetRequiredDoubleArrayIntegerUint32 sets the value of RequiredDoubleArrayIntegerUint32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayIntegerUint32(val [][]uint32) {
	s.RequiredDoubleArrayIntegerUint32 = val
}

// SetRequiredDoubleArrayIntegerUint64 sets the value of RequiredDoubleArrayIntegerUint64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayIntegerUint64(val [][]uint64) {
	s.RequiredDoubleArrayIntegerUint64 = val
}

// SetRequiredDoubleArrayIntegerUnix sets the value of RequiredDoubleArrayIntegerUnix.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayIntegerUnix(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnix = val
}

// SetRequiredDoubleArrayIntegerUnixMinusMicro sets the value of RequiredDoubleArrayIntegerUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayIntegerUnixMinusMicro(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusMicro = val
}

// SetRequiredDoubleArrayIntegerUnixMinusMilli sets the value of RequiredDoubleArrayIntegerUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayIntegerUnixMinusMilli(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusMilli = val
}

// SetRequiredDoubleArrayIntegerUnixMinusNano sets the value of RequiredDoubleArrayIntegerUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayIntegerUnixMinusNano(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusNano = val
}

// SetRequiredDoubleArrayIntegerUnixMinusSeconds sets the value of RequiredDoubleArrayIntegerUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayIntegerUnixMinusSeconds(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusSeconds = val
}

// SetRequiredDoubleArrayNull sets the value of RequiredDoubleArrayNull.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayNull(val [][]struct{}) {
	s.RequiredDoubleArrayNull = val
}

// SetRequiredDoubleArrayNumber sets the value of RequiredDoubleArrayNumber.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayNumber(val [][]float64) {
	s.RequiredDoubleArrayNumber = val
}

// SetRequiredDoubleArrayNumberDouble sets the value of RequiredDoubleArrayNumberDouble.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayNumberDouble(val [][]float64) {
	s.RequiredDoubleArrayNumberDouble = val
}

// SetRequiredDoubleArrayNumberFloat sets the value of RequiredDoubleArrayNumberFloat.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayNumberFloat(val [][]float32) {
	s.RequiredDoubleArrayNumberFloat = val
}

// SetRequiredDoubleArrayNumberInt32 sets the value of RequiredDoubleArrayNumberInt32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayNumberInt32(val [][]int32) {
	s.RequiredDoubleArrayNumberInt32 = val
}

// SetRequiredDoubleArrayNumberInt64 sets the value of RequiredDoubleArrayNumberInt64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayNumberInt64(val [][]int64) {
	s.RequiredDoubleArrayNumberInt64 = val
}

// SetRequiredDoubleArrayString sets the value of RequiredDoubleArrayString.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayString(val [][]string) {
	s.RequiredDoubleArrayString = val
}

// SetRequiredDoubleArrayStringBinary sets the value of RequiredDoubleArrayStringBinary.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringBinary(val [][]string) {
	s.RequiredDoubleArrayStringBinary = val
}

// SetRequiredDoubleArrayStringByte sets the value of RequiredDoubleArrayStringByte.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringByte(val [][][]byte) {
	s.RequiredDoubleArrayStringByte = val
}

// SetRequiredDoubleArrayStringDate sets the value of RequiredDoubleArrayStringDate.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringDate(val [][]time.Time) {
	s.RequiredDoubleArrayStringDate = val
}

// SetRequiredDoubleArrayStringDateMinusTime sets the value of RequiredDoubleArrayStringDateMinusTime.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringDateMinusTime(val [][]time.Time) {
	s.RequiredDoubleArrayStringDateMinusTime = val
}

// SetRequiredDoubleArrayStringDuration sets the value of RequiredDoubleArrayStringDuration.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringDuration(val [][]time.Duration) {
	s.RequiredDoubleArrayStringDuration = val
}

// SetRequiredDoubleArrayStringEmail sets the value of RequiredDoubleArrayStringEmail.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringEmail(val [][]string) {
	s.RequiredDoubleArrayStringEmail = val
}

// SetRequiredDoubleArrayStringHostname sets the value of RequiredDoubleArrayStringHostname.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringHostname(val [][]string) {
	s.RequiredDoubleArrayStringHostname = val
}

// SetRequiredDoubleArrayStringInt32 sets the value of RequiredDoubleArrayStringInt32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringInt32(val [][]int32) {
	s.RequiredDoubleArrayStringInt32 = val
}

// SetRequiredDoubleArrayStringInt64 sets the value of RequiredDoubleArrayStringInt64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringInt64(val [][]int64) {
	s.RequiredDoubleArrayStringInt64 = val
}

// SetRequiredDoubleArrayStringIP sets the value of RequiredDoubleArrayStringIP.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringIP(val [][]netip.Addr) {
	s.RequiredDoubleArrayStringIP = val
}

// SetRequiredDoubleArrayStringIpv4 sets the value of RequiredDoubleArrayStringIpv4.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringIpv4(val [][]netip.Addr) {
	s.RequiredDoubleArrayStringIpv4 = val
}

// SetRequiredDoubleArrayStringIpv6 sets the value of RequiredDoubleArrayStringIpv6.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringIpv6(val [][]netip.Addr) {
	s.RequiredDoubleArrayStringIpv6 = val
}

// SetRequiredDoubleArrayStringPassword sets the value of RequiredDoubleArrayStringPassword.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringPassword(val [][]string) {
	s.RequiredDoubleArrayStringPassword = val
}

// SetRequiredDoubleArrayStringTime sets the value of RequiredDoubleArrayStringTime.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringTime(val [][]time.Time) {
	s.RequiredDoubleArrayStringTime = val
}

// SetRequiredDoubleArrayStringUnix sets the value of RequiredDoubleArrayStringUnix.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringUnix(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnix = val
}

// SetRequiredDoubleArrayStringUnixMinusMicro sets the value of RequiredDoubleArrayStringUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringUnixMinusMicro(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusMicro = val
}

// SetRequiredDoubleArrayStringUnixMinusMilli sets the value of RequiredDoubleArrayStringUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringUnixMinusMilli(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusMilli = val
}

// SetRequiredDoubleArrayStringUnixMinusNano sets the value of RequiredDoubleArrayStringUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringUnixMinusNano(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusNano = val
}

// SetRequiredDoubleArrayStringUnixMinusSeconds sets the value of RequiredDoubleArrayStringUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringUnixMinusSeconds(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusSeconds = val
}

// SetRequiredDoubleArrayStringURI sets the value of RequiredDoubleArrayStringURI.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringURI(val [][]url.URL) {
	s.RequiredDoubleArrayStringURI = val
}

// SetRequiredDoubleArrayStringUUID sets the value of RequiredDoubleArrayStringUUID.
func (s *TestRequestRequiredFormatTestReq) SetRequiredDoubleArrayStringUUID(val [][]uuid.UUID) {
	s.RequiredDoubleArrayStringUUID = val
}

// SetRequiredInteger sets the value of RequiredInteger.
func (s *TestRequestRequiredFormatTestReq) SetRequiredInteger(val int) {
	s.RequiredInteger = val
}

// SetRequiredIntegerInt32 sets the value of RequiredIntegerInt32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredIntegerInt32(val int32) {
	s.RequiredIntegerInt32 = val
}

// SetRequiredIntegerInt64 sets the value of RequiredIntegerInt64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredIntegerInt64(val int64) {
	s.RequiredIntegerInt64 = val
}

// SetRequiredIntegerUint sets the value of RequiredIntegerUint.
func (s *TestRequestRequiredFormatTestReq) SetRequiredIntegerUint(val uint) {
	s.RequiredIntegerUint = val
}

// SetRequiredIntegerUint32 sets the value of RequiredIntegerUint32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredIntegerUint32(val uint32) {
	s.RequiredIntegerUint32 = val
}

// SetRequiredIntegerUint64 sets the value of RequiredIntegerUint64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredIntegerUint64(val uint64) {
	s.RequiredIntegerUint64 = val
}

// SetRequiredIntegerUnix sets the value of RequiredIntegerUnix.
func (s *TestRequestRequiredFormatTestReq) SetRequiredIntegerUnix(val time.Time) {
	s.RequiredIntegerUnix = val
}

// SetRequiredIntegerUnixMinusMicro sets the value of RequiredIntegerUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetRequiredIntegerUnixMinusMicro(val time.Time) {
	s.RequiredIntegerUnixMinusMicro = val
}

// SetRequiredIntegerUnixMinusMilli sets the value of RequiredIntegerUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetRequiredIntegerUnixMinusMilli(val time.Time) {
	s.RequiredIntegerUnixMinusMilli = val
}

// SetRequiredIntegerUnixMinusNano sets the value of RequiredIntegerUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetRequiredIntegerUnixMinusNano(val time.Time) {
	s.RequiredIntegerUnixMinusNano = val
}

// SetRequiredIntegerUnixMinusSeconds sets the value of RequiredIntegerUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetRequiredIntegerUnixMinusSeconds(val time.Time) {
	s.RequiredIntegerUnixMinusSeconds = val
}

// SetRequiredNull sets the value of RequiredNull.
func (s *TestRequestRequiredFormatTestReq) SetRequiredNull(val struct{}) {
	s.RequiredNull = val
}

// SetRequiredNumber sets the value of RequiredNumber.
func (s *TestRequestRequiredFormatTestReq) SetRequiredNumber(val float64) {
	s.RequiredNumber = val
}

// SetRequiredNumberDouble sets the value of RequiredNumberDouble.
func (s *TestRequestRequiredFormatTestReq) SetRequiredNumberDouble(val float64) {
	s.RequiredNumberDouble = val
}

// SetRequiredNumberFloat sets the value of RequiredNumberFloat.
func (s *TestRequestRequiredFormatTestReq) SetRequiredNumberFloat(val float32) {
	s.RequiredNumberFloat = val
}

// SetRequiredNumberInt32 sets the value of RequiredNumberInt32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredNumberInt32(val int32) {
	s.RequiredNumberInt32 = val
}

// SetRequiredNumberInt64 sets the value of RequiredNumberInt64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredNumberInt64(val int64) {
	s.RequiredNumberInt64 = val
}

// SetRequiredString sets the value of RequiredString.
func (s *TestRequestRequiredFormatTestReq) SetRequiredString(val string) {
	s.RequiredString = val
}

// SetRequiredStringBinary sets the value of RequiredStringBinary.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringBinary(val string) {
	s.RequiredStringBinary = val
}

// SetRequiredStringByte sets the value of RequiredStringByte.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringByte(val []byte) {
	s.RequiredStringByte = val
}

// SetRequiredStringDate sets the value of RequiredStringDate.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringDate(val time.Time) {
	s.RequiredStringDate = val
}

// SetRequiredStringDateMinusTime sets the value of RequiredStringDateMinusTime.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringDateMinusTime(val time.Time) {
	s.RequiredStringDateMinusTime = val
}

// SetRequiredStringDuration sets the value of RequiredStringDuration.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringDuration(val time.Duration) {
	s.RequiredStringDuration = val
}

// SetRequiredStringEmail sets the value of RequiredStringEmail.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringEmail(val string) {
	s.RequiredStringEmail = val
}

// SetRequiredStringHostname sets the value of RequiredStringHostname.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringHostname(val string) {
	s.RequiredStringHostname = val
}

// SetRequiredStringInt32 sets the value of RequiredStringInt32.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringInt32(val int32) {
	s.RequiredStringInt32 = val
}

// SetRequiredStringInt64 sets the value of RequiredStringInt64.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringInt64(val int64) {
	s.RequiredStringInt64 = val
}

// SetRequiredStringIP sets the value of RequiredStringIP.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringIP(val netip.Addr) {
	s.RequiredStringIP = val
}

// SetRequiredStringIpv4 sets the value of RequiredStringIpv4.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringIpv4(val netip.Addr) {
	s.RequiredStringIpv4 = val
}

// SetRequiredStringIpv6 sets the value of RequiredStringIpv6.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringIpv6(val netip.Addr) {
	s.RequiredStringIpv6 = val
}

// SetRequiredStringPassword sets the value of RequiredStringPassword.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringPassword(val string) {
	s.RequiredStringPassword = val
}

// SetRequiredStringTime sets the value of RequiredStringTime.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringTime(val time.Time) {
	s.RequiredStringTime = val
}

// SetRequiredStringUnix sets the value of RequiredStringUnix.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringUnix(val time.Time) {
	s.RequiredStringUnix = val
}

// SetRequiredStringUnixMinusMicro sets the value of RequiredStringUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringUnixMinusMicro(val time.Time) {
	s.RequiredStringUnixMinusMicro = val
}

// SetRequiredStringUnixMinusMilli sets the value of RequiredStringUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringUnixMinusMilli(val time.Time) {
	s.RequiredStringUnixMinusMilli = val
}

// SetRequiredStringUnixMinusNano sets the value of RequiredStringUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringUnixMinusNano(val time.Time) {
	s.RequiredStringUnixMinusNano = val
}

// SetRequiredStringUnixMinusSeconds sets the value of RequiredStringUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringUnixMinusSeconds(val time.Time) {
	s.RequiredStringUnixMinusSeconds = val
}

// SetRequiredStringURI sets the value of RequiredStringURI.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringURI(val url.URL) {
	s.RequiredStringURI = val
}

// SetRequiredStringUUID sets the value of RequiredStringUUID.
func (s *TestRequestRequiredFormatTestReq) SetRequiredStringUUID(val uuid.UUID) {
	s.RequiredStringUUID = val
}

// SetOptionalAny sets the value of OptionalAny.
func (s *TestRequestRequiredFormatTestReq) SetOptionalAny(val jx.Raw) {
	s.OptionalAny = val
}

// SetOptionalArrayAny sets the value of OptionalArrayAny.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayAny(val []jx.Raw) {
	s.OptionalArrayAny = val
}

// SetOptionalArrayBoolean sets the value of OptionalArrayBoolean.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayBoolean(val []bool) {
	s.OptionalArrayBoolean = val
}

// SetOptionalArrayInteger sets the value of OptionalArrayInteger.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayInteger(val []int) {
	s.OptionalArrayInteger = val
}

// SetOptionalArrayIntegerInt32 sets the value of OptionalArrayIntegerInt32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayIntegerInt32(val []int32) {
	s.OptionalArrayIntegerInt32 = val
}

// SetOptionalArrayIntegerInt64 sets the value of OptionalArrayIntegerInt64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayIntegerInt64(val []int64) {
	s.OptionalArrayIntegerInt64 = val
}

// SetOptionalArrayIntegerUint sets the value of OptionalArrayIntegerUint.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayIntegerUint(val []uint) {
	s.OptionalArrayIntegerUint = val
}

// SetOptionalArrayIntegerUint32 sets the value of OptionalArrayIntegerUint32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayIntegerUint32(val []uint32) {
	s.OptionalArrayIntegerUint32 = val
}

// SetOptionalArrayIntegerUint64 sets the value of OptionalArrayIntegerUint64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayIntegerUint64(val []uint64) {
	s.OptionalArrayIntegerUint64 = val
}

// SetOptionalArrayIntegerUnix sets the value of OptionalArrayIntegerUnix.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayIntegerUnix(val []time.Time) {
	s.OptionalArrayIntegerUnix = val
}

// SetOptionalArrayIntegerUnixMinusMicro sets the value of OptionalArrayIntegerUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayIntegerUnixMinusMicro(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusMicro = val
}

// SetOptionalArrayIntegerUnixMinusMilli sets the value of OptionalArrayIntegerUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayIntegerUnixMinusMilli(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusMilli = val
}

// SetOptionalArrayIntegerUnixMinusNano sets the value of OptionalArrayIntegerUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayIntegerUnixMinusNano(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusNano = val
}

// SetOptionalArrayIntegerUnixMinusSeconds sets the value of OptionalArrayIntegerUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayIntegerUnixMinusSeconds(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusSeconds = val
}

// SetOptionalArrayNull sets the value of OptionalArrayNull.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayNull(val []struct{}) {
	s.OptionalArrayNull = val
}

// SetOptionalArrayNumber sets the value of OptionalArrayNumber.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayNumber(val []float64) {
	s.OptionalArrayNumber = val
}

// SetOptionalArrayNumberDouble sets the value of OptionalArrayNumberDouble.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayNumberDouble(val []float64) {
	s.OptionalArrayNumberDouble = val
}

// SetOptionalArrayNumberFloat sets the value of OptionalArrayNumberFloat.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayNumberFloat(val []float32) {
	s.OptionalArrayNumberFloat = val
}

// SetOptionalArrayNumberInt32 sets the value of OptionalArrayNumberInt32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayNumberInt32(val []int32) {
	s.OptionalArrayNumberInt32 = val
}

// SetOptionalArrayNumberInt64 sets the value of OptionalArrayNumberInt64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayNumberInt64(val []int64) {
	s.OptionalArrayNumberInt64 = val
}

// SetOptionalArrayString sets the value of OptionalArrayString.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayString(val []string) {
	s.OptionalArrayString = val
}

// SetOptionalArrayStringBinary sets the value of OptionalArrayStringBinary.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringBinary(val []string) {
	s.OptionalArrayStringBinary = val
}

// SetOptionalArrayStringByte sets the value of OptionalArrayStringByte.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringByte(val [][]byte) {
	s.OptionalArrayStringByte = val
}

// SetOptionalArrayStringDate sets the value of OptionalArrayStringDate.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringDate(val []time.Time) {
	s.OptionalArrayStringDate = val
}

// SetOptionalArrayStringDateMinusTime sets the value of OptionalArrayStringDateMinusTime.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringDateMinusTime(val []time.Time) {
	s.OptionalArrayStringDateMinusTime = val
}

// SetOptionalArrayStringDuration sets the value of OptionalArrayStringDuration.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringDuration(val []time.Duration) {
	s.OptionalArrayStringDuration = val
}

// SetOptionalArrayStringEmail sets the value of OptionalArrayStringEmail.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringEmail(val []string) {
	s.OptionalArrayStringEmail = val
}

// SetOptionalArrayStringHostname sets the value of OptionalArrayStringHostname.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringHostname(val []string) {
	s.OptionalArrayStringHostname = val
}

// SetOptionalArrayStringInt32 sets the value of OptionalArrayStringInt32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringInt32(val []int32) {
	s.OptionalArrayStringInt32 = val
}

// SetOptionalArrayStringInt64 sets the value of OptionalArrayStringInt64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringInt64(val []int64) {
	s.OptionalArrayStringInt64 = val
}

// SetOptionalArrayStringIP sets the value of OptionalArrayStringIP.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringIP(val []netip.Addr) {
	s.OptionalArrayStringIP = val
}

// SetOptionalArrayStringIpv4 sets the value of OptionalArrayStringIpv4.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringIpv4(val []netip.Addr) {
	s.OptionalArrayStringIpv4 = val
}

// SetOptionalArrayStringIpv6 sets the value of OptionalArrayStringIpv6.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringIpv6(val []netip.Addr) {
	s.OptionalArrayStringIpv6 = val
}

// SetOptionalArrayStringPassword sets the value of OptionalArrayStringPassword.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringPassword(val []string) {
	s.OptionalArrayStringPassword = val
}

// SetOptionalArrayStringTime sets the value of OptionalArrayStringTime.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringTime(val []time.Time) {
	s.OptionalArrayStringTime = val
}

// SetOptionalArrayStringUnix sets the value of OptionalArrayStringUnix.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringUnix(val []time.Time) {
	s.OptionalArrayStringUnix = val
}

// SetOptionalArrayStringUnixMinusMicro sets the value of OptionalArrayStringUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringUnixMinusMicro(val []time.Time) {
	s.OptionalArrayStringUnixMinusMicro = val
}

// SetOptionalArrayStringUnixMinusMilli sets the value of OptionalArrayStringUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringUnixMinusMilli(val []time.Time) {
	s.OptionalArrayStringUnixMinusMilli = val
}

// SetOptionalArrayStringUnixMinusNano sets the value of OptionalArrayStringUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringUnixMinusNano(val []time.Time) {
	s.OptionalArrayStringUnixMinusNano = val
}

// SetOptionalArrayStringUnixMinusSeconds sets the value of OptionalArrayStringUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringUnixMinusSeconds(val []time.Time) {
	s.OptionalArrayStringUnixMinusSeconds = val
}

// SetOptionalArrayStringURI sets the value of OptionalArrayStringURI.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringURI(val []url.URL) {
	s.OptionalArrayStringURI = val
}

// SetOptionalArrayStringUUID sets the value of OptionalArrayStringUUID.
func (s *TestRequestRequiredFormatTestReq) SetOptionalArrayStringUUID(val []uuid.UUID) {
	s.OptionalArrayStringUUID = val
}

// SetOptionalBoolean sets the value of OptionalBoolean.
func (s *TestRequestRequiredFormatTestReq) SetOptionalBoolean(val OptBool) {
	s.OptionalBoolean = val
}

// SetOptionalDoubleArrayAny sets the value of OptionalDoubleArrayAny.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayAny(val [][]jx.Raw) {
	s.OptionalDoubleArrayAny = val
}

// SetOptionalDoubleArrayBoolean sets the value of OptionalDoubleArrayBoolean.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayBoolean(val [][]bool) {
	s.OptionalDoubleArrayBoolean = val
}

// SetOptionalDoubleArrayInteger sets the value of OptionalDoubleArrayInteger.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayInteger(val [][]int) {
	s.OptionalDoubleArrayInteger = val
}

// SetOptionalDoubleArrayIntegerInt32 sets the value of OptionalDoubleArrayIntegerInt32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayIntegerInt32(val [][]int32) {
	s.OptionalDoubleArrayIntegerInt32 = val
}

// SetOptionalDoubleArrayIntegerInt64 sets the value of OptionalDoubleArrayIntegerInt64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayIntegerInt64(val [][]int64) {
	s.OptionalDoubleArrayIntegerInt64 = val
}

// SetOptionalDoubleArrayIntegerUint sets the value of OptionalDoubleArrayIntegerUint.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayIntegerUint(val [][]uint) {
	s.OptionalDoubleArrayIntegerUint = val
}

// SetOptionalDoubleArrayIntegerUint32 sets the value of OptionalDoubleArrayIntegerUint32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayIntegerUint32(val [][]uint32) {
	s.OptionalDoubleArrayIntegerUint32 = val
}

// SetOptionalDoubleArrayIntegerUint64 sets the value of OptionalDoubleArrayIntegerUint64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayIntegerUint64(val [][]uint64) {
	s.OptionalDoubleArrayIntegerUint64 = val
}

// SetOptionalDoubleArrayIntegerUnix sets the value of OptionalDoubleArrayIntegerUnix.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayIntegerUnix(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnix = val
}

// SetOptionalDoubleArrayIntegerUnixMinusMicro sets the value of OptionalDoubleArrayIntegerUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayIntegerUnixMinusMicro(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusMicro = val
}

// SetOptionalDoubleArrayIntegerUnixMinusMilli sets the value of OptionalDoubleArrayIntegerUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayIntegerUnixMinusMilli(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusMilli = val
}

// SetOptionalDoubleArrayIntegerUnixMinusNano sets the value of OptionalDoubleArrayIntegerUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayIntegerUnixMinusNano(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusNano = val
}

// SetOptionalDoubleArrayIntegerUnixMinusSeconds sets the value of OptionalDoubleArrayIntegerUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayIntegerUnixMinusSeconds(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusSeconds = val
}

// SetOptionalDoubleArrayNull sets the value of OptionalDoubleArrayNull.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayNull(val [][]struct{}) {
	s.OptionalDoubleArrayNull = val
}

// SetOptionalDoubleArrayNumber sets the value of OptionalDoubleArrayNumber.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayNumber(val [][]float64) {
	s.OptionalDoubleArrayNumber = val
}

// SetOptionalDoubleArrayNumberDouble sets the value of OptionalDoubleArrayNumberDouble.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayNumberDouble(val [][]float64) {
	s.OptionalDoubleArrayNumberDouble = val
}

// SetOptionalDoubleArrayNumberFloat sets the value of OptionalDoubleArrayNumberFloat.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayNumberFloat(val [][]float32) {
	s.OptionalDoubleArrayNumberFloat = val
}

// SetOptionalDoubleArrayNumberInt32 sets the value of OptionalDoubleArrayNumberInt32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayNumberInt32(val [][]int32) {
	s.OptionalDoubleArrayNumberInt32 = val
}

// SetOptionalDoubleArrayNumberInt64 sets the value of OptionalDoubleArrayNumberInt64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayNumberInt64(val [][]int64) {
	s.OptionalDoubleArrayNumberInt64 = val
}

// SetOptionalDoubleArrayString sets the value of OptionalDoubleArrayString.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayString(val [][]string) {
	s.OptionalDoubleArrayString = val
}

// SetOptionalDoubleArrayStringBinary sets the value of OptionalDoubleArrayStringBinary.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringBinary(val [][]string) {
	s.OptionalDoubleArrayStringBinary = val
}

// SetOptionalDoubleArrayStringByte sets the value of OptionalDoubleArrayStringByte.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringByte(val [][][]byte) {
	s.OptionalDoubleArrayStringByte = val
}

// SetOptionalDoubleArrayStringDate sets the value of OptionalDoubleArrayStringDate.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringDate(val [][]time.Time) {
	s.OptionalDoubleArrayStringDate = val
}

// SetOptionalDoubleArrayStringDateMinusTime sets the value of OptionalDoubleArrayStringDateMinusTime.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringDateMinusTime(val [][]time.Time) {
	s.OptionalDoubleArrayStringDateMinusTime = val
}

// SetOptionalDoubleArrayStringDuration sets the value of OptionalDoubleArrayStringDuration.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringDuration(val [][]time.Duration) {
	s.OptionalDoubleArrayStringDuration = val
}

// SetOptionalDoubleArrayStringEmail sets the value of OptionalDoubleArrayStringEmail.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringEmail(val [][]string) {
	s.OptionalDoubleArrayStringEmail = val
}

// SetOptionalDoubleArrayStringHostname sets the value of OptionalDoubleArrayStringHostname.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringHostname(val [][]string) {
	s.OptionalDoubleArrayStringHostname = val
}

// SetOptionalDoubleArrayStringInt32 sets the value of OptionalDoubleArrayStringInt32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringInt32(val [][]int32) {
	s.OptionalDoubleArrayStringInt32 = val
}

// SetOptionalDoubleArrayStringInt64 sets the value of OptionalDoubleArrayStringInt64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringInt64(val [][]int64) {
	s.OptionalDoubleArrayStringInt64 = val
}

// SetOptionalDoubleArrayStringIP sets the value of OptionalDoubleArrayStringIP.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringIP(val [][]netip.Addr) {
	s.OptionalDoubleArrayStringIP = val
}

// SetOptionalDoubleArrayStringIpv4 sets the value of OptionalDoubleArrayStringIpv4.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringIpv4(val [][]netip.Addr) {
	s.OptionalDoubleArrayStringIpv4 = val
}

// SetOptionalDoubleArrayStringIpv6 sets the value of OptionalDoubleArrayStringIpv6.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringIpv6(val [][]netip.Addr) {
	s.OptionalDoubleArrayStringIpv6 = val
}

// SetOptionalDoubleArrayStringPassword sets the value of OptionalDoubleArrayStringPassword.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringPassword(val [][]string) {
	s.OptionalDoubleArrayStringPassword = val
}

// SetOptionalDoubleArrayStringTime sets the value of OptionalDoubleArrayStringTime.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringTime(val [][]time.Time) {
	s.OptionalDoubleArrayStringTime = val
}

// SetOptionalDoubleArrayStringUnix sets the value of OptionalDoubleArrayStringUnix.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringUnix(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnix = val
}

// SetOptionalDoubleArrayStringUnixMinusMicro sets the value of OptionalDoubleArrayStringUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringUnixMinusMicro(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusMicro = val
}

// SetOptionalDoubleArrayStringUnixMinusMilli sets the value of OptionalDoubleArrayStringUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringUnixMinusMilli(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusMilli = val
}

// SetOptionalDoubleArrayStringUnixMinusNano sets the value of OptionalDoubleArrayStringUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringUnixMinusNano(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusNano = val
}

// SetOptionalDoubleArrayStringUnixMinusSeconds sets the value of OptionalDoubleArrayStringUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringUnixMinusSeconds(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusSeconds = val
}

// SetOptionalDoubleArrayStringURI sets the value of OptionalDoubleArrayStringURI.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringURI(val [][]url.URL) {
	s.OptionalDoubleArrayStringURI = val
}

// SetOptionalDoubleArrayStringUUID sets the value of OptionalDoubleArrayStringUUID.
func (s *TestRequestRequiredFormatTestReq) SetOptionalDoubleArrayStringUUID(val [][]uuid.UUID) {
	s.OptionalDoubleArrayStringUUID = val
}

// SetOptionalInteger sets the value of OptionalInteger.
func (s *TestRequestRequiredFormatTestReq) SetOptionalInteger(val OptInt) {
	s.OptionalInteger = val
}

// SetOptionalIntegerInt32 sets the value of OptionalIntegerInt32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalIntegerInt32(val OptInt32) {
	s.OptionalIntegerInt32 = val
}

// SetOptionalIntegerInt64 sets the value of OptionalIntegerInt64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalIntegerInt64(val OptInt64) {
	s.OptionalIntegerInt64 = val
}

// SetOptionalIntegerUint sets the value of OptionalIntegerUint.
func (s *TestRequestRequiredFormatTestReq) SetOptionalIntegerUint(val OptUint) {
	s.OptionalIntegerUint = val
}

// SetOptionalIntegerUint32 sets the value of OptionalIntegerUint32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalIntegerUint32(val OptUint32) {
	s.OptionalIntegerUint32 = val
}

// SetOptionalIntegerUint64 sets the value of OptionalIntegerUint64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalIntegerUint64(val OptUint64) {
	s.OptionalIntegerUint64 = val
}

// SetOptionalIntegerUnix sets the value of OptionalIntegerUnix.
func (s *TestRequestRequiredFormatTestReq) SetOptionalIntegerUnix(val OptUnixSeconds) {
	s.OptionalIntegerUnix = val
}

// SetOptionalIntegerUnixMinusMicro sets the value of OptionalIntegerUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetOptionalIntegerUnixMinusMicro(val OptUnixMicro) {
	s.OptionalIntegerUnixMinusMicro = val
}

// SetOptionalIntegerUnixMinusMilli sets the value of OptionalIntegerUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetOptionalIntegerUnixMinusMilli(val OptUnixMilli) {
	s.OptionalIntegerUnixMinusMilli = val
}

// SetOptionalIntegerUnixMinusNano sets the value of OptionalIntegerUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetOptionalIntegerUnixMinusNano(val OptUnixNano) {
	s.OptionalIntegerUnixMinusNano = val
}

// SetOptionalIntegerUnixMinusSeconds sets the value of OptionalIntegerUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetOptionalIntegerUnixMinusSeconds(val OptUnixSeconds) {
	s.OptionalIntegerUnixMinusSeconds = val
}

// SetOptionalNull sets the value of OptionalNull.
func (s *TestRequestRequiredFormatTestReq) SetOptionalNull(val OptNull) {
	s.OptionalNull = val
}

// SetOptionalNumber sets the value of OptionalNumber.
func (s *TestRequestRequiredFormatTestReq) SetOptionalNumber(val OptFloat64) {
	s.OptionalNumber = val
}

// SetOptionalNumberDouble sets the value of OptionalNumberDouble.
func (s *TestRequestRequiredFormatTestReq) SetOptionalNumberDouble(val OptFloat64) {
	s.OptionalNumberDouble = val
}

// SetOptionalNumberFloat sets the value of OptionalNumberFloat.
func (s *TestRequestRequiredFormatTestReq) SetOptionalNumberFloat(val OptFloat32) {
	s.OptionalNumberFloat = val
}

// SetOptionalNumberInt32 sets the value of OptionalNumberInt32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalNumberInt32(val OptInt32) {
	s.OptionalNumberInt32 = val
}

// SetOptionalNumberInt64 sets the value of OptionalNumberInt64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalNumberInt64(val OptInt64) {
	s.OptionalNumberInt64 = val
}

// SetOptionalString sets the value of OptionalString.
func (s *TestRequestRequiredFormatTestReq) SetOptionalString(val OptString) {
	s.OptionalString = val
}

// SetOptionalStringBinary sets the value of OptionalStringBinary.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringBinary(val OptString) {
	s.OptionalStringBinary = val
}

// SetOptionalStringByte sets the value of OptionalStringByte.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringByte(val []byte) {
	s.OptionalStringByte = val
}

// SetOptionalStringDate sets the value of OptionalStringDate.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringDate(val OptDate) {
	s.OptionalStringDate = val
}

// SetOptionalStringDateMinusTime sets the value of OptionalStringDateMinusTime.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringDateMinusTime(val OptDateTime) {
	s.OptionalStringDateMinusTime = val
}

// SetOptionalStringDuration sets the value of OptionalStringDuration.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringDuration(val OptDuration) {
	s.OptionalStringDuration = val
}

// SetOptionalStringEmail sets the value of OptionalStringEmail.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringEmail(val OptString) {
	s.OptionalStringEmail = val
}

// SetOptionalStringHostname sets the value of OptionalStringHostname.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringHostname(val OptString) {
	s.OptionalStringHostname = val
}

// SetOptionalStringInt32 sets the value of OptionalStringInt32.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringInt32(val OptStringInt32) {
	s.OptionalStringInt32 = val
}

// SetOptionalStringInt64 sets the value of OptionalStringInt64.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringInt64(val OptStringInt64) {
	s.OptionalStringInt64 = val
}

// SetOptionalStringIP sets the value of OptionalStringIP.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringIP(val OptIP) {
	s.OptionalStringIP = val
}

// SetOptionalStringIpv4 sets the value of OptionalStringIpv4.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringIpv4(val OptIPv4) {
	s.OptionalStringIpv4 = val
}

// SetOptionalStringIpv6 sets the value of OptionalStringIpv6.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringIpv6(val OptIPv6) {
	s.OptionalStringIpv6 = val
}

// SetOptionalStringPassword sets the value of OptionalStringPassword.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringPassword(val OptString) {
	s.OptionalStringPassword = val
}

// SetOptionalStringTime sets the value of OptionalStringTime.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringTime(val OptTime) {
	s.OptionalStringTime = val
}

// SetOptionalStringUnix sets the value of OptionalStringUnix.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringUnix(val OptStringUnixSeconds) {
	s.OptionalStringUnix = val
}

// SetOptionalStringUnixMinusMicro sets the value of OptionalStringUnixMinusMicro.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringUnixMinusMicro(val OptStringUnixMicro) {
	s.OptionalStringUnixMinusMicro = val
}

// SetOptionalStringUnixMinusMilli sets the value of OptionalStringUnixMinusMilli.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringUnixMinusMilli(val OptStringUnixMilli) {
	s.OptionalStringUnixMinusMilli = val
}

// SetOptionalStringUnixMinusNano sets the value of OptionalStringUnixMinusNano.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringUnixMinusNano(val OptStringUnixNano) {
	s.OptionalStringUnixMinusNano = val
}

// SetOptionalStringUnixMinusSeconds sets the value of OptionalStringUnixMinusSeconds.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringUnixMinusSeconds(val OptStringUnixSeconds) {
	s.OptionalStringUnixMinusSeconds = val
}

// SetOptionalStringURI sets the value of OptionalStringURI.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringURI(val OptURI) {
	s.OptionalStringURI = val
}

// SetOptionalStringUUID sets the value of OptionalStringUUID.
func (s *TestRequestRequiredFormatTestReq) SetOptionalStringUUID(val OptUUID) {
	s.OptionalStringUUID = val
}

type TestResponseEmptyStructOK struct{}

type TestResponseFormatTestOK struct {
	RequiredAny                                jx.Raw               `json:"required_any"`
	RequiredArrayAny                           []jx.Raw             `json:"required_array_any"`
	RequiredArrayBoolean                       []bool               `json:"required_array_boolean"`
	RequiredArrayInteger                       []int                `json:"required_array_integer"`
	RequiredArrayIntegerInt32                  []int32              `json:"required_array_integer_int32"`
	RequiredArrayIntegerInt64                  []int64              `json:"required_array_integer_int64"`
	RequiredArrayIntegerUint                   []uint               `json:"required_array_integer_uint"`
	RequiredArrayIntegerUint32                 []uint32             `json:"required_array_integer_uint32"`
	RequiredArrayIntegerUint64                 []uint64             `json:"required_array_integer_uint64"`
	RequiredArrayIntegerUnix                   []time.Time          `json:"required_array_integer_unix"`
	RequiredArrayIntegerUnixMinusMicro         []time.Time          `json:"required_array_integer_unix-micro"`
	RequiredArrayIntegerUnixMinusMilli         []time.Time          `json:"required_array_integer_unix-milli"`
	RequiredArrayIntegerUnixMinusNano          []time.Time          `json:"required_array_integer_unix-nano"`
	RequiredArrayIntegerUnixMinusSeconds       []time.Time          `json:"required_array_integer_unix-seconds"`
	RequiredArrayNull                          []struct{}           `json:"required_array_null"`
	RequiredArrayNumber                        []float64            `json:"required_array_number"`
	RequiredArrayNumberDouble                  []float64            `json:"required_array_number_double"`
	RequiredArrayNumberFloat                   []float32            `json:"required_array_number_float"`
	RequiredArrayNumberInt32                   []int32              `json:"required_array_number_int32"`
	RequiredArrayNumberInt64                   []int64              `json:"required_array_number_int64"`
	RequiredArrayString                        []string             `json:"required_array_string"`
	RequiredArrayStringBinary                  []string             `json:"required_array_string_binary"`
	RequiredArrayStringByte                    [][]byte             `json:"required_array_string_byte"`
	RequiredArrayStringDate                    []time.Time          `json:"required_array_string_date"`
	RequiredArrayStringDateMinusTime           []time.Time          `json:"required_array_string_date-time"`
	RequiredArrayStringDuration                []time.Duration      `json:"required_array_string_duration"`
	RequiredArrayStringEmail                   []string             `json:"required_array_string_email"`
	RequiredArrayStringHostname                []string             `json:"required_array_string_hostname"`
	RequiredArrayStringInt32                   []int32              `json:"required_array_string_int32"`
	RequiredArrayStringInt64                   []int64              `json:"required_array_string_int64"`
	RequiredArrayStringIP                      []netip.Addr         `json:"required_array_string_ip"`
	RequiredArrayStringIpv4                    []netip.Addr         `json:"required_array_string_ipv4"`
	RequiredArrayStringIpv6                    []netip.Addr         `json:"required_array_string_ipv6"`
	RequiredArrayStringPassword                []string             `json:"required_array_string_password"`
	RequiredArrayStringTime                    []time.Time          `json:"required_array_string_time"`
	RequiredArrayStringUnix                    []time.Time          `json:"required_array_string_unix"`
	RequiredArrayStringUnixMinusMicro          []time.Time          `json:"required_array_string_unix-micro"`
	RequiredArrayStringUnixMinusMilli          []time.Time          `json:"required_array_string_unix-milli"`
	RequiredArrayStringUnixMinusNano           []time.Time          `json:"required_array_string_unix-nano"`
	RequiredArrayStringUnixMinusSeconds        []time.Time          `json:"required_array_string_unix-seconds"`
	RequiredArrayStringURI                     []url.URL            `json:"required_array_string_uri"`
	RequiredArrayStringUUID                    []uuid.UUID          `json:"required_array_string_uuid"`
	RequiredBoolean                            bool                 `json:"required_boolean"`
	RequiredDoubleArrayAny                     [][]jx.Raw           `json:"required_double_array_any"`
	RequiredDoubleArrayBoolean                 [][]bool             `json:"required_double_array_boolean"`
	RequiredDoubleArrayInteger                 [][]int              `json:"required_double_array_integer"`
	RequiredDoubleArrayIntegerInt32            [][]int32            `json:"required_double_array_integer_int32"`
	RequiredDoubleArrayIntegerInt64            [][]int64            `json:"required_double_array_integer_int64"`
	RequiredDoubleArrayIntegerUint             [][]uint             `json:"required_double_array_integer_uint"`
	RequiredDoubleArrayIntegerUint32           [][]uint32           `json:"required_double_array_integer_uint32"`
	RequiredDoubleArrayIntegerUint64           [][]uint64           `json:"required_double_array_integer_uint64"`
	RequiredDoubleArrayIntegerUnix             [][]time.Time        `json:"required_double_array_integer_unix"`
	RequiredDoubleArrayIntegerUnixMinusMicro   [][]time.Time        `json:"required_double_array_integer_unix-micro"`
	RequiredDoubleArrayIntegerUnixMinusMilli   [][]time.Time        `json:"required_double_array_integer_unix-milli"`
	RequiredDoubleArrayIntegerUnixMinusNano    [][]time.Time        `json:"required_double_array_integer_unix-nano"`
	RequiredDoubleArrayIntegerUnixMinusSeconds [][]time.Time        `json:"required_double_array_integer_unix-seconds"`
	RequiredDoubleArrayNull                    [][]struct{}         `json:"required_double_array_null"`
	RequiredDoubleArrayNumber                  [][]float64          `json:"required_double_array_number"`
	RequiredDoubleArrayNumberDouble            [][]float64          `json:"required_double_array_number_double"`
	RequiredDoubleArrayNumberFloat             [][]float32          `json:"required_double_array_number_float"`
	RequiredDoubleArrayNumberInt32             [][]int32            `json:"required_double_array_number_int32"`
	RequiredDoubleArrayNumberInt64             [][]int64            `json:"required_double_array_number_int64"`
	RequiredDoubleArrayString                  [][]string           `json:"required_double_array_string"`
	RequiredDoubleArrayStringBinary            [][]string           `json:"required_double_array_string_binary"`
	RequiredDoubleArrayStringByte              [][][]byte           `json:"required_double_array_string_byte"`
	RequiredDoubleArrayStringDate              [][]time.Time        `json:"required_double_array_string_date"`
	RequiredDoubleArrayStringDateMinusTime     [][]time.Time        `json:"required_double_array_string_date-time"`
	RequiredDoubleArrayStringDuration          [][]time.Duration    `json:"required_double_array_string_duration"`
	RequiredDoubleArrayStringEmail             [][]string           `json:"required_double_array_string_email"`
	RequiredDoubleArrayStringHostname          [][]string           `json:"required_double_array_string_hostname"`
	RequiredDoubleArrayStringInt32             [][]int32            `json:"required_double_array_string_int32"`
	RequiredDoubleArrayStringInt64             [][]int64            `json:"required_double_array_string_int64"`
	RequiredDoubleArrayStringIP                [][]netip.Addr       `json:"required_double_array_string_ip"`
	RequiredDoubleArrayStringIpv4              [][]netip.Addr       `json:"required_double_array_string_ipv4"`
	RequiredDoubleArrayStringIpv6              [][]netip.Addr       `json:"required_double_array_string_ipv6"`
	RequiredDoubleArrayStringPassword          [][]string           `json:"required_double_array_string_password"`
	RequiredDoubleArrayStringTime              [][]time.Time        `json:"required_double_array_string_time"`
	RequiredDoubleArrayStringUnix              [][]time.Time        `json:"required_double_array_string_unix"`
	RequiredDoubleArrayStringUnixMinusMicro    [][]time.Time        `json:"required_double_array_string_unix-micro"`
	RequiredDoubleArrayStringUnixMinusMilli    [][]time.Time        `json:"required_double_array_string_unix-milli"`
	RequiredDoubleArrayStringUnixMinusNano     [][]time.Time        `json:"required_double_array_string_unix-nano"`
	RequiredDoubleArrayStringUnixMinusSeconds  [][]time.Time        `json:"required_double_array_string_unix-seconds"`
	RequiredDoubleArrayStringURI               [][]url.URL          `json:"required_double_array_string_uri"`
	RequiredDoubleArrayStringUUID              [][]uuid.UUID        `json:"required_double_array_string_uuid"`
	RequiredInteger                            int                  `json:"required_integer"`
	RequiredIntegerInt32                       int32                `json:"required_integer_int32"`
	RequiredIntegerInt64                       int64                `json:"required_integer_int64"`
	RequiredIntegerUint                        uint                 `json:"required_integer_uint"`
	RequiredIntegerUint32                      uint32               `json:"required_integer_uint32"`
	RequiredIntegerUint64                      uint64               `json:"required_integer_uint64"`
	RequiredIntegerUnix                        time.Time            `json:"required_integer_unix"`
	RequiredIntegerUnixMinusMicro              time.Time            `json:"required_integer_unix-micro"`
	RequiredIntegerUnixMinusMilli              time.Time            `json:"required_integer_unix-milli"`
	RequiredIntegerUnixMinusNano               time.Time            `json:"required_integer_unix-nano"`
	RequiredIntegerUnixMinusSeconds            time.Time            `json:"required_integer_unix-seconds"`
	RequiredNull                               struct{}             `json:"required_null"`
	RequiredNumber                             float64              `json:"required_number"`
	RequiredNumberDouble                       float64              `json:"required_number_double"`
	RequiredNumberFloat                        float32              `json:"required_number_float"`
	RequiredNumberInt32                        int32                `json:"required_number_int32"`
	RequiredNumberInt64                        int64                `json:"required_number_int64"`
	RequiredString                             string               `json:"required_string"`
	RequiredStringBinary                       string               `json:"required_string_binary"`
	RequiredStringByte                         []byte               `json:"required_string_byte"`
	RequiredStringDate                         time.Time            `json:"required_string_date"`
	RequiredStringDateMinusTime                time.Time            `json:"required_string_date-time"`
	RequiredStringDuration                     time.Duration        `json:"required_string_duration"`
	RequiredStringEmail                        string               `json:"required_string_email"`
	RequiredStringHostname                     string               `json:"required_string_hostname"`
	RequiredStringInt32                        int32                `json:"required_string_int32"`
	RequiredStringInt64                        int64                `json:"required_string_int64"`
	RequiredStringIP                           netip.Addr           `json:"required_string_ip"`
	RequiredStringIpv4                         netip.Addr           `json:"required_string_ipv4"`
	RequiredStringIpv6                         netip.Addr           `json:"required_string_ipv6"`
	RequiredStringPassword                     string               `json:"required_string_password"`
	RequiredStringTime                         time.Time            `json:"required_string_time"`
	RequiredStringUnix                         time.Time            `json:"required_string_unix"`
	RequiredStringUnixMinusMicro               time.Time            `json:"required_string_unix-micro"`
	RequiredStringUnixMinusMilli               time.Time            `json:"required_string_unix-milli"`
	RequiredStringUnixMinusNano                time.Time            `json:"required_string_unix-nano"`
	RequiredStringUnixMinusSeconds             time.Time            `json:"required_string_unix-seconds"`
	RequiredStringURI                          url.URL              `json:"required_string_uri"`
	RequiredStringUUID                         uuid.UUID            `json:"required_string_uuid"`
	OptionalAny                                jx.Raw               `json:"optional_any,omitempty"`
	OptionalArrayAny                           []jx.Raw             `json:"optional_array_any,omitempty"`
	OptionalArrayBoolean                       []bool               `json:"optional_array_boolean,omitempty"`
	OptionalArrayInteger                       []int                `json:"optional_array_integer,omitempty"`
	OptionalArrayIntegerInt32                  []int32              `json:"optional_array_integer_int32,omitempty"`
	OptionalArrayIntegerInt64                  []int64              `json:"optional_array_integer_int64,omitempty"`
	OptionalArrayIntegerUint                   []uint               `json:"optional_array_integer_uint,omitempty"`
	OptionalArrayIntegerUint32                 []uint32             `json:"optional_array_integer_uint32,omitempty"`
	OptionalArrayIntegerUint64                 []uint64             `json:"optional_array_integer_uint64,omitempty"`
	OptionalArrayIntegerUnix                   []time.Time          `json:"optional_array_integer_unix,omitempty"`
	OptionalArrayIntegerUnixMinusMicro         []time.Time          `json:"optional_array_integer_unix-micro,omitempty"`
	OptionalArrayIntegerUnixMinusMilli         []time.Time          `json:"optional_array_integer_unix-milli,omitempty"`
	OptionalArrayIntegerUnixMinusNano          []time.Time          `json:"optional_array_integer_unix-nano,omitempty"`
	OptionalArrayIntegerUnixMinusSeconds       []time.Time          `json:"optional_array_integer_unix-seconds,omitempty"`
	OptionalArrayNull                          []struct{}           `json:"optional_array_null,omitempty"`
	OptionalArrayNumber                        []float64            `json:"optional_array_number,omitempty"`
	OptionalArrayNumberDouble                  []float64            `json:"optional_array_number_double,omitempty"`
	OptionalArrayNumberFloat                   []float32            `json:"optional_array_number_float,omitempty"`
	OptionalArrayNumberInt32                   []int32              `json:"optional_array_number_int32,omitempty"`
	OptionalArrayNumberInt64                   []int64              `json:"optional_array_number_int64,omitempty"`
	OptionalArrayString                        []string             `json:"optional_array_string,omitempty"`
	OptionalArrayStringBinary                  []string             `json:"optional_array_string_binary,omitempty"`
	OptionalArrayStringByte                    [][]byte             `json:"optional_array_string_byte,omitempty"`
	OptionalArrayStringDate                    []time.Time          `json:"optional_array_string_date,omitempty"`
	OptionalArrayStringDateMinusTime           []time.Time          `json:"optional_array_string_date-time,omitempty"`
	OptionalArrayStringDuration                []time.Duration      `json:"optional_array_string_duration,omitempty"`
	OptionalArrayStringEmail                   []string             `json:"optional_array_string_email,omitempty"`
	OptionalArrayStringHostname                []string             `json:"optional_array_string_hostname,omitempty"`
	OptionalArrayStringInt32                   []int32              `json:"optional_array_string_int32,omitempty"`
	OptionalArrayStringInt64                   []int64              `json:"optional_array_string_int64,omitempty"`
	OptionalArrayStringIP                      []netip.Addr         `json:"optional_array_string_ip,omitempty"`
	OptionalArrayStringIpv4                    []netip.Addr         `json:"optional_array_string_ipv4,omitempty"`
	OptionalArrayStringIpv6                    []netip.Addr         `json:"optional_array_string_ipv6,omitempty"`
	OptionalArrayStringPassword                []string             `json:"optional_array_string_password,omitempty"`
	OptionalArrayStringTime                    []time.Time          `json:"optional_array_string_time,omitempty"`
	OptionalArrayStringUnix                    []time.Time          `json:"optional_array_string_unix,omitempty"`
	OptionalArrayStringUnixMinusMicro          []time.Time          `json:"optional_array_string_unix-micro,omitempty"`
	OptionalArrayStringUnixMinusMilli          []time.Time          `json:"optional_array_string_unix-milli,omitempty"`
	OptionalArrayStringUnixMinusNano           []time.Time          `json:"optional_array_string_unix-nano,omitempty"`
	OptionalArrayStringUnixMinusSeconds        []time.Time          `json:"optional_array_string_unix-seconds,omitempty"`
	OptionalArrayStringURI                     []url.URL            `json:"optional_array_string_uri,omitempty"`
	OptionalArrayStringUUID                    []uuid.UUID          `json:"optional_array_string_uuid,omitempty"`
	OptionalBoolean                            OptBool              `json:"optional_boolean,omitempty"`
	OptionalDoubleArrayAny                     [][]jx.Raw           `json:"optional_double_array_any,omitempty"`
	OptionalDoubleArrayBoolean                 [][]bool             `json:"optional_double_array_boolean,omitempty"`
	OptionalDoubleArrayInteger                 [][]int              `json:"optional_double_array_integer,omitempty"`
	OptionalDoubleArrayIntegerInt32            [][]int32            `json:"optional_double_array_integer_int32,omitempty"`
	OptionalDoubleArrayIntegerInt64            [][]int64            `json:"optional_double_array_integer_int64,omitempty"`
	OptionalDoubleArrayIntegerUint             [][]uint             `json:"optional_double_array_integer_uint,omitempty"`
	OptionalDoubleArrayIntegerUint32           [][]uint32           `json:"optional_double_array_integer_uint32,omitempty"`
	OptionalDoubleArrayIntegerUint64           [][]uint64           `json:"optional_double_array_integer_uint64,omitempty"`
	OptionalDoubleArrayIntegerUnix             [][]time.Time        `json:"optional_double_array_integer_unix,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusMicro   [][]time.Time        `json:"optional_double_array_integer_unix-micro,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusMilli   [][]time.Time        `json:"optional_double_array_integer_unix-milli,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusNano    [][]time.Time        `json:"optional_double_array_integer_unix-nano,omitempty"`
	OptionalDoubleArrayIntegerUnixMinusSeconds [][]time.Time        `json:"optional_double_array_integer_unix-seconds,omitempty"`
	OptionalDoubleArrayNull                    [][]struct{}         `json:"optional_double_array_null,omitempty"`
	OptionalDoubleArrayNumber                  [][]float64          `json:"optional_double_array_number,omitempty"`
	OptionalDoubleArrayNumberDouble            [][]float64          `json:"optional_double_array_number_double,omitempty"`
	OptionalDoubleArrayNumberFloat             [][]float32          `json:"optional_double_array_number_float,omitempty"`
	OptionalDoubleArrayNumberInt32             [][]int32            `json:"optional_double_array_number_int32,omitempty"`
	OptionalDoubleArrayNumberInt64             [][]int64            `json:"optional_double_array_number_int64,omitempty"`
	OptionalDoubleArrayString                  [][]string           `json:"optional_double_array_string,omitempty"`
	OptionalDoubleArrayStringBinary            [][]string           `json:"optional_double_array_string_binary,omitempty"`
	OptionalDoubleArrayStringByte              [][][]byte           `json:"optional_double_array_string_byte,omitempty"`
	OptionalDoubleArrayStringDate              [][]time.Time        `json:"optional_double_array_string_date,omitempty"`
	OptionalDoubleArrayStringDateMinusTime     [][]time.Time        `json:"optional_double_array_string_date-time,omitempty"`
	OptionalDoubleArrayStringDuration          [][]time.Duration    `json:"optional_double_array_string_duration,omitempty"`
	OptionalDoubleArrayStringEmail             [][]string           `json:"optional_double_array_string_email,omitempty"`
	OptionalDoubleArrayStringHostname          [][]string           `json:"optional_double_array_string_hostname,omitempty"`
	OptionalDoubleArrayStringInt32             [][]int32            `json:"optional_double_array_string_int32,omitempty"`
	OptionalDoubleArrayStringInt64             [][]int64            `json:"optional_double_array_string_int64,omitempty"`
	OptionalDoubleArrayStringIP                [][]netip.Addr       `json:"optional_double_array_string_ip,omitempty"`
	OptionalDoubleArrayStringIpv4              [][]netip.Addr       `json:"optional_double_array_string_ipv4,omitempty"`
	OptionalDoubleArrayStringIpv6              [][]netip.Addr       `json:"optional_double_array_string_ipv6,omitempty"`
	OptionalDoubleArrayStringPassword          [][]string           `json:"optional_double_array_string_password,omitempty"`
	OptionalDoubleArrayStringTime              [][]time.Time        `json:"optional_double_array_string_time,omitempty"`
	OptionalDoubleArrayStringUnix              [][]time.Time        `json:"optional_double_array_string_unix,omitempty"`
	OptionalDoubleArrayStringUnixMinusMicro    [][]time.Time        `json:"optional_double_array_string_unix-micro,omitempty"`
	OptionalDoubleArrayStringUnixMinusMilli    [][]time.Time        `json:"optional_double_array_string_unix-milli,omitempty"`
	OptionalDoubleArrayStringUnixMinusNano     [][]time.Time        `json:"optional_double_array_string_unix-nano,omitempty"`
	OptionalDoubleArrayStringUnixMinusSeconds  [][]time.Time        `json:"optional_double_array_string_unix-seconds,omitempty"`
	OptionalDoubleArrayStringURI               [][]url.URL          `json:"optional_double_array_string_uri,omitempty"`
	OptionalDoubleArrayStringUUID              [][]uuid.UUID        `json:"optional_double_array_string_uuid,omitempty"`
	OptionalInteger                            OptInt               `json:"optional_integer,omitempty"`
	OptionalIntegerInt32                       OptInt32             `json:"optional_integer_int32,omitempty"`
	OptionalIntegerInt64                       OptInt64             `json:"optional_integer_int64,omitempty"`
	OptionalIntegerUint                        OptUint              `json:"optional_integer_uint,omitempty"`
	OptionalIntegerUint32                      OptUint32            `json:"optional_integer_uint32,omitempty"`
	OptionalIntegerUint64                      OptUint64            `json:"optional_integer_uint64,omitempty"`
	OptionalIntegerUnix                        OptUnixSeconds       `json:"optional_integer_unix,omitempty"`
	OptionalIntegerUnixMinusMicro              OptUnixMicro         `json:"optional_integer_unix-micro,omitempty"`
	OptionalIntegerUnixMinusMilli              OptUnixMilli         `json:"optional_integer_unix-milli,omitempty"`
	OptionalIntegerUnixMinusNano               OptUnixNano          `json:"optional_integer_unix-nano,omitempty"`
	OptionalIntegerUnixMinusSeconds            OptUnixSeconds       `json:"optional_integer_unix-seconds,omitempty"`
	OptionalNull                               OptNull              `json:"optional_null,omitempty"`
	OptionalNumber                             OptFloat64           `json:"optional_number,omitempty"`
	OptionalNumberDouble                       OptFloat64           `json:"optional_number_double,omitempty"`
	OptionalNumberFloat                        OptFloat32           `json:"optional_number_float,omitempty"`
	OptionalNumberInt32                        OptInt32             `json:"optional_number_int32,omitempty"`
	OptionalNumberInt64                        OptInt64             `json:"optional_number_int64,omitempty"`
	OptionalString                             OptString            `json:"optional_string,omitempty"`
	OptionalStringBinary                       OptString            `json:"optional_string_binary,omitempty"`
	OptionalStringByte                         []byte               `json:"optional_string_byte,omitempty"`
	OptionalStringDate                         OptDate              `json:"optional_string_date,omitempty"`
	OptionalStringDateMinusTime                OptDateTime          `json:"optional_string_date-time,omitempty"`
	OptionalStringDuration                     OptDuration          `json:"optional_string_duration,omitempty"`
	OptionalStringEmail                        OptString            `json:"optional_string_email,omitempty"`
	OptionalStringHostname                     OptString            `json:"optional_string_hostname,omitempty"`
	OptionalStringInt32                        OptStringInt32       `json:"optional_string_int32,omitempty"`
	OptionalStringInt64                        OptStringInt64       `json:"optional_string_int64,omitempty"`
	OptionalStringIP                           OptIP                `json:"optional_string_ip,omitempty"`
	OptionalStringIpv4                         OptIPv4              `json:"optional_string_ipv4,omitempty"`
	OptionalStringIpv6                         OptIPv6              `json:"optional_string_ipv6,omitempty"`
	OptionalStringPassword                     OptString            `json:"optional_string_password,omitempty"`
	OptionalStringTime                         OptTime              `json:"optional_string_time,omitempty"`
	OptionalStringUnix                         OptStringUnixSeconds `json:"optional_string_unix,omitempty"`
	OptionalStringUnixMinusMicro               OptStringUnixMicro   `json:"optional_string_unix-micro,omitempty"`
	OptionalStringUnixMinusMilli               OptStringUnixMilli   `json:"optional_string_unix-milli,omitempty"`
	OptionalStringUnixMinusNano                OptStringUnixNano    `json:"optional_string_unix-nano,omitempty"`
	OptionalStringUnixMinusSeconds             OptStringUnixSeconds `json:"optional_string_unix-seconds,omitempty"`
	OptionalStringURI                          OptURI               `json:"optional_string_uri,omitempty"`
	OptionalStringUUID                         OptUUID              `json:"optional_string_uuid,omitempty"`
}

// GetRequiredAny returns the value of RequiredAny.
func (s TestResponseFormatTestOK) GetRequiredAny() jx.Raw {
	return s.RequiredAny
}

// GetRequiredArrayAny returns the value of RequiredArrayAny.
func (s TestResponseFormatTestOK) GetRequiredArrayAny() []jx.Raw {
	return s.RequiredArrayAny
}

// GetRequiredArrayBoolean returns the value of RequiredArrayBoolean.
func (s TestResponseFormatTestOK) GetRequiredArrayBoolean() []bool {
	return s.RequiredArrayBoolean
}

// GetRequiredArrayInteger returns the value of RequiredArrayInteger.
func (s TestResponseFormatTestOK) GetRequiredArrayInteger() []int {
	return s.RequiredArrayInteger
}

// GetRequiredArrayIntegerInt32 returns the value of RequiredArrayIntegerInt32.
func (s TestResponseFormatTestOK) GetRequiredArrayIntegerInt32() []int32 {
	return s.RequiredArrayIntegerInt32
}

// GetRequiredArrayIntegerInt64 returns the value of RequiredArrayIntegerInt64.
func (s TestResponseFormatTestOK) GetRequiredArrayIntegerInt64() []int64 {
	return s.RequiredArrayIntegerInt64
}

// GetRequiredArrayIntegerUint returns the value of RequiredArrayIntegerUint.
func (s TestResponseFormatTestOK) GetRequiredArrayIntegerUint() []uint {
	return s.RequiredArrayIntegerUint
}

// GetRequiredArrayIntegerUint32 returns the value of RequiredArrayIntegerUint32.
func (s TestResponseFormatTestOK) GetRequiredArrayIntegerUint32() []uint32 {
	return s.RequiredArrayIntegerUint32
}

// GetRequiredArrayIntegerUint64 returns the value of RequiredArrayIntegerUint64.
func (s TestResponseFormatTestOK) GetRequiredArrayIntegerUint64() []uint64 {
	return s.RequiredArrayIntegerUint64
}

// GetRequiredArrayIntegerUnix returns the value of RequiredArrayIntegerUnix.
func (s TestResponseFormatTestOK) GetRequiredArrayIntegerUnix() []time.Time {
	return s.RequiredArrayIntegerUnix
}

// GetRequiredArrayIntegerUnixMinusMicro returns the value of RequiredArrayIntegerUnixMinusMicro.
func (s TestResponseFormatTestOK) GetRequiredArrayIntegerUnixMinusMicro() []time.Time {
	return s.RequiredArrayIntegerUnixMinusMicro
}

// GetRequiredArrayIntegerUnixMinusMilli returns the value of RequiredArrayIntegerUnixMinusMilli.
func (s TestResponseFormatTestOK) GetRequiredArrayIntegerUnixMinusMilli() []time.Time {
	return s.RequiredArrayIntegerUnixMinusMilli
}

// GetRequiredArrayIntegerUnixMinusNano returns the value of RequiredArrayIntegerUnixMinusNano.
func (s TestResponseFormatTestOK) GetRequiredArrayIntegerUnixMinusNano() []time.Time {
	return s.RequiredArrayIntegerUnixMinusNano
}

// GetRequiredArrayIntegerUnixMinusSeconds returns the value of RequiredArrayIntegerUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetRequiredArrayIntegerUnixMinusSeconds() []time.Time {
	return s.RequiredArrayIntegerUnixMinusSeconds
}

// GetRequiredArrayNull returns the value of RequiredArrayNull.
func (s TestResponseFormatTestOK) GetRequiredArrayNull() []struct{} {
	return s.RequiredArrayNull
}

// GetRequiredArrayNumber returns the value of RequiredArrayNumber.
func (s TestResponseFormatTestOK) GetRequiredArrayNumber() []float64 {
	return s.RequiredArrayNumber
}

// GetRequiredArrayNumberDouble returns the value of RequiredArrayNumberDouble.
func (s TestResponseFormatTestOK) GetRequiredArrayNumberDouble() []float64 {
	return s.RequiredArrayNumberDouble
}

// GetRequiredArrayNumberFloat returns the value of RequiredArrayNumberFloat.
func (s TestResponseFormatTestOK) GetRequiredArrayNumberFloat() []float32 {
	return s.RequiredArrayNumberFloat
}

// GetRequiredArrayNumberInt32 returns the value of RequiredArrayNumberInt32.
func (s TestResponseFormatTestOK) GetRequiredArrayNumberInt32() []int32 {
	return s.RequiredArrayNumberInt32
}

// GetRequiredArrayNumberInt64 returns the value of RequiredArrayNumberInt64.
func (s TestResponseFormatTestOK) GetRequiredArrayNumberInt64() []int64 {
	return s.RequiredArrayNumberInt64
}

// GetRequiredArrayString returns the value of RequiredArrayString.
func (s TestResponseFormatTestOK) GetRequiredArrayString() []string {
	return s.RequiredArrayString
}

// GetRequiredArrayStringBinary returns the value of RequiredArrayStringBinary.
func (s TestResponseFormatTestOK) GetRequiredArrayStringBinary() []string {
	return s.RequiredArrayStringBinary
}

// GetRequiredArrayStringByte returns the value of RequiredArrayStringByte.
func (s TestResponseFormatTestOK) GetRequiredArrayStringByte() [][]byte {
	return s.RequiredArrayStringByte
}

// GetRequiredArrayStringDate returns the value of RequiredArrayStringDate.
func (s TestResponseFormatTestOK) GetRequiredArrayStringDate() []time.Time {
	return s.RequiredArrayStringDate
}

// GetRequiredArrayStringDateMinusTime returns the value of RequiredArrayStringDateMinusTime.
func (s TestResponseFormatTestOK) GetRequiredArrayStringDateMinusTime() []time.Time {
	return s.RequiredArrayStringDateMinusTime
}

// GetRequiredArrayStringDuration returns the value of RequiredArrayStringDuration.
func (s TestResponseFormatTestOK) GetRequiredArrayStringDuration() []time.Duration {
	return s.RequiredArrayStringDuration
}

// GetRequiredArrayStringEmail returns the value of RequiredArrayStringEmail.
func (s TestResponseFormatTestOK) GetRequiredArrayStringEmail() []string {
	return s.RequiredArrayStringEmail
}

// GetRequiredArrayStringHostname returns the value of RequiredArrayStringHostname.
func (s TestResponseFormatTestOK) GetRequiredArrayStringHostname() []string {
	return s.RequiredArrayStringHostname
}

// GetRequiredArrayStringInt32 returns the value of RequiredArrayStringInt32.
func (s TestResponseFormatTestOK) GetRequiredArrayStringInt32() []int32 {
	return s.RequiredArrayStringInt32
}

// GetRequiredArrayStringInt64 returns the value of RequiredArrayStringInt64.
func (s TestResponseFormatTestOK) GetRequiredArrayStringInt64() []int64 {
	return s.RequiredArrayStringInt64
}

// GetRequiredArrayStringIP returns the value of RequiredArrayStringIP.
func (s TestResponseFormatTestOK) GetRequiredArrayStringIP() []netip.Addr {
	return s.RequiredArrayStringIP
}

// GetRequiredArrayStringIpv4 returns the value of RequiredArrayStringIpv4.
func (s TestResponseFormatTestOK) GetRequiredArrayStringIpv4() []netip.Addr {
	return s.RequiredArrayStringIpv4
}

// GetRequiredArrayStringIpv6 returns the value of RequiredArrayStringIpv6.
func (s TestResponseFormatTestOK) GetRequiredArrayStringIpv6() []netip.Addr {
	return s.RequiredArrayStringIpv6
}

// GetRequiredArrayStringPassword returns the value of RequiredArrayStringPassword.
func (s TestResponseFormatTestOK) GetRequiredArrayStringPassword() []string {
	return s.RequiredArrayStringPassword
}

// GetRequiredArrayStringTime returns the value of RequiredArrayStringTime.
func (s TestResponseFormatTestOK) GetRequiredArrayStringTime() []time.Time {
	return s.RequiredArrayStringTime
}

// GetRequiredArrayStringUnix returns the value of RequiredArrayStringUnix.
func (s TestResponseFormatTestOK) GetRequiredArrayStringUnix() []time.Time {
	return s.RequiredArrayStringUnix
}

// GetRequiredArrayStringUnixMinusMicro returns the value of RequiredArrayStringUnixMinusMicro.
func (s TestResponseFormatTestOK) GetRequiredArrayStringUnixMinusMicro() []time.Time {
	return s.RequiredArrayStringUnixMinusMicro
}

// GetRequiredArrayStringUnixMinusMilli returns the value of RequiredArrayStringUnixMinusMilli.
func (s TestResponseFormatTestOK) GetRequiredArrayStringUnixMinusMilli() []time.Time {
	return s.RequiredArrayStringUnixMinusMilli
}

// GetRequiredArrayStringUnixMinusNano returns the value of RequiredArrayStringUnixMinusNano.
func (s TestResponseFormatTestOK) GetRequiredArrayStringUnixMinusNano() []time.Time {
	return s.RequiredArrayStringUnixMinusNano
}

// GetRequiredArrayStringUnixMinusSeconds returns the value of RequiredArrayStringUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetRequiredArrayStringUnixMinusSeconds() []time.Time {
	return s.RequiredArrayStringUnixMinusSeconds
}

// GetRequiredArrayStringURI returns the value of RequiredArrayStringURI.
func (s TestResponseFormatTestOK) GetRequiredArrayStringURI() []url.URL {
	return s.RequiredArrayStringURI
}

// GetRequiredArrayStringUUID returns the value of RequiredArrayStringUUID.
func (s TestResponseFormatTestOK) GetRequiredArrayStringUUID() []uuid.UUID {
	return s.RequiredArrayStringUUID
}

// GetRequiredBoolean returns the value of RequiredBoolean.
func (s TestResponseFormatTestOK) GetRequiredBoolean() bool {
	return s.RequiredBoolean
}

// GetRequiredDoubleArrayAny returns the value of RequiredDoubleArrayAny.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayAny() [][]jx.Raw {
	return s.RequiredDoubleArrayAny
}

// GetRequiredDoubleArrayBoolean returns the value of RequiredDoubleArrayBoolean.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayBoolean() [][]bool {
	return s.RequiredDoubleArrayBoolean
}

// GetRequiredDoubleArrayInteger returns the value of RequiredDoubleArrayInteger.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayInteger() [][]int {
	return s.RequiredDoubleArrayInteger
}

// GetRequiredDoubleArrayIntegerInt32 returns the value of RequiredDoubleArrayIntegerInt32.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayIntegerInt32() [][]int32 {
	return s.RequiredDoubleArrayIntegerInt32
}

// GetRequiredDoubleArrayIntegerInt64 returns the value of RequiredDoubleArrayIntegerInt64.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayIntegerInt64() [][]int64 {
	return s.RequiredDoubleArrayIntegerInt64
}

// GetRequiredDoubleArrayIntegerUint returns the value of RequiredDoubleArrayIntegerUint.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayIntegerUint() [][]uint {
	return s.RequiredDoubleArrayIntegerUint
}

// GetRequiredDoubleArrayIntegerUint32 returns the value of RequiredDoubleArrayIntegerUint32.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayIntegerUint32() [][]uint32 {
	return s.RequiredDoubleArrayIntegerUint32
}

// GetRequiredDoubleArrayIntegerUint64 returns the value of RequiredDoubleArrayIntegerUint64.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayIntegerUint64() [][]uint64 {
	return s.RequiredDoubleArrayIntegerUint64
}

// GetRequiredDoubleArrayIntegerUnix returns the value of RequiredDoubleArrayIntegerUnix.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayIntegerUnix() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnix
}

// GetRequiredDoubleArrayIntegerUnixMinusMicro returns the value of RequiredDoubleArrayIntegerUnixMinusMicro.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayIntegerUnixMinusMicro() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusMicro
}

// GetRequiredDoubleArrayIntegerUnixMinusMilli returns the value of RequiredDoubleArrayIntegerUnixMinusMilli.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayIntegerUnixMinusMilli() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusMilli
}

// GetRequiredDoubleArrayIntegerUnixMinusNano returns the value of RequiredDoubleArrayIntegerUnixMinusNano.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayIntegerUnixMinusNano() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusNano
}

// GetRequiredDoubleArrayIntegerUnixMinusSeconds returns the value of RequiredDoubleArrayIntegerUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayIntegerUnixMinusSeconds() [][]time.Time {
	return s.RequiredDoubleArrayIntegerUnixMinusSeconds
}

// GetRequiredDoubleArrayNull returns the value of RequiredDoubleArrayNull.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayNull() [][]struct{} {
	return s.RequiredDoubleArrayNull
}

// GetRequiredDoubleArrayNumber returns the value of RequiredDoubleArrayNumber.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayNumber() [][]float64 {
	return s.RequiredDoubleArrayNumber
}

// GetRequiredDoubleArrayNumberDouble returns the value of RequiredDoubleArrayNumberDouble.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayNumberDouble() [][]float64 {
	return s.RequiredDoubleArrayNumberDouble
}

// GetRequiredDoubleArrayNumberFloat returns the value of RequiredDoubleArrayNumberFloat.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayNumberFloat() [][]float32 {
	return s.RequiredDoubleArrayNumberFloat
}

// GetRequiredDoubleArrayNumberInt32 returns the value of RequiredDoubleArrayNumberInt32.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayNumberInt32() [][]int32 {
	return s.RequiredDoubleArrayNumberInt32
}

// GetRequiredDoubleArrayNumberInt64 returns the value of RequiredDoubleArrayNumberInt64.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayNumberInt64() [][]int64 {
	return s.RequiredDoubleArrayNumberInt64
}

// GetRequiredDoubleArrayString returns the value of RequiredDoubleArrayString.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayString() [][]string {
	return s.RequiredDoubleArrayString
}

// GetRequiredDoubleArrayStringBinary returns the value of RequiredDoubleArrayStringBinary.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringBinary() [][]string {
	return s.RequiredDoubleArrayStringBinary
}

// GetRequiredDoubleArrayStringByte returns the value of RequiredDoubleArrayStringByte.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringByte() [][][]byte {
	return s.RequiredDoubleArrayStringByte
}

// GetRequiredDoubleArrayStringDate returns the value of RequiredDoubleArrayStringDate.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringDate() [][]time.Time {
	return s.RequiredDoubleArrayStringDate
}

// GetRequiredDoubleArrayStringDateMinusTime returns the value of RequiredDoubleArrayStringDateMinusTime.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringDateMinusTime() [][]time.Time {
	return s.RequiredDoubleArrayStringDateMinusTime
}

// GetRequiredDoubleArrayStringDuration returns the value of RequiredDoubleArrayStringDuration.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringDuration() [][]time.Duration {
	return s.RequiredDoubleArrayStringDuration
}

// GetRequiredDoubleArrayStringEmail returns the value of RequiredDoubleArrayStringEmail.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringEmail() [][]string {
	return s.RequiredDoubleArrayStringEmail
}

// GetRequiredDoubleArrayStringHostname returns the value of RequiredDoubleArrayStringHostname.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringHostname() [][]string {
	return s.RequiredDoubleArrayStringHostname
}

// GetRequiredDoubleArrayStringInt32 returns the value of RequiredDoubleArrayStringInt32.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringInt32() [][]int32 {
	return s.RequiredDoubleArrayStringInt32
}

// GetRequiredDoubleArrayStringInt64 returns the value of RequiredDoubleArrayStringInt64.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringInt64() [][]int64 {
	return s.RequiredDoubleArrayStringInt64
}

// GetRequiredDoubleArrayStringIP returns the value of RequiredDoubleArrayStringIP.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringIP() [][]netip.Addr {
	return s.RequiredDoubleArrayStringIP
}

// GetRequiredDoubleArrayStringIpv4 returns the value of RequiredDoubleArrayStringIpv4.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringIpv4() [][]netip.Addr {
	return s.RequiredDoubleArrayStringIpv4
}

// GetRequiredDoubleArrayStringIpv6 returns the value of RequiredDoubleArrayStringIpv6.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringIpv6() [][]netip.Addr {
	return s.RequiredDoubleArrayStringIpv6
}

// GetRequiredDoubleArrayStringPassword returns the value of RequiredDoubleArrayStringPassword.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringPassword() [][]string {
	return s.RequiredDoubleArrayStringPassword
}

// GetRequiredDoubleArrayStringTime returns the value of RequiredDoubleArrayStringTime.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringTime() [][]time.Time {
	return s.RequiredDoubleArrayStringTime
}

// GetRequiredDoubleArrayStringUnix returns the value of RequiredDoubleArrayStringUnix.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringUnix() [][]time.Time {
	return s.RequiredDoubleArrayStringUnix
}

// GetRequiredDoubleArrayStringUnixMinusMicro returns the value of RequiredDoubleArrayStringUnixMinusMicro.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringUnixMinusMicro() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusMicro
}

// GetRequiredDoubleArrayStringUnixMinusMilli returns the value of RequiredDoubleArrayStringUnixMinusMilli.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringUnixMinusMilli() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusMilli
}

// GetRequiredDoubleArrayStringUnixMinusNano returns the value of RequiredDoubleArrayStringUnixMinusNano.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringUnixMinusNano() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusNano
}

// GetRequiredDoubleArrayStringUnixMinusSeconds returns the value of RequiredDoubleArrayStringUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringUnixMinusSeconds() [][]time.Time {
	return s.RequiredDoubleArrayStringUnixMinusSeconds
}

// GetRequiredDoubleArrayStringURI returns the value of RequiredDoubleArrayStringURI.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringURI() [][]url.URL {
	return s.RequiredDoubleArrayStringURI
}

// GetRequiredDoubleArrayStringUUID returns the value of RequiredDoubleArrayStringUUID.
func (s TestResponseFormatTestOK) GetRequiredDoubleArrayStringUUID() [][]uuid.UUID {
	return s.RequiredDoubleArrayStringUUID
}

// GetRequiredInteger returns the value of RequiredInteger.
func (s TestResponseFormatTestOK) GetRequiredInteger() int {
	return s.RequiredInteger
}

// GetRequiredIntegerInt32 returns the value of RequiredIntegerInt32.
func (s TestResponseFormatTestOK) GetRequiredIntegerInt32() int32 {
	return s.RequiredIntegerInt32
}

// GetRequiredIntegerInt64 returns the value of RequiredIntegerInt64.
func (s TestResponseFormatTestOK) GetRequiredIntegerInt64() int64 {
	return s.RequiredIntegerInt64
}

// GetRequiredIntegerUint returns the value of RequiredIntegerUint.
func (s TestResponseFormatTestOK) GetRequiredIntegerUint() uint {
	return s.RequiredIntegerUint
}

// GetRequiredIntegerUint32 returns the value of RequiredIntegerUint32.
func (s TestResponseFormatTestOK) GetRequiredIntegerUint32() uint32 {
	return s.RequiredIntegerUint32
}

// GetRequiredIntegerUint64 returns the value of RequiredIntegerUint64.
func (s TestResponseFormatTestOK) GetRequiredIntegerUint64() uint64 {
	return s.RequiredIntegerUint64
}

// GetRequiredIntegerUnix returns the value of RequiredIntegerUnix.
func (s TestResponseFormatTestOK) GetRequiredIntegerUnix() time.Time {
	return s.RequiredIntegerUnix
}

// GetRequiredIntegerUnixMinusMicro returns the value of RequiredIntegerUnixMinusMicro.
func (s TestResponseFormatTestOK) GetRequiredIntegerUnixMinusMicro() time.Time {
	return s.RequiredIntegerUnixMinusMicro
}

// GetRequiredIntegerUnixMinusMilli returns the value of RequiredIntegerUnixMinusMilli.
func (s TestResponseFormatTestOK) GetRequiredIntegerUnixMinusMilli() time.Time {
	return s.RequiredIntegerUnixMinusMilli
}

// GetRequiredIntegerUnixMinusNano returns the value of RequiredIntegerUnixMinusNano.
func (s TestResponseFormatTestOK) GetRequiredIntegerUnixMinusNano() time.Time {
	return s.RequiredIntegerUnixMinusNano
}

// GetRequiredIntegerUnixMinusSeconds returns the value of RequiredIntegerUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetRequiredIntegerUnixMinusSeconds() time.Time {
	return s.RequiredIntegerUnixMinusSeconds
}

// GetRequiredNull returns the value of RequiredNull.
func (s TestResponseFormatTestOK) GetRequiredNull() struct{} {
	return s.RequiredNull
}

// GetRequiredNumber returns the value of RequiredNumber.
func (s TestResponseFormatTestOK) GetRequiredNumber() float64 {
	return s.RequiredNumber
}

// GetRequiredNumberDouble returns the value of RequiredNumberDouble.
func (s TestResponseFormatTestOK) GetRequiredNumberDouble() float64 {
	return s.RequiredNumberDouble
}

// GetRequiredNumberFloat returns the value of RequiredNumberFloat.
func (s TestResponseFormatTestOK) GetRequiredNumberFloat() float32 {
	return s.RequiredNumberFloat
}

// GetRequiredNumberInt32 returns the value of RequiredNumberInt32.
func (s TestResponseFormatTestOK) GetRequiredNumberInt32() int32 {
	return s.RequiredNumberInt32
}

// GetRequiredNumberInt64 returns the value of RequiredNumberInt64.
func (s TestResponseFormatTestOK) GetRequiredNumberInt64() int64 {
	return s.RequiredNumberInt64
}

// GetRequiredString returns the value of RequiredString.
func (s TestResponseFormatTestOK) GetRequiredString() string {
	return s.RequiredString
}

// GetRequiredStringBinary returns the value of RequiredStringBinary.
func (s TestResponseFormatTestOK) GetRequiredStringBinary() string {
	return s.RequiredStringBinary
}

// GetRequiredStringByte returns the value of RequiredStringByte.
func (s TestResponseFormatTestOK) GetRequiredStringByte() []byte {
	return s.RequiredStringByte
}

// GetRequiredStringDate returns the value of RequiredStringDate.
func (s TestResponseFormatTestOK) GetRequiredStringDate() time.Time {
	return s.RequiredStringDate
}

// GetRequiredStringDateMinusTime returns the value of RequiredStringDateMinusTime.
func (s TestResponseFormatTestOK) GetRequiredStringDateMinusTime() time.Time {
	return s.RequiredStringDateMinusTime
}

// GetRequiredStringDuration returns the value of RequiredStringDuration.
func (s TestResponseFormatTestOK) GetRequiredStringDuration() time.Duration {
	return s.RequiredStringDuration
}

// GetRequiredStringEmail returns the value of RequiredStringEmail.
func (s TestResponseFormatTestOK) GetRequiredStringEmail() string {
	return s.RequiredStringEmail
}

// GetRequiredStringHostname returns the value of RequiredStringHostname.
func (s TestResponseFormatTestOK) GetRequiredStringHostname() string {
	return s.RequiredStringHostname
}

// GetRequiredStringInt32 returns the value of RequiredStringInt32.
func (s TestResponseFormatTestOK) GetRequiredStringInt32() int32 {
	return s.RequiredStringInt32
}

// GetRequiredStringInt64 returns the value of RequiredStringInt64.
func (s TestResponseFormatTestOK) GetRequiredStringInt64() int64 {
	return s.RequiredStringInt64
}

// GetRequiredStringIP returns the value of RequiredStringIP.
func (s TestResponseFormatTestOK) GetRequiredStringIP() netip.Addr {
	return s.RequiredStringIP
}

// GetRequiredStringIpv4 returns the value of RequiredStringIpv4.
func (s TestResponseFormatTestOK) GetRequiredStringIpv4() netip.Addr {
	return s.RequiredStringIpv4
}

// GetRequiredStringIpv6 returns the value of RequiredStringIpv6.
func (s TestResponseFormatTestOK) GetRequiredStringIpv6() netip.Addr {
	return s.RequiredStringIpv6
}

// GetRequiredStringPassword returns the value of RequiredStringPassword.
func (s TestResponseFormatTestOK) GetRequiredStringPassword() string {
	return s.RequiredStringPassword
}

// GetRequiredStringTime returns the value of RequiredStringTime.
func (s TestResponseFormatTestOK) GetRequiredStringTime() time.Time {
	return s.RequiredStringTime
}

// GetRequiredStringUnix returns the value of RequiredStringUnix.
func (s TestResponseFormatTestOK) GetRequiredStringUnix() time.Time {
	return s.RequiredStringUnix
}

// GetRequiredStringUnixMinusMicro returns the value of RequiredStringUnixMinusMicro.
func (s TestResponseFormatTestOK) GetRequiredStringUnixMinusMicro() time.Time {
	return s.RequiredStringUnixMinusMicro
}

// GetRequiredStringUnixMinusMilli returns the value of RequiredStringUnixMinusMilli.
func (s TestResponseFormatTestOK) GetRequiredStringUnixMinusMilli() time.Time {
	return s.RequiredStringUnixMinusMilli
}

// GetRequiredStringUnixMinusNano returns the value of RequiredStringUnixMinusNano.
func (s TestResponseFormatTestOK) GetRequiredStringUnixMinusNano() time.Time {
	return s.RequiredStringUnixMinusNano
}

// GetRequiredStringUnixMinusSeconds returns the value of RequiredStringUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetRequiredStringUnixMinusSeconds() time.Time {
	return s.RequiredStringUnixMinusSeconds
}

// GetRequiredStringURI returns the value of RequiredStringURI.
func (s TestResponseFormatTestOK) GetRequiredStringURI() url.URL {
	return s.RequiredStringURI
}

// GetRequiredStringUUID returns the value of RequiredStringUUID.
func (s TestResponseFormatTestOK) GetRequiredStringUUID() uuid.UUID {
	return s.RequiredStringUUID
}

// GetOptionalAny returns the value of OptionalAny.
func (s TestResponseFormatTestOK) GetOptionalAny() jx.Raw {
	return s.OptionalAny
}

// GetOptionalArrayAny returns the value of OptionalArrayAny.
func (s TestResponseFormatTestOK) GetOptionalArrayAny() []jx.Raw {
	return s.OptionalArrayAny
}

// GetOptionalArrayBoolean returns the value of OptionalArrayBoolean.
func (s TestResponseFormatTestOK) GetOptionalArrayBoolean() []bool {
	return s.OptionalArrayBoolean
}

// GetOptionalArrayInteger returns the value of OptionalArrayInteger.
func (s TestResponseFormatTestOK) GetOptionalArrayInteger() []int {
	return s.OptionalArrayInteger
}

// GetOptionalArrayIntegerInt32 returns the value of OptionalArrayIntegerInt32.
func (s TestResponseFormatTestOK) GetOptionalArrayIntegerInt32() []int32 {
	return s.OptionalArrayIntegerInt32
}

// GetOptionalArrayIntegerInt64 returns the value of OptionalArrayIntegerInt64.
func (s TestResponseFormatTestOK) GetOptionalArrayIntegerInt64() []int64 {
	return s.OptionalArrayIntegerInt64
}

// GetOptionalArrayIntegerUint returns the value of OptionalArrayIntegerUint.
func (s TestResponseFormatTestOK) GetOptionalArrayIntegerUint() []uint {
	return s.OptionalArrayIntegerUint
}

// GetOptionalArrayIntegerUint32 returns the value of OptionalArrayIntegerUint32.
func (s TestResponseFormatTestOK) GetOptionalArrayIntegerUint32() []uint32 {
	return s.OptionalArrayIntegerUint32
}

// GetOptionalArrayIntegerUint64 returns the value of OptionalArrayIntegerUint64.
func (s TestResponseFormatTestOK) GetOptionalArrayIntegerUint64() []uint64 {
	return s.OptionalArrayIntegerUint64
}

// GetOptionalArrayIntegerUnix returns the value of OptionalArrayIntegerUnix.
func (s TestResponseFormatTestOK) GetOptionalArrayIntegerUnix() []time.Time {
	return s.OptionalArrayIntegerUnix
}

// GetOptionalArrayIntegerUnixMinusMicro returns the value of OptionalArrayIntegerUnixMinusMicro.
func (s TestResponseFormatTestOK) GetOptionalArrayIntegerUnixMinusMicro() []time.Time {
	return s.OptionalArrayIntegerUnixMinusMicro
}

// GetOptionalArrayIntegerUnixMinusMilli returns the value of OptionalArrayIntegerUnixMinusMilli.
func (s TestResponseFormatTestOK) GetOptionalArrayIntegerUnixMinusMilli() []time.Time {
	return s.OptionalArrayIntegerUnixMinusMilli
}

// GetOptionalArrayIntegerUnixMinusNano returns the value of OptionalArrayIntegerUnixMinusNano.
func (s TestResponseFormatTestOK) GetOptionalArrayIntegerUnixMinusNano() []time.Time {
	return s.OptionalArrayIntegerUnixMinusNano
}

// GetOptionalArrayIntegerUnixMinusSeconds returns the value of OptionalArrayIntegerUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetOptionalArrayIntegerUnixMinusSeconds() []time.Time {
	return s.OptionalArrayIntegerUnixMinusSeconds
}

// GetOptionalArrayNull returns the value of OptionalArrayNull.
func (s TestResponseFormatTestOK) GetOptionalArrayNull() []struct{} {
	return s.OptionalArrayNull
}

// GetOptionalArrayNumber returns the value of OptionalArrayNumber.
func (s TestResponseFormatTestOK) GetOptionalArrayNumber() []float64 {
	return s.OptionalArrayNumber
}

// GetOptionalArrayNumberDouble returns the value of OptionalArrayNumberDouble.
func (s TestResponseFormatTestOK) GetOptionalArrayNumberDouble() []float64 {
	return s.OptionalArrayNumberDouble
}

// GetOptionalArrayNumberFloat returns the value of OptionalArrayNumberFloat.
func (s TestResponseFormatTestOK) GetOptionalArrayNumberFloat() []float32 {
	return s.OptionalArrayNumberFloat
}

// GetOptionalArrayNumberInt32 returns the value of OptionalArrayNumberInt32.
func (s TestResponseFormatTestOK) GetOptionalArrayNumberInt32() []int32 {
	return s.OptionalArrayNumberInt32
}

// GetOptionalArrayNumberInt64 returns the value of OptionalArrayNumberInt64.
func (s TestResponseFormatTestOK) GetOptionalArrayNumberInt64() []int64 {
	return s.OptionalArrayNumberInt64
}

// GetOptionalArrayString returns the value of OptionalArrayString.
func (s TestResponseFormatTestOK) GetOptionalArrayString() []string {
	return s.OptionalArrayString
}

// GetOptionalArrayStringBinary returns the value of OptionalArrayStringBinary.
func (s TestResponseFormatTestOK) GetOptionalArrayStringBinary() []string {
	return s.OptionalArrayStringBinary
}

// GetOptionalArrayStringByte returns the value of OptionalArrayStringByte.
func (s TestResponseFormatTestOK) GetOptionalArrayStringByte() [][]byte {
	return s.OptionalArrayStringByte
}

// GetOptionalArrayStringDate returns the value of OptionalArrayStringDate.
func (s TestResponseFormatTestOK) GetOptionalArrayStringDate() []time.Time {
	return s.OptionalArrayStringDate
}

// GetOptionalArrayStringDateMinusTime returns the value of OptionalArrayStringDateMinusTime.
func (s TestResponseFormatTestOK) GetOptionalArrayStringDateMinusTime() []time.Time {
	return s.OptionalArrayStringDateMinusTime
}

// GetOptionalArrayStringDuration returns the value of OptionalArrayStringDuration.
func (s TestResponseFormatTestOK) GetOptionalArrayStringDuration() []time.Duration {
	return s.OptionalArrayStringDuration
}

// GetOptionalArrayStringEmail returns the value of OptionalArrayStringEmail.
func (s TestResponseFormatTestOK) GetOptionalArrayStringEmail() []string {
	return s.OptionalArrayStringEmail
}

// GetOptionalArrayStringHostname returns the value of OptionalArrayStringHostname.
func (s TestResponseFormatTestOK) GetOptionalArrayStringHostname() []string {
	return s.OptionalArrayStringHostname
}

// GetOptionalArrayStringInt32 returns the value of OptionalArrayStringInt32.
func (s TestResponseFormatTestOK) GetOptionalArrayStringInt32() []int32 {
	return s.OptionalArrayStringInt32
}

// GetOptionalArrayStringInt64 returns the value of OptionalArrayStringInt64.
func (s TestResponseFormatTestOK) GetOptionalArrayStringInt64() []int64 {
	return s.OptionalArrayStringInt64
}

// GetOptionalArrayStringIP returns the value of OptionalArrayStringIP.
func (s TestResponseFormatTestOK) GetOptionalArrayStringIP() []netip.Addr {
	return s.OptionalArrayStringIP
}

// GetOptionalArrayStringIpv4 returns the value of OptionalArrayStringIpv4.
func (s TestResponseFormatTestOK) GetOptionalArrayStringIpv4() []netip.Addr {
	return s.OptionalArrayStringIpv4
}

// GetOptionalArrayStringIpv6 returns the value of OptionalArrayStringIpv6.
func (s TestResponseFormatTestOK) GetOptionalArrayStringIpv6() []netip.Addr {
	return s.OptionalArrayStringIpv6
}

// GetOptionalArrayStringPassword returns the value of OptionalArrayStringPassword.
func (s TestResponseFormatTestOK) GetOptionalArrayStringPassword() []string {
	return s.OptionalArrayStringPassword
}

// GetOptionalArrayStringTime returns the value of OptionalArrayStringTime.
func (s TestResponseFormatTestOK) GetOptionalArrayStringTime() []time.Time {
	return s.OptionalArrayStringTime
}

// GetOptionalArrayStringUnix returns the value of OptionalArrayStringUnix.
func (s TestResponseFormatTestOK) GetOptionalArrayStringUnix() []time.Time {
	return s.OptionalArrayStringUnix
}

// GetOptionalArrayStringUnixMinusMicro returns the value of OptionalArrayStringUnixMinusMicro.
func (s TestResponseFormatTestOK) GetOptionalArrayStringUnixMinusMicro() []time.Time {
	return s.OptionalArrayStringUnixMinusMicro
}

// GetOptionalArrayStringUnixMinusMilli returns the value of OptionalArrayStringUnixMinusMilli.
func (s TestResponseFormatTestOK) GetOptionalArrayStringUnixMinusMilli() []time.Time {
	return s.OptionalArrayStringUnixMinusMilli
}

// GetOptionalArrayStringUnixMinusNano returns the value of OptionalArrayStringUnixMinusNano.
func (s TestResponseFormatTestOK) GetOptionalArrayStringUnixMinusNano() []time.Time {
	return s.OptionalArrayStringUnixMinusNano
}

// GetOptionalArrayStringUnixMinusSeconds returns the value of OptionalArrayStringUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetOptionalArrayStringUnixMinusSeconds() []time.Time {
	return s.OptionalArrayStringUnixMinusSeconds
}

// GetOptionalArrayStringURI returns the value of OptionalArrayStringURI.
func (s TestResponseFormatTestOK) GetOptionalArrayStringURI() []url.URL {
	return s.OptionalArrayStringURI
}

// GetOptionalArrayStringUUID returns the value of OptionalArrayStringUUID.
func (s TestResponseFormatTestOK) GetOptionalArrayStringUUID() []uuid.UUID {
	return s.OptionalArrayStringUUID
}

// GetOptionalBoolean returns the value of OptionalBoolean.
func (s TestResponseFormatTestOK) GetOptionalBoolean() OptBool {
	return s.OptionalBoolean
}

// GetOptionalDoubleArrayAny returns the value of OptionalDoubleArrayAny.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayAny() [][]jx.Raw {
	return s.OptionalDoubleArrayAny
}

// GetOptionalDoubleArrayBoolean returns the value of OptionalDoubleArrayBoolean.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayBoolean() [][]bool {
	return s.OptionalDoubleArrayBoolean
}

// GetOptionalDoubleArrayInteger returns the value of OptionalDoubleArrayInteger.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayInteger() [][]int {
	return s.OptionalDoubleArrayInteger
}

// GetOptionalDoubleArrayIntegerInt32 returns the value of OptionalDoubleArrayIntegerInt32.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayIntegerInt32() [][]int32 {
	return s.OptionalDoubleArrayIntegerInt32
}

// GetOptionalDoubleArrayIntegerInt64 returns the value of OptionalDoubleArrayIntegerInt64.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayIntegerInt64() [][]int64 {
	return s.OptionalDoubleArrayIntegerInt64
}

// GetOptionalDoubleArrayIntegerUint returns the value of OptionalDoubleArrayIntegerUint.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayIntegerUint() [][]uint {
	return s.OptionalDoubleArrayIntegerUint
}

// GetOptionalDoubleArrayIntegerUint32 returns the value of OptionalDoubleArrayIntegerUint32.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayIntegerUint32() [][]uint32 {
	return s.OptionalDoubleArrayIntegerUint32
}

// GetOptionalDoubleArrayIntegerUint64 returns the value of OptionalDoubleArrayIntegerUint64.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayIntegerUint64() [][]uint64 {
	return s.OptionalDoubleArrayIntegerUint64
}

// GetOptionalDoubleArrayIntegerUnix returns the value of OptionalDoubleArrayIntegerUnix.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayIntegerUnix() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnix
}

// GetOptionalDoubleArrayIntegerUnixMinusMicro returns the value of OptionalDoubleArrayIntegerUnixMinusMicro.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayIntegerUnixMinusMicro() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusMicro
}

// GetOptionalDoubleArrayIntegerUnixMinusMilli returns the value of OptionalDoubleArrayIntegerUnixMinusMilli.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayIntegerUnixMinusMilli() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusMilli
}

// GetOptionalDoubleArrayIntegerUnixMinusNano returns the value of OptionalDoubleArrayIntegerUnixMinusNano.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayIntegerUnixMinusNano() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusNano
}

// GetOptionalDoubleArrayIntegerUnixMinusSeconds returns the value of OptionalDoubleArrayIntegerUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayIntegerUnixMinusSeconds() [][]time.Time {
	return s.OptionalDoubleArrayIntegerUnixMinusSeconds
}

// GetOptionalDoubleArrayNull returns the value of OptionalDoubleArrayNull.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayNull() [][]struct{} {
	return s.OptionalDoubleArrayNull
}

// GetOptionalDoubleArrayNumber returns the value of OptionalDoubleArrayNumber.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayNumber() [][]float64 {
	return s.OptionalDoubleArrayNumber
}

// GetOptionalDoubleArrayNumberDouble returns the value of OptionalDoubleArrayNumberDouble.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayNumberDouble() [][]float64 {
	return s.OptionalDoubleArrayNumberDouble
}

// GetOptionalDoubleArrayNumberFloat returns the value of OptionalDoubleArrayNumberFloat.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayNumberFloat() [][]float32 {
	return s.OptionalDoubleArrayNumberFloat
}

// GetOptionalDoubleArrayNumberInt32 returns the value of OptionalDoubleArrayNumberInt32.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayNumberInt32() [][]int32 {
	return s.OptionalDoubleArrayNumberInt32
}

// GetOptionalDoubleArrayNumberInt64 returns the value of OptionalDoubleArrayNumberInt64.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayNumberInt64() [][]int64 {
	return s.OptionalDoubleArrayNumberInt64
}

// GetOptionalDoubleArrayString returns the value of OptionalDoubleArrayString.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayString() [][]string {
	return s.OptionalDoubleArrayString
}

// GetOptionalDoubleArrayStringBinary returns the value of OptionalDoubleArrayStringBinary.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringBinary() [][]string {
	return s.OptionalDoubleArrayStringBinary
}

// GetOptionalDoubleArrayStringByte returns the value of OptionalDoubleArrayStringByte.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringByte() [][][]byte {
	return s.OptionalDoubleArrayStringByte
}

// GetOptionalDoubleArrayStringDate returns the value of OptionalDoubleArrayStringDate.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringDate() [][]time.Time {
	return s.OptionalDoubleArrayStringDate
}

// GetOptionalDoubleArrayStringDateMinusTime returns the value of OptionalDoubleArrayStringDateMinusTime.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringDateMinusTime() [][]time.Time {
	return s.OptionalDoubleArrayStringDateMinusTime
}

// GetOptionalDoubleArrayStringDuration returns the value of OptionalDoubleArrayStringDuration.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringDuration() [][]time.Duration {
	return s.OptionalDoubleArrayStringDuration
}

// GetOptionalDoubleArrayStringEmail returns the value of OptionalDoubleArrayStringEmail.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringEmail() [][]string {
	return s.OptionalDoubleArrayStringEmail
}

// GetOptionalDoubleArrayStringHostname returns the value of OptionalDoubleArrayStringHostname.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringHostname() [][]string {
	return s.OptionalDoubleArrayStringHostname
}

// GetOptionalDoubleArrayStringInt32 returns the value of OptionalDoubleArrayStringInt32.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringInt32() [][]int32 {
	return s.OptionalDoubleArrayStringInt32
}

// GetOptionalDoubleArrayStringInt64 returns the value of OptionalDoubleArrayStringInt64.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringInt64() [][]int64 {
	return s.OptionalDoubleArrayStringInt64
}

// GetOptionalDoubleArrayStringIP returns the value of OptionalDoubleArrayStringIP.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringIP() [][]netip.Addr {
	return s.OptionalDoubleArrayStringIP
}

// GetOptionalDoubleArrayStringIpv4 returns the value of OptionalDoubleArrayStringIpv4.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringIpv4() [][]netip.Addr {
	return s.OptionalDoubleArrayStringIpv4
}

// GetOptionalDoubleArrayStringIpv6 returns the value of OptionalDoubleArrayStringIpv6.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringIpv6() [][]netip.Addr {
	return s.OptionalDoubleArrayStringIpv6
}

// GetOptionalDoubleArrayStringPassword returns the value of OptionalDoubleArrayStringPassword.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringPassword() [][]string {
	return s.OptionalDoubleArrayStringPassword
}

// GetOptionalDoubleArrayStringTime returns the value of OptionalDoubleArrayStringTime.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringTime() [][]time.Time {
	return s.OptionalDoubleArrayStringTime
}

// GetOptionalDoubleArrayStringUnix returns the value of OptionalDoubleArrayStringUnix.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringUnix() [][]time.Time {
	return s.OptionalDoubleArrayStringUnix
}

// GetOptionalDoubleArrayStringUnixMinusMicro returns the value of OptionalDoubleArrayStringUnixMinusMicro.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringUnixMinusMicro() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusMicro
}

// GetOptionalDoubleArrayStringUnixMinusMilli returns the value of OptionalDoubleArrayStringUnixMinusMilli.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringUnixMinusMilli() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusMilli
}

// GetOptionalDoubleArrayStringUnixMinusNano returns the value of OptionalDoubleArrayStringUnixMinusNano.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringUnixMinusNano() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusNano
}

// GetOptionalDoubleArrayStringUnixMinusSeconds returns the value of OptionalDoubleArrayStringUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringUnixMinusSeconds() [][]time.Time {
	return s.OptionalDoubleArrayStringUnixMinusSeconds
}

// GetOptionalDoubleArrayStringURI returns the value of OptionalDoubleArrayStringURI.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringURI() [][]url.URL {
	return s.OptionalDoubleArrayStringURI
}

// GetOptionalDoubleArrayStringUUID returns the value of OptionalDoubleArrayStringUUID.
func (s TestResponseFormatTestOK) GetOptionalDoubleArrayStringUUID() [][]uuid.UUID {
	return s.OptionalDoubleArrayStringUUID
}

// GetOptionalInteger returns the value of OptionalInteger.
func (s TestResponseFormatTestOK) GetOptionalInteger() OptInt {
	return s.OptionalInteger
}

// GetOptionalIntegerInt32 returns the value of OptionalIntegerInt32.
func (s TestResponseFormatTestOK) GetOptionalIntegerInt32() OptInt32 {
	return s.OptionalIntegerInt32
}

// GetOptionalIntegerInt64 returns the value of OptionalIntegerInt64.
func (s TestResponseFormatTestOK) GetOptionalIntegerInt64() OptInt64 {
	return s.OptionalIntegerInt64
}

// GetOptionalIntegerUint returns the value of OptionalIntegerUint.
func (s TestResponseFormatTestOK) GetOptionalIntegerUint() OptUint {
	return s.OptionalIntegerUint
}

// GetOptionalIntegerUint32 returns the value of OptionalIntegerUint32.
func (s TestResponseFormatTestOK) GetOptionalIntegerUint32() OptUint32 {
	return s.OptionalIntegerUint32
}

// GetOptionalIntegerUint64 returns the value of OptionalIntegerUint64.
func (s TestResponseFormatTestOK) GetOptionalIntegerUint64() OptUint64 {
	return s.OptionalIntegerUint64
}

// GetOptionalIntegerUnix returns the value of OptionalIntegerUnix.
func (s TestResponseFormatTestOK) GetOptionalIntegerUnix() OptUnixSeconds {
	return s.OptionalIntegerUnix
}

// GetOptionalIntegerUnixMinusMicro returns the value of OptionalIntegerUnixMinusMicro.
func (s TestResponseFormatTestOK) GetOptionalIntegerUnixMinusMicro() OptUnixMicro {
	return s.OptionalIntegerUnixMinusMicro
}

// GetOptionalIntegerUnixMinusMilli returns the value of OptionalIntegerUnixMinusMilli.
func (s TestResponseFormatTestOK) GetOptionalIntegerUnixMinusMilli() OptUnixMilli {
	return s.OptionalIntegerUnixMinusMilli
}

// GetOptionalIntegerUnixMinusNano returns the value of OptionalIntegerUnixMinusNano.
func (s TestResponseFormatTestOK) GetOptionalIntegerUnixMinusNano() OptUnixNano {
	return s.OptionalIntegerUnixMinusNano
}

// GetOptionalIntegerUnixMinusSeconds returns the value of OptionalIntegerUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetOptionalIntegerUnixMinusSeconds() OptUnixSeconds {
	return s.OptionalIntegerUnixMinusSeconds
}

// GetOptionalNull returns the value of OptionalNull.
func (s TestResponseFormatTestOK) GetOptionalNull() OptNull {
	return s.OptionalNull
}

// GetOptionalNumber returns the value of OptionalNumber.
func (s TestResponseFormatTestOK) GetOptionalNumber() OptFloat64 {
	return s.OptionalNumber
}

// GetOptionalNumberDouble returns the value of OptionalNumberDouble.
func (s TestResponseFormatTestOK) GetOptionalNumberDouble() OptFloat64 {
	return s.OptionalNumberDouble
}

// GetOptionalNumberFloat returns the value of OptionalNumberFloat.
func (s TestResponseFormatTestOK) GetOptionalNumberFloat() OptFloat32 {
	return s.OptionalNumberFloat
}

// GetOptionalNumberInt32 returns the value of OptionalNumberInt32.
func (s TestResponseFormatTestOK) GetOptionalNumberInt32() OptInt32 {
	return s.OptionalNumberInt32
}

// GetOptionalNumberInt64 returns the value of OptionalNumberInt64.
func (s TestResponseFormatTestOK) GetOptionalNumberInt64() OptInt64 {
	return s.OptionalNumberInt64
}

// GetOptionalString returns the value of OptionalString.
func (s TestResponseFormatTestOK) GetOptionalString() OptString {
	return s.OptionalString
}

// GetOptionalStringBinary returns the value of OptionalStringBinary.
func (s TestResponseFormatTestOK) GetOptionalStringBinary() OptString {
	return s.OptionalStringBinary
}

// GetOptionalStringByte returns the value of OptionalStringByte.
func (s TestResponseFormatTestOK) GetOptionalStringByte() []byte {
	return s.OptionalStringByte
}

// GetOptionalStringDate returns the value of OptionalStringDate.
func (s TestResponseFormatTestOK) GetOptionalStringDate() OptDate {
	return s.OptionalStringDate
}

// GetOptionalStringDateMinusTime returns the value of OptionalStringDateMinusTime.
func (s TestResponseFormatTestOK) GetOptionalStringDateMinusTime() OptDateTime {
	return s.OptionalStringDateMinusTime
}

// GetOptionalStringDuration returns the value of OptionalStringDuration.
func (s TestResponseFormatTestOK) GetOptionalStringDuration() OptDuration {
	return s.OptionalStringDuration
}

// GetOptionalStringEmail returns the value of OptionalStringEmail.
func (s TestResponseFormatTestOK) GetOptionalStringEmail() OptString {
	return s.OptionalStringEmail
}

// GetOptionalStringHostname returns the value of OptionalStringHostname.
func (s TestResponseFormatTestOK) GetOptionalStringHostname() OptString {
	return s.OptionalStringHostname
}

// GetOptionalStringInt32 returns the value of OptionalStringInt32.
func (s TestResponseFormatTestOK) GetOptionalStringInt32() OptStringInt32 {
	return s.OptionalStringInt32
}

// GetOptionalStringInt64 returns the value of OptionalStringInt64.
func (s TestResponseFormatTestOK) GetOptionalStringInt64() OptStringInt64 {
	return s.OptionalStringInt64
}

// GetOptionalStringIP returns the value of OptionalStringIP.
func (s TestResponseFormatTestOK) GetOptionalStringIP() OptIP {
	return s.OptionalStringIP
}

// GetOptionalStringIpv4 returns the value of OptionalStringIpv4.
func (s TestResponseFormatTestOK) GetOptionalStringIpv4() OptIPv4 {
	return s.OptionalStringIpv4
}

// GetOptionalStringIpv6 returns the value of OptionalStringIpv6.
func (s TestResponseFormatTestOK) GetOptionalStringIpv6() OptIPv6 {
	return s.OptionalStringIpv6
}

// GetOptionalStringPassword returns the value of OptionalStringPassword.
func (s TestResponseFormatTestOK) GetOptionalStringPassword() OptString {
	return s.OptionalStringPassword
}

// GetOptionalStringTime returns the value of OptionalStringTime.
func (s TestResponseFormatTestOK) GetOptionalStringTime() OptTime {
	return s.OptionalStringTime
}

// GetOptionalStringUnix returns the value of OptionalStringUnix.
func (s TestResponseFormatTestOK) GetOptionalStringUnix() OptStringUnixSeconds {
	return s.OptionalStringUnix
}

// GetOptionalStringUnixMinusMicro returns the value of OptionalStringUnixMinusMicro.
func (s TestResponseFormatTestOK) GetOptionalStringUnixMinusMicro() OptStringUnixMicro {
	return s.OptionalStringUnixMinusMicro
}

// GetOptionalStringUnixMinusMilli returns the value of OptionalStringUnixMinusMilli.
func (s TestResponseFormatTestOK) GetOptionalStringUnixMinusMilli() OptStringUnixMilli {
	return s.OptionalStringUnixMinusMilli
}

// GetOptionalStringUnixMinusNano returns the value of OptionalStringUnixMinusNano.
func (s TestResponseFormatTestOK) GetOptionalStringUnixMinusNano() OptStringUnixNano {
	return s.OptionalStringUnixMinusNano
}

// GetOptionalStringUnixMinusSeconds returns the value of OptionalStringUnixMinusSeconds.
func (s TestResponseFormatTestOK) GetOptionalStringUnixMinusSeconds() OptStringUnixSeconds {
	return s.OptionalStringUnixMinusSeconds
}

// GetOptionalStringURI returns the value of OptionalStringURI.
func (s TestResponseFormatTestOK) GetOptionalStringURI() OptURI {
	return s.OptionalStringURI
}

// GetOptionalStringUUID returns the value of OptionalStringUUID.
func (s TestResponseFormatTestOK) GetOptionalStringUUID() OptUUID {
	return s.OptionalStringUUID
}

// SetRequiredAny sets the value of RequiredAny.
func (s *TestResponseFormatTestOK) SetRequiredAny(val jx.Raw) {
	s.RequiredAny = val
}

// SetRequiredArrayAny sets the value of RequiredArrayAny.
func (s *TestResponseFormatTestOK) SetRequiredArrayAny(val []jx.Raw) {
	s.RequiredArrayAny = val
}

// SetRequiredArrayBoolean sets the value of RequiredArrayBoolean.
func (s *TestResponseFormatTestOK) SetRequiredArrayBoolean(val []bool) {
	s.RequiredArrayBoolean = val
}

// SetRequiredArrayInteger sets the value of RequiredArrayInteger.
func (s *TestResponseFormatTestOK) SetRequiredArrayInteger(val []int) {
	s.RequiredArrayInteger = val
}

// SetRequiredArrayIntegerInt32 sets the value of RequiredArrayIntegerInt32.
func (s *TestResponseFormatTestOK) SetRequiredArrayIntegerInt32(val []int32) {
	s.RequiredArrayIntegerInt32 = val
}

// SetRequiredArrayIntegerInt64 sets the value of RequiredArrayIntegerInt64.
func (s *TestResponseFormatTestOK) SetRequiredArrayIntegerInt64(val []int64) {
	s.RequiredArrayIntegerInt64 = val
}

// SetRequiredArrayIntegerUint sets the value of RequiredArrayIntegerUint.
func (s *TestResponseFormatTestOK) SetRequiredArrayIntegerUint(val []uint) {
	s.RequiredArrayIntegerUint = val
}

// SetRequiredArrayIntegerUint32 sets the value of RequiredArrayIntegerUint32.
func (s *TestResponseFormatTestOK) SetRequiredArrayIntegerUint32(val []uint32) {
	s.RequiredArrayIntegerUint32 = val
}

// SetRequiredArrayIntegerUint64 sets the value of RequiredArrayIntegerUint64.
func (s *TestResponseFormatTestOK) SetRequiredArrayIntegerUint64(val []uint64) {
	s.RequiredArrayIntegerUint64 = val
}

// SetRequiredArrayIntegerUnix sets the value of RequiredArrayIntegerUnix.
func (s *TestResponseFormatTestOK) SetRequiredArrayIntegerUnix(val []time.Time) {
	s.RequiredArrayIntegerUnix = val
}

// SetRequiredArrayIntegerUnixMinusMicro sets the value of RequiredArrayIntegerUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetRequiredArrayIntegerUnixMinusMicro(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusMicro = val
}

// SetRequiredArrayIntegerUnixMinusMilli sets the value of RequiredArrayIntegerUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetRequiredArrayIntegerUnixMinusMilli(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusMilli = val
}

// SetRequiredArrayIntegerUnixMinusNano sets the value of RequiredArrayIntegerUnixMinusNano.
func (s *TestResponseFormatTestOK) SetRequiredArrayIntegerUnixMinusNano(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusNano = val
}

// SetRequiredArrayIntegerUnixMinusSeconds sets the value of RequiredArrayIntegerUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetRequiredArrayIntegerUnixMinusSeconds(val []time.Time) {
	s.RequiredArrayIntegerUnixMinusSeconds = val
}

// SetRequiredArrayNull sets the value of RequiredArrayNull.
func (s *TestResponseFormatTestOK) SetRequiredArrayNull(val []struct{}) {
	s.RequiredArrayNull = val
}

// SetRequiredArrayNumber sets the value of RequiredArrayNumber.
func (s *TestResponseFormatTestOK) SetRequiredArrayNumber(val []float64) {
	s.RequiredArrayNumber = val
}

// SetRequiredArrayNumberDouble sets the value of RequiredArrayNumberDouble.
func (s *TestResponseFormatTestOK) SetRequiredArrayNumberDouble(val []float64) {
	s.RequiredArrayNumberDouble = val
}

// SetRequiredArrayNumberFloat sets the value of RequiredArrayNumberFloat.
func (s *TestResponseFormatTestOK) SetRequiredArrayNumberFloat(val []float32) {
	s.RequiredArrayNumberFloat = val
}

// SetRequiredArrayNumberInt32 sets the value of RequiredArrayNumberInt32.
func (s *TestResponseFormatTestOK) SetRequiredArrayNumberInt32(val []int32) {
	s.RequiredArrayNumberInt32 = val
}

// SetRequiredArrayNumberInt64 sets the value of RequiredArrayNumberInt64.
func (s *TestResponseFormatTestOK) SetRequiredArrayNumberInt64(val []int64) {
	s.RequiredArrayNumberInt64 = val
}

// SetRequiredArrayString sets the value of RequiredArrayString.
func (s *TestResponseFormatTestOK) SetRequiredArrayString(val []string) {
	s.RequiredArrayString = val
}

// SetRequiredArrayStringBinary sets the value of RequiredArrayStringBinary.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringBinary(val []string) {
	s.RequiredArrayStringBinary = val
}

// SetRequiredArrayStringByte sets the value of RequiredArrayStringByte.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringByte(val [][]byte) {
	s.RequiredArrayStringByte = val
}

// SetRequiredArrayStringDate sets the value of RequiredArrayStringDate.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringDate(val []time.Time) {
	s.RequiredArrayStringDate = val
}

// SetRequiredArrayStringDateMinusTime sets the value of RequiredArrayStringDateMinusTime.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringDateMinusTime(val []time.Time) {
	s.RequiredArrayStringDateMinusTime = val
}

// SetRequiredArrayStringDuration sets the value of RequiredArrayStringDuration.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringDuration(val []time.Duration) {
	s.RequiredArrayStringDuration = val
}

// SetRequiredArrayStringEmail sets the value of RequiredArrayStringEmail.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringEmail(val []string) {
	s.RequiredArrayStringEmail = val
}

// SetRequiredArrayStringHostname sets the value of RequiredArrayStringHostname.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringHostname(val []string) {
	s.RequiredArrayStringHostname = val
}

// SetRequiredArrayStringInt32 sets the value of RequiredArrayStringInt32.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringInt32(val []int32) {
	s.RequiredArrayStringInt32 = val
}

// SetRequiredArrayStringInt64 sets the value of RequiredArrayStringInt64.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringInt64(val []int64) {
	s.RequiredArrayStringInt64 = val
}

// SetRequiredArrayStringIP sets the value of RequiredArrayStringIP.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringIP(val []netip.Addr) {
	s.RequiredArrayStringIP = val
}

// SetRequiredArrayStringIpv4 sets the value of RequiredArrayStringIpv4.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringIpv4(val []netip.Addr) {
	s.RequiredArrayStringIpv4 = val
}

// SetRequiredArrayStringIpv6 sets the value of RequiredArrayStringIpv6.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringIpv6(val []netip.Addr) {
	s.RequiredArrayStringIpv6 = val
}

// SetRequiredArrayStringPassword sets the value of RequiredArrayStringPassword.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringPassword(val []string) {
	s.RequiredArrayStringPassword = val
}

// SetRequiredArrayStringTime sets the value of RequiredArrayStringTime.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringTime(val []time.Time) {
	s.RequiredArrayStringTime = val
}

// SetRequiredArrayStringUnix sets the value of RequiredArrayStringUnix.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringUnix(val []time.Time) {
	s.RequiredArrayStringUnix = val
}

// SetRequiredArrayStringUnixMinusMicro sets the value of RequiredArrayStringUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringUnixMinusMicro(val []time.Time) {
	s.RequiredArrayStringUnixMinusMicro = val
}

// SetRequiredArrayStringUnixMinusMilli sets the value of RequiredArrayStringUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringUnixMinusMilli(val []time.Time) {
	s.RequiredArrayStringUnixMinusMilli = val
}

// SetRequiredArrayStringUnixMinusNano sets the value of RequiredArrayStringUnixMinusNano.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringUnixMinusNano(val []time.Time) {
	s.RequiredArrayStringUnixMinusNano = val
}

// SetRequiredArrayStringUnixMinusSeconds sets the value of RequiredArrayStringUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringUnixMinusSeconds(val []time.Time) {
	s.RequiredArrayStringUnixMinusSeconds = val
}

// SetRequiredArrayStringURI sets the value of RequiredArrayStringURI.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringURI(val []url.URL) {
	s.RequiredArrayStringURI = val
}

// SetRequiredArrayStringUUID sets the value of RequiredArrayStringUUID.
func (s *TestResponseFormatTestOK) SetRequiredArrayStringUUID(val []uuid.UUID) {
	s.RequiredArrayStringUUID = val
}

// SetRequiredBoolean sets the value of RequiredBoolean.
func (s *TestResponseFormatTestOK) SetRequiredBoolean(val bool) {
	s.RequiredBoolean = val
}

// SetRequiredDoubleArrayAny sets the value of RequiredDoubleArrayAny.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayAny(val [][]jx.Raw) {
	s.RequiredDoubleArrayAny = val
}

// SetRequiredDoubleArrayBoolean sets the value of RequiredDoubleArrayBoolean.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayBoolean(val [][]bool) {
	s.RequiredDoubleArrayBoolean = val
}

// SetRequiredDoubleArrayInteger sets the value of RequiredDoubleArrayInteger.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayInteger(val [][]int) {
	s.RequiredDoubleArrayInteger = val
}

// SetRequiredDoubleArrayIntegerInt32 sets the value of RequiredDoubleArrayIntegerInt32.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayIntegerInt32(val [][]int32) {
	s.RequiredDoubleArrayIntegerInt32 = val
}

// SetRequiredDoubleArrayIntegerInt64 sets the value of RequiredDoubleArrayIntegerInt64.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayIntegerInt64(val [][]int64) {
	s.RequiredDoubleArrayIntegerInt64 = val
}

// SetRequiredDoubleArrayIntegerUint sets the value of RequiredDoubleArrayIntegerUint.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayIntegerUint(val [][]uint) {
	s.RequiredDoubleArrayIntegerUint = val
}

// SetRequiredDoubleArrayIntegerUint32 sets the value of RequiredDoubleArrayIntegerUint32.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayIntegerUint32(val [][]uint32) {
	s.RequiredDoubleArrayIntegerUint32 = val
}

// SetRequiredDoubleArrayIntegerUint64 sets the value of RequiredDoubleArrayIntegerUint64.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayIntegerUint64(val [][]uint64) {
	s.RequiredDoubleArrayIntegerUint64 = val
}

// SetRequiredDoubleArrayIntegerUnix sets the value of RequiredDoubleArrayIntegerUnix.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayIntegerUnix(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnix = val
}

// SetRequiredDoubleArrayIntegerUnixMinusMicro sets the value of RequiredDoubleArrayIntegerUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayIntegerUnixMinusMicro(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusMicro = val
}

// SetRequiredDoubleArrayIntegerUnixMinusMilli sets the value of RequiredDoubleArrayIntegerUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayIntegerUnixMinusMilli(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusMilli = val
}

// SetRequiredDoubleArrayIntegerUnixMinusNano sets the value of RequiredDoubleArrayIntegerUnixMinusNano.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayIntegerUnixMinusNano(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusNano = val
}

// SetRequiredDoubleArrayIntegerUnixMinusSeconds sets the value of RequiredDoubleArrayIntegerUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayIntegerUnixMinusSeconds(val [][]time.Time) {
	s.RequiredDoubleArrayIntegerUnixMinusSeconds = val
}

// SetRequiredDoubleArrayNull sets the value of RequiredDoubleArrayNull.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayNull(val [][]struct{}) {
	s.RequiredDoubleArrayNull = val
}

// SetRequiredDoubleArrayNumber sets the value of RequiredDoubleArrayNumber.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayNumber(val [][]float64) {
	s.RequiredDoubleArrayNumber = val
}

// SetRequiredDoubleArrayNumberDouble sets the value of RequiredDoubleArrayNumberDouble.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayNumberDouble(val [][]float64) {
	s.RequiredDoubleArrayNumberDouble = val
}

// SetRequiredDoubleArrayNumberFloat sets the value of RequiredDoubleArrayNumberFloat.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayNumberFloat(val [][]float32) {
	s.RequiredDoubleArrayNumberFloat = val
}

// SetRequiredDoubleArrayNumberInt32 sets the value of RequiredDoubleArrayNumberInt32.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayNumberInt32(val [][]int32) {
	s.RequiredDoubleArrayNumberInt32 = val
}

// SetRequiredDoubleArrayNumberInt64 sets the value of RequiredDoubleArrayNumberInt64.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayNumberInt64(val [][]int64) {
	s.RequiredDoubleArrayNumberInt64 = val
}

// SetRequiredDoubleArrayString sets the value of RequiredDoubleArrayString.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayString(val [][]string) {
	s.RequiredDoubleArrayString = val
}

// SetRequiredDoubleArrayStringBinary sets the value of RequiredDoubleArrayStringBinary.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringBinary(val [][]string) {
	s.RequiredDoubleArrayStringBinary = val
}

// SetRequiredDoubleArrayStringByte sets the value of RequiredDoubleArrayStringByte.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringByte(val [][][]byte) {
	s.RequiredDoubleArrayStringByte = val
}

// SetRequiredDoubleArrayStringDate sets the value of RequiredDoubleArrayStringDate.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringDate(val [][]time.Time) {
	s.RequiredDoubleArrayStringDate = val
}

// SetRequiredDoubleArrayStringDateMinusTime sets the value of RequiredDoubleArrayStringDateMinusTime.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringDateMinusTime(val [][]time.Time) {
	s.RequiredDoubleArrayStringDateMinusTime = val
}

// SetRequiredDoubleArrayStringDuration sets the value of RequiredDoubleArrayStringDuration.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringDuration(val [][]time.Duration) {
	s.RequiredDoubleArrayStringDuration = val
}

// SetRequiredDoubleArrayStringEmail sets the value of RequiredDoubleArrayStringEmail.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringEmail(val [][]string) {
	s.RequiredDoubleArrayStringEmail = val
}

// SetRequiredDoubleArrayStringHostname sets the value of RequiredDoubleArrayStringHostname.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringHostname(val [][]string) {
	s.RequiredDoubleArrayStringHostname = val
}

// SetRequiredDoubleArrayStringInt32 sets the value of RequiredDoubleArrayStringInt32.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringInt32(val [][]int32) {
	s.RequiredDoubleArrayStringInt32 = val
}

// SetRequiredDoubleArrayStringInt64 sets the value of RequiredDoubleArrayStringInt64.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringInt64(val [][]int64) {
	s.RequiredDoubleArrayStringInt64 = val
}

// SetRequiredDoubleArrayStringIP sets the value of RequiredDoubleArrayStringIP.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringIP(val [][]netip.Addr) {
	s.RequiredDoubleArrayStringIP = val
}

// SetRequiredDoubleArrayStringIpv4 sets the value of RequiredDoubleArrayStringIpv4.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringIpv4(val [][]netip.Addr) {
	s.RequiredDoubleArrayStringIpv4 = val
}

// SetRequiredDoubleArrayStringIpv6 sets the value of RequiredDoubleArrayStringIpv6.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringIpv6(val [][]netip.Addr) {
	s.RequiredDoubleArrayStringIpv6 = val
}

// SetRequiredDoubleArrayStringPassword sets the value of RequiredDoubleArrayStringPassword.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringPassword(val [][]string) {
	s.RequiredDoubleArrayStringPassword = val
}

// SetRequiredDoubleArrayStringTime sets the value of RequiredDoubleArrayStringTime.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringTime(val [][]time.Time) {
	s.RequiredDoubleArrayStringTime = val
}

// SetRequiredDoubleArrayStringUnix sets the value of RequiredDoubleArrayStringUnix.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringUnix(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnix = val
}

// SetRequiredDoubleArrayStringUnixMinusMicro sets the value of RequiredDoubleArrayStringUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringUnixMinusMicro(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusMicro = val
}

// SetRequiredDoubleArrayStringUnixMinusMilli sets the value of RequiredDoubleArrayStringUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringUnixMinusMilli(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusMilli = val
}

// SetRequiredDoubleArrayStringUnixMinusNano sets the value of RequiredDoubleArrayStringUnixMinusNano.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringUnixMinusNano(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusNano = val
}

// SetRequiredDoubleArrayStringUnixMinusSeconds sets the value of RequiredDoubleArrayStringUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringUnixMinusSeconds(val [][]time.Time) {
	s.RequiredDoubleArrayStringUnixMinusSeconds = val
}

// SetRequiredDoubleArrayStringURI sets the value of RequiredDoubleArrayStringURI.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringURI(val [][]url.URL) {
	s.RequiredDoubleArrayStringURI = val
}

// SetRequiredDoubleArrayStringUUID sets the value of RequiredDoubleArrayStringUUID.
func (s *TestResponseFormatTestOK) SetRequiredDoubleArrayStringUUID(val [][]uuid.UUID) {
	s.RequiredDoubleArrayStringUUID = val
}

// SetRequiredInteger sets the value of RequiredInteger.
func (s *TestResponseFormatTestOK) SetRequiredInteger(val int) {
	s.RequiredInteger = val
}

// SetRequiredIntegerInt32 sets the value of RequiredIntegerInt32.
func (s *TestResponseFormatTestOK) SetRequiredIntegerInt32(val int32) {
	s.RequiredIntegerInt32 = val
}

// SetRequiredIntegerInt64 sets the value of RequiredIntegerInt64.
func (s *TestResponseFormatTestOK) SetRequiredIntegerInt64(val int64) {
	s.RequiredIntegerInt64 = val
}

// SetRequiredIntegerUint sets the value of RequiredIntegerUint.
func (s *TestResponseFormatTestOK) SetRequiredIntegerUint(val uint) {
	s.RequiredIntegerUint = val
}

// SetRequiredIntegerUint32 sets the value of RequiredIntegerUint32.
func (s *TestResponseFormatTestOK) SetRequiredIntegerUint32(val uint32) {
	s.RequiredIntegerUint32 = val
}

// SetRequiredIntegerUint64 sets the value of RequiredIntegerUint64.
func (s *TestResponseFormatTestOK) SetRequiredIntegerUint64(val uint64) {
	s.RequiredIntegerUint64 = val
}

// SetRequiredIntegerUnix sets the value of RequiredIntegerUnix.
func (s *TestResponseFormatTestOK) SetRequiredIntegerUnix(val time.Time) {
	s.RequiredIntegerUnix = val
}

// SetRequiredIntegerUnixMinusMicro sets the value of RequiredIntegerUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetRequiredIntegerUnixMinusMicro(val time.Time) {
	s.RequiredIntegerUnixMinusMicro = val
}

// SetRequiredIntegerUnixMinusMilli sets the value of RequiredIntegerUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetRequiredIntegerUnixMinusMilli(val time.Time) {
	s.RequiredIntegerUnixMinusMilli = val
}

// SetRequiredIntegerUnixMinusNano sets the value of RequiredIntegerUnixMinusNano.
func (s *TestResponseFormatTestOK) SetRequiredIntegerUnixMinusNano(val time.Time) {
	s.RequiredIntegerUnixMinusNano = val
}

// SetRequiredIntegerUnixMinusSeconds sets the value of RequiredIntegerUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetRequiredIntegerUnixMinusSeconds(val time.Time) {
	s.RequiredIntegerUnixMinusSeconds = val
}

// SetRequiredNull sets the value of RequiredNull.
func (s *TestResponseFormatTestOK) SetRequiredNull(val struct{}) {
	s.RequiredNull = val
}

// SetRequiredNumber sets the value of RequiredNumber.
func (s *TestResponseFormatTestOK) SetRequiredNumber(val float64) {
	s.RequiredNumber = val
}

// SetRequiredNumberDouble sets the value of RequiredNumberDouble.
func (s *TestResponseFormatTestOK) SetRequiredNumberDouble(val float64) {
	s.RequiredNumberDouble = val
}

// SetRequiredNumberFloat sets the value of RequiredNumberFloat.
func (s *TestResponseFormatTestOK) SetRequiredNumberFloat(val float32) {
	s.RequiredNumberFloat = val
}

// SetRequiredNumberInt32 sets the value of RequiredNumberInt32.
func (s *TestResponseFormatTestOK) SetRequiredNumberInt32(val int32) {
	s.RequiredNumberInt32 = val
}

// SetRequiredNumberInt64 sets the value of RequiredNumberInt64.
func (s *TestResponseFormatTestOK) SetRequiredNumberInt64(val int64) {
	s.RequiredNumberInt64 = val
}

// SetRequiredString sets the value of RequiredString.
func (s *TestResponseFormatTestOK) SetRequiredString(val string) {
	s.RequiredString = val
}

// SetRequiredStringBinary sets the value of RequiredStringBinary.
func (s *TestResponseFormatTestOK) SetRequiredStringBinary(val string) {
	s.RequiredStringBinary = val
}

// SetRequiredStringByte sets the value of RequiredStringByte.
func (s *TestResponseFormatTestOK) SetRequiredStringByte(val []byte) {
	s.RequiredStringByte = val
}

// SetRequiredStringDate sets the value of RequiredStringDate.
func (s *TestResponseFormatTestOK) SetRequiredStringDate(val time.Time) {
	s.RequiredStringDate = val
}

// SetRequiredStringDateMinusTime sets the value of RequiredStringDateMinusTime.
func (s *TestResponseFormatTestOK) SetRequiredStringDateMinusTime(val time.Time) {
	s.RequiredStringDateMinusTime = val
}

// SetRequiredStringDuration sets the value of RequiredStringDuration.
func (s *TestResponseFormatTestOK) SetRequiredStringDuration(val time.Duration) {
	s.RequiredStringDuration = val
}

// SetRequiredStringEmail sets the value of RequiredStringEmail.
func (s *TestResponseFormatTestOK) SetRequiredStringEmail(val string) {
	s.RequiredStringEmail = val
}

// SetRequiredStringHostname sets the value of RequiredStringHostname.
func (s *TestResponseFormatTestOK) SetRequiredStringHostname(val string) {
	s.RequiredStringHostname = val
}

// SetRequiredStringInt32 sets the value of RequiredStringInt32.
func (s *TestResponseFormatTestOK) SetRequiredStringInt32(val int32) {
	s.RequiredStringInt32 = val
}

// SetRequiredStringInt64 sets the value of RequiredStringInt64.
func (s *TestResponseFormatTestOK) SetRequiredStringInt64(val int64) {
	s.RequiredStringInt64 = val
}

// SetRequiredStringIP sets the value of RequiredStringIP.
func (s *TestResponseFormatTestOK) SetRequiredStringIP(val netip.Addr) {
	s.RequiredStringIP = val
}

// SetRequiredStringIpv4 sets the value of RequiredStringIpv4.
func (s *TestResponseFormatTestOK) SetRequiredStringIpv4(val netip.Addr) {
	s.RequiredStringIpv4 = val
}

// SetRequiredStringIpv6 sets the value of RequiredStringIpv6.
func (s *TestResponseFormatTestOK) SetRequiredStringIpv6(val netip.Addr) {
	s.RequiredStringIpv6 = val
}

// SetRequiredStringPassword sets the value of RequiredStringPassword.
func (s *TestResponseFormatTestOK) SetRequiredStringPassword(val string) {
	s.RequiredStringPassword = val
}

// SetRequiredStringTime sets the value of RequiredStringTime.
func (s *TestResponseFormatTestOK) SetRequiredStringTime(val time.Time) {
	s.RequiredStringTime = val
}

// SetRequiredStringUnix sets the value of RequiredStringUnix.
func (s *TestResponseFormatTestOK) SetRequiredStringUnix(val time.Time) {
	s.RequiredStringUnix = val
}

// SetRequiredStringUnixMinusMicro sets the value of RequiredStringUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetRequiredStringUnixMinusMicro(val time.Time) {
	s.RequiredStringUnixMinusMicro = val
}

// SetRequiredStringUnixMinusMilli sets the value of RequiredStringUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetRequiredStringUnixMinusMilli(val time.Time) {
	s.RequiredStringUnixMinusMilli = val
}

// SetRequiredStringUnixMinusNano sets the value of RequiredStringUnixMinusNano.
func (s *TestResponseFormatTestOK) SetRequiredStringUnixMinusNano(val time.Time) {
	s.RequiredStringUnixMinusNano = val
}

// SetRequiredStringUnixMinusSeconds sets the value of RequiredStringUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetRequiredStringUnixMinusSeconds(val time.Time) {
	s.RequiredStringUnixMinusSeconds = val
}

// SetRequiredStringURI sets the value of RequiredStringURI.
func (s *TestResponseFormatTestOK) SetRequiredStringURI(val url.URL) {
	s.RequiredStringURI = val
}

// SetRequiredStringUUID sets the value of RequiredStringUUID.
func (s *TestResponseFormatTestOK) SetRequiredStringUUID(val uuid.UUID) {
	s.RequiredStringUUID = val
}

// SetOptionalAny sets the value of OptionalAny.
func (s *TestResponseFormatTestOK) SetOptionalAny(val jx.Raw) {
	s.OptionalAny = val
}

// SetOptionalArrayAny sets the value of OptionalArrayAny.
func (s *TestResponseFormatTestOK) SetOptionalArrayAny(val []jx.Raw) {
	s.OptionalArrayAny = val
}

// SetOptionalArrayBoolean sets the value of OptionalArrayBoolean.
func (s *TestResponseFormatTestOK) SetOptionalArrayBoolean(val []bool) {
	s.OptionalArrayBoolean = val
}

// SetOptionalArrayInteger sets the value of OptionalArrayInteger.
func (s *TestResponseFormatTestOK) SetOptionalArrayInteger(val []int) {
	s.OptionalArrayInteger = val
}

// SetOptionalArrayIntegerInt32 sets the value of OptionalArrayIntegerInt32.
func (s *TestResponseFormatTestOK) SetOptionalArrayIntegerInt32(val []int32) {
	s.OptionalArrayIntegerInt32 = val
}

// SetOptionalArrayIntegerInt64 sets the value of OptionalArrayIntegerInt64.
func (s *TestResponseFormatTestOK) SetOptionalArrayIntegerInt64(val []int64) {
	s.OptionalArrayIntegerInt64 = val
}

// SetOptionalArrayIntegerUint sets the value of OptionalArrayIntegerUint.
func (s *TestResponseFormatTestOK) SetOptionalArrayIntegerUint(val []uint) {
	s.OptionalArrayIntegerUint = val
}

// SetOptionalArrayIntegerUint32 sets the value of OptionalArrayIntegerUint32.
func (s *TestResponseFormatTestOK) SetOptionalArrayIntegerUint32(val []uint32) {
	s.OptionalArrayIntegerUint32 = val
}

// SetOptionalArrayIntegerUint64 sets the value of OptionalArrayIntegerUint64.
func (s *TestResponseFormatTestOK) SetOptionalArrayIntegerUint64(val []uint64) {
	s.OptionalArrayIntegerUint64 = val
}

// SetOptionalArrayIntegerUnix sets the value of OptionalArrayIntegerUnix.
func (s *TestResponseFormatTestOK) SetOptionalArrayIntegerUnix(val []time.Time) {
	s.OptionalArrayIntegerUnix = val
}

// SetOptionalArrayIntegerUnixMinusMicro sets the value of OptionalArrayIntegerUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetOptionalArrayIntegerUnixMinusMicro(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusMicro = val
}

// SetOptionalArrayIntegerUnixMinusMilli sets the value of OptionalArrayIntegerUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetOptionalArrayIntegerUnixMinusMilli(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusMilli = val
}

// SetOptionalArrayIntegerUnixMinusNano sets the value of OptionalArrayIntegerUnixMinusNano.
func (s *TestResponseFormatTestOK) SetOptionalArrayIntegerUnixMinusNano(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusNano = val
}

// SetOptionalArrayIntegerUnixMinusSeconds sets the value of OptionalArrayIntegerUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetOptionalArrayIntegerUnixMinusSeconds(val []time.Time) {
	s.OptionalArrayIntegerUnixMinusSeconds = val
}

// SetOptionalArrayNull sets the value of OptionalArrayNull.
func (s *TestResponseFormatTestOK) SetOptionalArrayNull(val []struct{}) {
	s.OptionalArrayNull = val
}

// SetOptionalArrayNumber sets the value of OptionalArrayNumber.
func (s *TestResponseFormatTestOK) SetOptionalArrayNumber(val []float64) {
	s.OptionalArrayNumber = val
}

// SetOptionalArrayNumberDouble sets the value of OptionalArrayNumberDouble.
func (s *TestResponseFormatTestOK) SetOptionalArrayNumberDouble(val []float64) {
	s.OptionalArrayNumberDouble = val
}

// SetOptionalArrayNumberFloat sets the value of OptionalArrayNumberFloat.
func (s *TestResponseFormatTestOK) SetOptionalArrayNumberFloat(val []float32) {
	s.OptionalArrayNumberFloat = val
}

// SetOptionalArrayNumberInt32 sets the value of OptionalArrayNumberInt32.
func (s *TestResponseFormatTestOK) SetOptionalArrayNumberInt32(val []int32) {
	s.OptionalArrayNumberInt32 = val
}

// SetOptionalArrayNumberInt64 sets the value of OptionalArrayNumberInt64.
func (s *TestResponseFormatTestOK) SetOptionalArrayNumberInt64(val []int64) {
	s.OptionalArrayNumberInt64 = val
}

// SetOptionalArrayString sets the value of OptionalArrayString.
func (s *TestResponseFormatTestOK) SetOptionalArrayString(val []string) {
	s.OptionalArrayString = val
}

// SetOptionalArrayStringBinary sets the value of OptionalArrayStringBinary.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringBinary(val []string) {
	s.OptionalArrayStringBinary = val
}

// SetOptionalArrayStringByte sets the value of OptionalArrayStringByte.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringByte(val [][]byte) {
	s.OptionalArrayStringByte = val
}

// SetOptionalArrayStringDate sets the value of OptionalArrayStringDate.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringDate(val []time.Time) {
	s.OptionalArrayStringDate = val
}

// SetOptionalArrayStringDateMinusTime sets the value of OptionalArrayStringDateMinusTime.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringDateMinusTime(val []time.Time) {
	s.OptionalArrayStringDateMinusTime = val
}

// SetOptionalArrayStringDuration sets the value of OptionalArrayStringDuration.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringDuration(val []time.Duration) {
	s.OptionalArrayStringDuration = val
}

// SetOptionalArrayStringEmail sets the value of OptionalArrayStringEmail.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringEmail(val []string) {
	s.OptionalArrayStringEmail = val
}

// SetOptionalArrayStringHostname sets the value of OptionalArrayStringHostname.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringHostname(val []string) {
	s.OptionalArrayStringHostname = val
}

// SetOptionalArrayStringInt32 sets the value of OptionalArrayStringInt32.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringInt32(val []int32) {
	s.OptionalArrayStringInt32 = val
}

// SetOptionalArrayStringInt64 sets the value of OptionalArrayStringInt64.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringInt64(val []int64) {
	s.OptionalArrayStringInt64 = val
}

// SetOptionalArrayStringIP sets the value of OptionalArrayStringIP.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringIP(val []netip.Addr) {
	s.OptionalArrayStringIP = val
}

// SetOptionalArrayStringIpv4 sets the value of OptionalArrayStringIpv4.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringIpv4(val []netip.Addr) {
	s.OptionalArrayStringIpv4 = val
}

// SetOptionalArrayStringIpv6 sets the value of OptionalArrayStringIpv6.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringIpv6(val []netip.Addr) {
	s.OptionalArrayStringIpv6 = val
}

// SetOptionalArrayStringPassword sets the value of OptionalArrayStringPassword.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringPassword(val []string) {
	s.OptionalArrayStringPassword = val
}

// SetOptionalArrayStringTime sets the value of OptionalArrayStringTime.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringTime(val []time.Time) {
	s.OptionalArrayStringTime = val
}

// SetOptionalArrayStringUnix sets the value of OptionalArrayStringUnix.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringUnix(val []time.Time) {
	s.OptionalArrayStringUnix = val
}

// SetOptionalArrayStringUnixMinusMicro sets the value of OptionalArrayStringUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringUnixMinusMicro(val []time.Time) {
	s.OptionalArrayStringUnixMinusMicro = val
}

// SetOptionalArrayStringUnixMinusMilli sets the value of OptionalArrayStringUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringUnixMinusMilli(val []time.Time) {
	s.OptionalArrayStringUnixMinusMilli = val
}

// SetOptionalArrayStringUnixMinusNano sets the value of OptionalArrayStringUnixMinusNano.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringUnixMinusNano(val []time.Time) {
	s.OptionalArrayStringUnixMinusNano = val
}

// SetOptionalArrayStringUnixMinusSeconds sets the value of OptionalArrayStringUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringUnixMinusSeconds(val []time.Time) {
	s.OptionalArrayStringUnixMinusSeconds = val
}

// SetOptionalArrayStringURI sets the value of OptionalArrayStringURI.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringURI(val []url.URL) {
	s.OptionalArrayStringURI = val
}

// SetOptionalArrayStringUUID sets the value of OptionalArrayStringUUID.
func (s *TestResponseFormatTestOK) SetOptionalArrayStringUUID(val []uuid.UUID) {
	s.OptionalArrayStringUUID = val
}

// SetOptionalBoolean sets the value of OptionalBoolean.
func (s *TestResponseFormatTestOK) SetOptionalBoolean(val OptBool) {
	s.OptionalBoolean = val
}

// SetOptionalDoubleArrayAny sets the value of OptionalDoubleArrayAny.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayAny(val [][]jx.Raw) {
	s.OptionalDoubleArrayAny = val
}

// SetOptionalDoubleArrayBoolean sets the value of OptionalDoubleArrayBoolean.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayBoolean(val [][]bool) {
	s.OptionalDoubleArrayBoolean = val
}

// SetOptionalDoubleArrayInteger sets the value of OptionalDoubleArrayInteger.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayInteger(val [][]int) {
	s.OptionalDoubleArrayInteger = val
}

// SetOptionalDoubleArrayIntegerInt32 sets the value of OptionalDoubleArrayIntegerInt32.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayIntegerInt32(val [][]int32) {
	s.OptionalDoubleArrayIntegerInt32 = val
}

// SetOptionalDoubleArrayIntegerInt64 sets the value of OptionalDoubleArrayIntegerInt64.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayIntegerInt64(val [][]int64) {
	s.OptionalDoubleArrayIntegerInt64 = val
}

// SetOptionalDoubleArrayIntegerUint sets the value of OptionalDoubleArrayIntegerUint.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayIntegerUint(val [][]uint) {
	s.OptionalDoubleArrayIntegerUint = val
}

// SetOptionalDoubleArrayIntegerUint32 sets the value of OptionalDoubleArrayIntegerUint32.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayIntegerUint32(val [][]uint32) {
	s.OptionalDoubleArrayIntegerUint32 = val
}

// SetOptionalDoubleArrayIntegerUint64 sets the value of OptionalDoubleArrayIntegerUint64.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayIntegerUint64(val [][]uint64) {
	s.OptionalDoubleArrayIntegerUint64 = val
}

// SetOptionalDoubleArrayIntegerUnix sets the value of OptionalDoubleArrayIntegerUnix.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayIntegerUnix(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnix = val
}

// SetOptionalDoubleArrayIntegerUnixMinusMicro sets the value of OptionalDoubleArrayIntegerUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayIntegerUnixMinusMicro(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusMicro = val
}

// SetOptionalDoubleArrayIntegerUnixMinusMilli sets the value of OptionalDoubleArrayIntegerUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayIntegerUnixMinusMilli(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusMilli = val
}

// SetOptionalDoubleArrayIntegerUnixMinusNano sets the value of OptionalDoubleArrayIntegerUnixMinusNano.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayIntegerUnixMinusNano(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusNano = val
}

// SetOptionalDoubleArrayIntegerUnixMinusSeconds sets the value of OptionalDoubleArrayIntegerUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayIntegerUnixMinusSeconds(val [][]time.Time) {
	s.OptionalDoubleArrayIntegerUnixMinusSeconds = val
}

// SetOptionalDoubleArrayNull sets the value of OptionalDoubleArrayNull.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayNull(val [][]struct{}) {
	s.OptionalDoubleArrayNull = val
}

// SetOptionalDoubleArrayNumber sets the value of OptionalDoubleArrayNumber.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayNumber(val [][]float64) {
	s.OptionalDoubleArrayNumber = val
}

// SetOptionalDoubleArrayNumberDouble sets the value of OptionalDoubleArrayNumberDouble.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayNumberDouble(val [][]float64) {
	s.OptionalDoubleArrayNumberDouble = val
}

// SetOptionalDoubleArrayNumberFloat sets the value of OptionalDoubleArrayNumberFloat.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayNumberFloat(val [][]float32) {
	s.OptionalDoubleArrayNumberFloat = val
}

// SetOptionalDoubleArrayNumberInt32 sets the value of OptionalDoubleArrayNumberInt32.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayNumberInt32(val [][]int32) {
	s.OptionalDoubleArrayNumberInt32 = val
}

// SetOptionalDoubleArrayNumberInt64 sets the value of OptionalDoubleArrayNumberInt64.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayNumberInt64(val [][]int64) {
	s.OptionalDoubleArrayNumberInt64 = val
}

// SetOptionalDoubleArrayString sets the value of OptionalDoubleArrayString.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayString(val [][]string) {
	s.OptionalDoubleArrayString = val
}

// SetOptionalDoubleArrayStringBinary sets the value of OptionalDoubleArrayStringBinary.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringBinary(val [][]string) {
	s.OptionalDoubleArrayStringBinary = val
}

// SetOptionalDoubleArrayStringByte sets the value of OptionalDoubleArrayStringByte.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringByte(val [][][]byte) {
	s.OptionalDoubleArrayStringByte = val
}

// SetOptionalDoubleArrayStringDate sets the value of OptionalDoubleArrayStringDate.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringDate(val [][]time.Time) {
	s.OptionalDoubleArrayStringDate = val
}

// SetOptionalDoubleArrayStringDateMinusTime sets the value of OptionalDoubleArrayStringDateMinusTime.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringDateMinusTime(val [][]time.Time) {
	s.OptionalDoubleArrayStringDateMinusTime = val
}

// SetOptionalDoubleArrayStringDuration sets the value of OptionalDoubleArrayStringDuration.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringDuration(val [][]time.Duration) {
	s.OptionalDoubleArrayStringDuration = val
}

// SetOptionalDoubleArrayStringEmail sets the value of OptionalDoubleArrayStringEmail.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringEmail(val [][]string) {
	s.OptionalDoubleArrayStringEmail = val
}

// SetOptionalDoubleArrayStringHostname sets the value of OptionalDoubleArrayStringHostname.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringHostname(val [][]string) {
	s.OptionalDoubleArrayStringHostname = val
}

// SetOptionalDoubleArrayStringInt32 sets the value of OptionalDoubleArrayStringInt32.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringInt32(val [][]int32) {
	s.OptionalDoubleArrayStringInt32 = val
}

// SetOptionalDoubleArrayStringInt64 sets the value of OptionalDoubleArrayStringInt64.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringInt64(val [][]int64) {
	s.OptionalDoubleArrayStringInt64 = val
}

// SetOptionalDoubleArrayStringIP sets the value of OptionalDoubleArrayStringIP.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringIP(val [][]netip.Addr) {
	s.OptionalDoubleArrayStringIP = val
}

// SetOptionalDoubleArrayStringIpv4 sets the value of OptionalDoubleArrayStringIpv4.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringIpv4(val [][]netip.Addr) {
	s.OptionalDoubleArrayStringIpv4 = val
}

// SetOptionalDoubleArrayStringIpv6 sets the value of OptionalDoubleArrayStringIpv6.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringIpv6(val [][]netip.Addr) {
	s.OptionalDoubleArrayStringIpv6 = val
}

// SetOptionalDoubleArrayStringPassword sets the value of OptionalDoubleArrayStringPassword.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringPassword(val [][]string) {
	s.OptionalDoubleArrayStringPassword = val
}

// SetOptionalDoubleArrayStringTime sets the value of OptionalDoubleArrayStringTime.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringTime(val [][]time.Time) {
	s.OptionalDoubleArrayStringTime = val
}

// SetOptionalDoubleArrayStringUnix sets the value of OptionalDoubleArrayStringUnix.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringUnix(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnix = val
}

// SetOptionalDoubleArrayStringUnixMinusMicro sets the value of OptionalDoubleArrayStringUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringUnixMinusMicro(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusMicro = val
}

// SetOptionalDoubleArrayStringUnixMinusMilli sets the value of OptionalDoubleArrayStringUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringUnixMinusMilli(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusMilli = val
}

// SetOptionalDoubleArrayStringUnixMinusNano sets the value of OptionalDoubleArrayStringUnixMinusNano.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringUnixMinusNano(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusNano = val
}

// SetOptionalDoubleArrayStringUnixMinusSeconds sets the value of OptionalDoubleArrayStringUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringUnixMinusSeconds(val [][]time.Time) {
	s.OptionalDoubleArrayStringUnixMinusSeconds = val
}

// SetOptionalDoubleArrayStringURI sets the value of OptionalDoubleArrayStringURI.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringURI(val [][]url.URL) {
	s.OptionalDoubleArrayStringURI = val
}

// SetOptionalDoubleArrayStringUUID sets the value of OptionalDoubleArrayStringUUID.
func (s *TestResponseFormatTestOK) SetOptionalDoubleArrayStringUUID(val [][]uuid.UUID) {
	s.OptionalDoubleArrayStringUUID = val
}

// SetOptionalInteger sets the value of OptionalInteger.
func (s *TestResponseFormatTestOK) SetOptionalInteger(val OptInt) {
	s.OptionalInteger = val
}

// SetOptionalIntegerInt32 sets the value of OptionalIntegerInt32.
func (s *TestResponseFormatTestOK) SetOptionalIntegerInt32(val OptInt32) {
	s.OptionalIntegerInt32 = val
}

// SetOptionalIntegerInt64 sets the value of OptionalIntegerInt64.
func (s *TestResponseFormatTestOK) SetOptionalIntegerInt64(val OptInt64) {
	s.OptionalIntegerInt64 = val
}

// SetOptionalIntegerUint sets the value of OptionalIntegerUint.
func (s *TestResponseFormatTestOK) SetOptionalIntegerUint(val OptUint) {
	s.OptionalIntegerUint = val
}

// SetOptionalIntegerUint32 sets the value of OptionalIntegerUint32.
func (s *TestResponseFormatTestOK) SetOptionalIntegerUint32(val OptUint32) {
	s.OptionalIntegerUint32 = val
}

// SetOptionalIntegerUint64 sets the value of OptionalIntegerUint64.
func (s *TestResponseFormatTestOK) SetOptionalIntegerUint64(val OptUint64) {
	s.OptionalIntegerUint64 = val
}

// SetOptionalIntegerUnix sets the value of OptionalIntegerUnix.
func (s *TestResponseFormatTestOK) SetOptionalIntegerUnix(val OptUnixSeconds) {
	s.OptionalIntegerUnix = val
}

// SetOptionalIntegerUnixMinusMicro sets the value of OptionalIntegerUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetOptionalIntegerUnixMinusMicro(val OptUnixMicro) {
	s.OptionalIntegerUnixMinusMicro = val
}

// SetOptionalIntegerUnixMinusMilli sets the value of OptionalIntegerUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetOptionalIntegerUnixMinusMilli(val OptUnixMilli) {
	s.OptionalIntegerUnixMinusMilli = val
}

// SetOptionalIntegerUnixMinusNano sets the value of OptionalIntegerUnixMinusNano.
func (s *TestResponseFormatTestOK) SetOptionalIntegerUnixMinusNano(val OptUnixNano) {
	s.OptionalIntegerUnixMinusNano = val
}

// SetOptionalIntegerUnixMinusSeconds sets the value of OptionalIntegerUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetOptionalIntegerUnixMinusSeconds(val OptUnixSeconds) {
	s.OptionalIntegerUnixMinusSeconds = val
}

// SetOptionalNull sets the value of OptionalNull.
func (s *TestResponseFormatTestOK) SetOptionalNull(val OptNull) {
	s.OptionalNull = val
}

// SetOptionalNumber sets the value of OptionalNumber.
func (s *TestResponseFormatTestOK) SetOptionalNumber(val OptFloat64) {
	s.OptionalNumber = val
}

// SetOptionalNumberDouble sets the value of OptionalNumberDouble.
func (s *TestResponseFormatTestOK) SetOptionalNumberDouble(val OptFloat64) {
	s.OptionalNumberDouble = val
}

// SetOptionalNumberFloat sets the value of OptionalNumberFloat.
func (s *TestResponseFormatTestOK) SetOptionalNumberFloat(val OptFloat32) {
	s.OptionalNumberFloat = val
}

// SetOptionalNumberInt32 sets the value of OptionalNumberInt32.
func (s *TestResponseFormatTestOK) SetOptionalNumberInt32(val OptInt32) {
	s.OptionalNumberInt32 = val
}

// SetOptionalNumberInt64 sets the value of OptionalNumberInt64.
func (s *TestResponseFormatTestOK) SetOptionalNumberInt64(val OptInt64) {
	s.OptionalNumberInt64 = val
}

// SetOptionalString sets the value of OptionalString.
func (s *TestResponseFormatTestOK) SetOptionalString(val OptString) {
	s.OptionalString = val
}

// SetOptionalStringBinary sets the value of OptionalStringBinary.
func (s *TestResponseFormatTestOK) SetOptionalStringBinary(val OptString) {
	s.OptionalStringBinary = val
}

// SetOptionalStringByte sets the value of OptionalStringByte.
func (s *TestResponseFormatTestOK) SetOptionalStringByte(val []byte) {
	s.OptionalStringByte = val
}

// SetOptionalStringDate sets the value of OptionalStringDate.
func (s *TestResponseFormatTestOK) SetOptionalStringDate(val OptDate) {
	s.OptionalStringDate = val
}

// SetOptionalStringDateMinusTime sets the value of OptionalStringDateMinusTime.
func (s *TestResponseFormatTestOK) SetOptionalStringDateMinusTime(val OptDateTime) {
	s.OptionalStringDateMinusTime = val
}

// SetOptionalStringDuration sets the value of OptionalStringDuration.
func (s *TestResponseFormatTestOK) SetOptionalStringDuration(val OptDuration) {
	s.OptionalStringDuration = val
}

// SetOptionalStringEmail sets the value of OptionalStringEmail.
func (s *TestResponseFormatTestOK) SetOptionalStringEmail(val OptString) {
	s.OptionalStringEmail = val
}

// SetOptionalStringHostname sets the value of OptionalStringHostname.
func (s *TestResponseFormatTestOK) SetOptionalStringHostname(val OptString) {
	s.OptionalStringHostname = val
}

// SetOptionalStringInt32 sets the value of OptionalStringInt32.
func (s *TestResponseFormatTestOK) SetOptionalStringInt32(val OptStringInt32) {
	s.OptionalStringInt32 = val
}

// SetOptionalStringInt64 sets the value of OptionalStringInt64.
func (s *TestResponseFormatTestOK) SetOptionalStringInt64(val OptStringInt64) {
	s.OptionalStringInt64 = val
}

// SetOptionalStringIP sets the value of OptionalStringIP.
func (s *TestResponseFormatTestOK) SetOptionalStringIP(val OptIP) {
	s.OptionalStringIP = val
}

// SetOptionalStringIpv4 sets the value of OptionalStringIpv4.
func (s *TestResponseFormatTestOK) SetOptionalStringIpv4(val OptIPv4) {
	s.OptionalStringIpv4 = val
}

// SetOptionalStringIpv6 sets the value of OptionalStringIpv6.
func (s *TestResponseFormatTestOK) SetOptionalStringIpv6(val OptIPv6) {
	s.OptionalStringIpv6 = val
}

// SetOptionalStringPassword sets the value of OptionalStringPassword.
func (s *TestResponseFormatTestOK) SetOptionalStringPassword(val OptString) {
	s.OptionalStringPassword = val
}

// SetOptionalStringTime sets the value of OptionalStringTime.
func (s *TestResponseFormatTestOK) SetOptionalStringTime(val OptTime) {
	s.OptionalStringTime = val
}

// SetOptionalStringUnix sets the value of OptionalStringUnix.
func (s *TestResponseFormatTestOK) SetOptionalStringUnix(val OptStringUnixSeconds) {
	s.OptionalStringUnix = val
}

// SetOptionalStringUnixMinusMicro sets the value of OptionalStringUnixMinusMicro.
func (s *TestResponseFormatTestOK) SetOptionalStringUnixMinusMicro(val OptStringUnixMicro) {
	s.OptionalStringUnixMinusMicro = val
}

// SetOptionalStringUnixMinusMilli sets the value of OptionalStringUnixMinusMilli.
func (s *TestResponseFormatTestOK) SetOptionalStringUnixMinusMilli(val OptStringUnixMilli) {
	s.OptionalStringUnixMinusMilli = val
}

// SetOptionalStringUnixMinusNano sets the value of OptionalStringUnixMinusNano.
func (s *TestResponseFormatTestOK) SetOptionalStringUnixMinusNano(val OptStringUnixNano) {
	s.OptionalStringUnixMinusNano = val
}

// SetOptionalStringUnixMinusSeconds sets the value of OptionalStringUnixMinusSeconds.
func (s *TestResponseFormatTestOK) SetOptionalStringUnixMinusSeconds(val OptStringUnixSeconds) {
	s.OptionalStringUnixMinusSeconds = val
}

// SetOptionalStringURI sets the value of OptionalStringURI.
func (s *TestResponseFormatTestOK) SetOptionalStringURI(val OptURI) {
	s.OptionalStringURI = val
}

// SetOptionalStringUUID sets the value of OptionalStringUUID.
func (s *TestResponseFormatTestOK) SetOptionalStringUUID(val OptUUID) {
	s.OptionalStringUUID = val
}
