// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"time"
)

// SetFake set fake values.
func (s *GetServiceAccountIssuerOpenIDConfigurationOKApplicationJSON) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = GetServiceAccountIssuerOpenIDConfigurationOKApplicationJSON(unwrapped)
}

// SetFake set fake values.
func (s *IoK8sAPIAdmissionregistrationV1MutatingWebhook) SetFake() {
	{
		{
			s.AdmissionReviewVersions = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AdmissionReviewVersions = append(s.AdmissionReviewVersions, elem)
			}
		}
	}
	{
		{
			s.ClientConfig.SetFake()
		}
	}
	{
		{
			s.FailurePolicy.SetFake()
		}
	}
	{
		{
			s.MatchPolicy.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.NamespaceSelector.SetFake()
		}
	}
	{
		{
			s.ObjectSelector.SetFake()
		}
	}
	{
		{
			s.ReinvocationPolicy.SetFake()
		}
	}
	{
		{
			s.Rules = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAdmissionregistrationV1RuleWithOperations
				{
					elem.SetFake()
				}
				s.Rules = append(s.Rules, elem)
			}
		}
	}
	{
		{
			s.SideEffects = "string"
		}
	}
	{
		{
			s.TimeoutSeconds.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAdmissionregistrationV1MutatingWebhookConfiguration) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Webhooks = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAdmissionregistrationV1MutatingWebhook
				{
					elem.SetFake()
				}
				s.Webhooks = append(s.Webhooks, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAdmissionregistrationV1MutatingWebhookConfigurationList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAdmissionregistrationV1MutatingWebhookConfiguration
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAdmissionregistrationV1RuleWithOperations) SetFake() {
	{
		{
			s.ApiGroups = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ApiGroups = append(s.ApiGroups, elem)
			}
		}
	}
	{
		{
			s.ApiVersions = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ApiVersions = append(s.ApiVersions, elem)
			}
		}
	}
	{
		{
			s.Operations = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Operations = append(s.Operations, elem)
			}
		}
	}
	{
		{
			s.Resources = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Resources = append(s.Resources, elem)
			}
		}
	}
	{
		{
			s.Scope.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAdmissionregistrationV1ServiceReference) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Namespace = "string"
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAdmissionregistrationV1ValidatingWebhook) SetFake() {
	{
		{
			s.AdmissionReviewVersions = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AdmissionReviewVersions = append(s.AdmissionReviewVersions, elem)
			}
		}
	}
	{
		{
			s.ClientConfig.SetFake()
		}
	}
	{
		{
			s.FailurePolicy.SetFake()
		}
	}
	{
		{
			s.MatchPolicy.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.NamespaceSelector.SetFake()
		}
	}
	{
		{
			s.ObjectSelector.SetFake()
		}
	}
	{
		{
			s.Rules = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAdmissionregistrationV1RuleWithOperations
				{
					elem.SetFake()
				}
				s.Rules = append(s.Rules, elem)
			}
		}
	}
	{
		{
			s.SideEffects = "string"
		}
	}
	{
		{
			s.TimeoutSeconds.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAdmissionregistrationV1ValidatingWebhookConfiguration) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Webhooks = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAdmissionregistrationV1ValidatingWebhook
				{
					elem.SetFake()
				}
				s.Webhooks = append(s.Webhooks, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAdmissionregistrationV1ValidatingWebhookConfigurationList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAdmissionregistrationV1ValidatingWebhookConfiguration
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAdmissionregistrationV1WebhookClientConfig) SetFake() {
	{
		{
			s.CaBundle = []byte("[]byte")
		}
	}
	{
		{
			s.Service.SetFake()
		}
	}
	{
		{
			s.URL.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIApiserverinternalV1alpha1ServerStorageVersion) SetFake() {
	{
		{
			s.ApiServerID.SetFake()
		}
	}
	{
		{
			s.DecodableVersions = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.DecodableVersions = append(s.DecodableVersions, elem)
			}
		}
	}
	{
		{
			s.EncodingVersion.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIApiserverinternalV1alpha1StorageVersion) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIApiserverinternalV1alpha1StorageVersionCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
	{
		{
			s.Reason = "string"
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIApiserverinternalV1alpha1StorageVersionList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIApiserverinternalV1alpha1StorageVersion
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIApiserverinternalV1alpha1StorageVersionSpec) SetFake() {
}

// SetFake set fake values.
func (s *IoK8sAPIApiserverinternalV1alpha1StorageVersionStatus) SetFake() {
	{
		{
			s.CommonEncodingVersion.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIApiserverinternalV1alpha1StorageVersionCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.StorageVersions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIApiserverinternalV1alpha1ServerStorageVersion
				{
					elem.SetFake()
				}
				s.StorageVersions = append(s.StorageVersions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1ControllerRevision) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.Data = nil
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Revision = int64(0)
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1ControllerRevisionList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAppsV1ControllerRevision
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1DaemonSet) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1DaemonSetCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1DaemonSetList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAppsV1DaemonSet
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1DaemonSetSpec) SetFake() {
	{
		{
			s.MinReadySeconds.SetFake()
		}
	}
	{
		{
			s.RevisionHistoryLimit.SetFake()
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
	{
		{
			s.Template.SetFake()
		}
	}
	{
		{
			s.UpdateStrategy.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1DaemonSetStatus) SetFake() {
	{
		{
			s.CollisionCount.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAppsV1DaemonSetCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.CurrentNumberScheduled = int32(0)
		}
	}
	{
		{
			s.DesiredNumberScheduled = int32(0)
		}
	}
	{
		{
			s.NumberAvailable.SetFake()
		}
	}
	{
		{
			s.NumberMisscheduled = int32(0)
		}
	}
	{
		{
			s.NumberReady = int32(0)
		}
	}
	{
		{
			s.NumberUnavailable.SetFake()
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
	{
		{
			s.UpdatedNumberScheduled.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1DaemonSetUpdateStrategy) SetFake() {
	{
		{
			s.RollingUpdate.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1Deployment) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1DeploymentCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.LastUpdateTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1DeploymentList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAppsV1Deployment
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1DeploymentSpec) SetFake() {
	{
		{
			s.MinReadySeconds.SetFake()
		}
	}
	{
		{
			s.Paused.SetFake()
		}
	}
	{
		{
			s.ProgressDeadlineSeconds.SetFake()
		}
	}
	{
		{
			s.Replicas.SetFake()
		}
	}
	{
		{
			s.RevisionHistoryLimit.SetFake()
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
	{
		{
			s.Strategy.SetFake()
		}
	}
	{
		{
			s.Template.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1DeploymentStatus) SetFake() {
	{
		{
			s.AvailableReplicas.SetFake()
		}
	}
	{
		{
			s.CollisionCount.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAppsV1DeploymentCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
	{
		{
			s.ReadyReplicas.SetFake()
		}
	}
	{
		{
			s.Replicas.SetFake()
		}
	}
	{
		{
			s.UnavailableReplicas.SetFake()
		}
	}
	{
		{
			s.UpdatedReplicas.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1DeploymentStrategy) SetFake() {
	{
		{
			s.RollingUpdate.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1ReplicaSet) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1ReplicaSetCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1ReplicaSetList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAppsV1ReplicaSet
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1ReplicaSetSpec) SetFake() {
	{
		{
			s.MinReadySeconds.SetFake()
		}
	}
	{
		{
			s.Replicas.SetFake()
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
	{
		{
			s.Template.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1ReplicaSetStatus) SetFake() {
	{
		{
			s.AvailableReplicas.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAppsV1ReplicaSetCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.FullyLabeledReplicas.SetFake()
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
	{
		{
			s.ReadyReplicas.SetFake()
		}
	}
	{
		{
			s.Replicas = int32(0)
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1RollingUpdateDaemonSet) SetFake() {
	{
		{
			s.MaxSurge.SetFake()
		}
	}
	{
		{
			s.MaxUnavailable.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1RollingUpdateDeployment) SetFake() {
	{
		{
			s.MaxSurge.SetFake()
		}
	}
	{
		{
			s.MaxUnavailable.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1RollingUpdateStatefulSetStrategy) SetFake() {
	{
		{
			s.Partition.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1StatefulSet) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1StatefulSetCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1StatefulSetList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAppsV1StatefulSet
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1StatefulSetSpec) SetFake() {
	{
		{
			s.MinReadySeconds.SetFake()
		}
	}
	{
		{
			s.PodManagementPolicy.SetFake()
		}
	}
	{
		{
			s.Replicas.SetFake()
		}
	}
	{
		{
			s.RevisionHistoryLimit.SetFake()
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
	{
		{
			s.ServiceName = "string"
		}
	}
	{
		{
			s.Template.SetFake()
		}
	}
	{
		{
			s.UpdateStrategy.SetFake()
		}
	}
	{
		{
			s.VolumeClaimTemplates = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PersistentVolumeClaim
				{
					elem.SetFake()
				}
				s.VolumeClaimTemplates = append(s.VolumeClaimTemplates, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1StatefulSetStatus) SetFake() {
	{
		{
			s.AvailableReplicas = int32(0)
		}
	}
	{
		{
			s.CollisionCount.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAppsV1StatefulSetCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.CurrentReplicas.SetFake()
		}
	}
	{
		{
			s.CurrentRevision.SetFake()
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
	{
		{
			s.ReadyReplicas.SetFake()
		}
	}
	{
		{
			s.Replicas = int32(0)
		}
	}
	{
		{
			s.UpdateRevision.SetFake()
		}
	}
	{
		{
			s.UpdatedReplicas.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAppsV1StatefulSetUpdateStrategy) SetFake() {
	{
		{
			s.RollingUpdate.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV1CrossVersionObjectReference) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV1HorizontalPodAutoscaler) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV1HorizontalPodAutoscalerList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAutoscalingV1HorizontalPodAutoscaler
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV1HorizontalPodAutoscalerSpec) SetFake() {
	{
		{
			s.MaxReplicas = int32(0)
		}
	}
	{
		{
			s.MinReplicas.SetFake()
		}
	}
	{
		{
			s.ScaleTargetRef.SetFake()
		}
	}
	{
		{
			s.TargetCPUUtilizationPercentage.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV1HorizontalPodAutoscalerStatus) SetFake() {
	{
		{
			s.CurrentCPUUtilizationPercentage.SetFake()
		}
	}
	{
		{
			s.CurrentReplicas = int32(0)
		}
	}
	{
		{
			s.DesiredReplicas = int32(0)
		}
	}
	{
		{
			s.LastScaleTime.SetFake()
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV1Scale) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV1ScaleSpec) SetFake() {
	{
		{
			s.Replicas.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV1ScaleStatus) SetFake() {
	{
		{
			s.Replicas = int32(0)
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1ContainerResourceMetricSource) SetFake() {
	{
		{
			s.Container = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.TargetAverageUtilization.SetFake()
		}
	}
	{
		{
			s.TargetAverageValue.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1ContainerResourceMetricStatus) SetFake() {
	{
		{
			s.Container = "string"
		}
	}
	{
		{
			s.CurrentAverageUtilization.SetFake()
		}
	}
	{
		{
			s.CurrentAverageValue.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1CrossVersionObjectReference) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1ExternalMetricSource) SetFake() {
	{
		{
			s.MetricName = "string"
		}
	}
	{
		{
			s.MetricSelector.SetFake()
		}
	}
	{
		{
			s.TargetAverageValue.SetFake()
		}
	}
	{
		{
			s.TargetValue.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1ExternalMetricStatus) SetFake() {
	{
		{
			s.CurrentAverageValue.SetFake()
		}
	}
	{
		{
			s.CurrentValue.SetFake()
		}
	}
	{
		{
			s.MetricName = "string"
		}
	}
	{
		{
			s.MetricSelector.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscaler) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscalerCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscalerList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscaler
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscalerSpec) SetFake() {
	{
		{
			s.MaxReplicas = int32(0)
		}
	}
	{
		{
			s.Metrics = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAutoscalingV2beta1MetricSpec
				{
					elem.SetFake()
				}
				s.Metrics = append(s.Metrics, elem)
			}
		}
	}
	{
		{
			s.MinReplicas.SetFake()
		}
	}
	{
		{
			s.ScaleTargetRef.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscalerStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscalerCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.CurrentMetrics = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAutoscalingV2beta1MetricStatus
				{
					elem.SetFake()
				}
				s.CurrentMetrics = append(s.CurrentMetrics, elem)
			}
		}
	}
	{
		{
			s.CurrentReplicas = int32(0)
		}
	}
	{
		{
			s.DesiredReplicas = int32(0)
		}
	}
	{
		{
			s.LastScaleTime.SetFake()
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1MetricSpec) SetFake() {
	{
		{
			s.ContainerResource.SetFake()
		}
	}
	{
		{
			s.External.SetFake()
		}
	}
	{
		{
			s.Object.SetFake()
		}
	}
	{
		{
			s.Pods.SetFake()
		}
	}
	{
		{
			s.Resource.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1MetricStatus) SetFake() {
	{
		{
			s.ContainerResource.SetFake()
		}
	}
	{
		{
			s.External.SetFake()
		}
	}
	{
		{
			s.Object.SetFake()
		}
	}
	{
		{
			s.Pods.SetFake()
		}
	}
	{
		{
			s.Resource.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1ObjectMetricSource) SetFake() {
	{
		{
			s.AverageValue.SetFake()
		}
	}
	{
		{
			s.MetricName = "string"
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
	{
		{
			s.Target.SetFake()
		}
	}
	{
		{
			s.TargetValue.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1ObjectMetricStatus) SetFake() {
	{
		{
			s.AverageValue.SetFake()
		}
	}
	{
		{
			s.CurrentValue.SetFake()
		}
	}
	{
		{
			s.MetricName = "string"
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
	{
		{
			s.Target.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1PodsMetricSource) SetFake() {
	{
		{
			s.MetricName = "string"
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
	{
		{
			s.TargetAverageValue.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1PodsMetricStatus) SetFake() {
	{
		{
			s.CurrentAverageValue.SetFake()
		}
	}
	{
		{
			s.MetricName = "string"
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1ResourceMetricSource) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.TargetAverageUtilization.SetFake()
		}
	}
	{
		{
			s.TargetAverageValue.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta1ResourceMetricStatus) SetFake() {
	{
		{
			s.CurrentAverageUtilization.SetFake()
		}
	}
	{
		{
			s.CurrentAverageValue.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2ContainerResourceMetricSource) SetFake() {
	{
		{
			s.Container = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Target.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2ContainerResourceMetricStatus) SetFake() {
	{
		{
			s.Container = "string"
		}
	}
	{
		{
			s.Current.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2CrossVersionObjectReference) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2ExternalMetricSource) SetFake() {
	{
		{
			s.Metric.SetFake()
		}
	}
	{
		{
			s.Target.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2ExternalMetricStatus) SetFake() {
	{
		{
			s.Current.SetFake()
		}
	}
	{
		{
			s.Metric.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2HPAScalingPolicy) SetFake() {
	{
		{
			s.PeriodSeconds = int32(0)
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Value = int32(0)
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2HPAScalingRules) SetFake() {
	{
		{
			s.Policies = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAutoscalingV2beta2HPAScalingPolicy
				{
					elem.SetFake()
				}
				s.Policies = append(s.Policies, elem)
			}
		}
	}
	{
		{
			s.SelectPolicy.SetFake()
		}
	}
	{
		{
			s.StabilizationWindowSeconds.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscaler) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerBehavior) SetFake() {
	{
		{
			s.ScaleDown.SetFake()
		}
	}
	{
		{
			s.ScaleUp.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscaler
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerSpec) SetFake() {
	{
		{
			s.Behavior.SetFake()
		}
	}
	{
		{
			s.MaxReplicas = int32(0)
		}
	}
	{
		{
			s.Metrics = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAutoscalingV2beta2MetricSpec
				{
					elem.SetFake()
				}
				s.Metrics = append(s.Metrics, elem)
			}
		}
	}
	{
		{
			s.MinReplicas.SetFake()
		}
	}
	{
		{
			s.ScaleTargetRef.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.CurrentMetrics = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIAutoscalingV2beta2MetricStatus
				{
					elem.SetFake()
				}
				s.CurrentMetrics = append(s.CurrentMetrics, elem)
			}
		}
	}
	{
		{
			s.CurrentReplicas = int32(0)
		}
	}
	{
		{
			s.DesiredReplicas = int32(0)
		}
	}
	{
		{
			s.LastScaleTime.SetFake()
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2MetricIdentifier) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2MetricSpec) SetFake() {
	{
		{
			s.ContainerResource.SetFake()
		}
	}
	{
		{
			s.External.SetFake()
		}
	}
	{
		{
			s.Object.SetFake()
		}
	}
	{
		{
			s.Pods.SetFake()
		}
	}
	{
		{
			s.Resource.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2MetricStatus) SetFake() {
	{
		{
			s.ContainerResource.SetFake()
		}
	}
	{
		{
			s.External.SetFake()
		}
	}
	{
		{
			s.Object.SetFake()
		}
	}
	{
		{
			s.Pods.SetFake()
		}
	}
	{
		{
			s.Resource.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2MetricTarget) SetFake() {
	{
		{
			s.AverageUtilization.SetFake()
		}
	}
	{
		{
			s.AverageValue.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Value.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2MetricValueStatus) SetFake() {
	{
		{
			s.AverageUtilization.SetFake()
		}
	}
	{
		{
			s.AverageValue.SetFake()
		}
	}
	{
		{
			s.Value.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2ObjectMetricSource) SetFake() {
	{
		{
			s.DescribedObject.SetFake()
		}
	}
	{
		{
			s.Metric.SetFake()
		}
	}
	{
		{
			s.Target.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2ObjectMetricStatus) SetFake() {
	{
		{
			s.Current.SetFake()
		}
	}
	{
		{
			s.DescribedObject.SetFake()
		}
	}
	{
		{
			s.Metric.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2PodsMetricSource) SetFake() {
	{
		{
			s.Metric.SetFake()
		}
	}
	{
		{
			s.Target.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2PodsMetricStatus) SetFake() {
	{
		{
			s.Current.SetFake()
		}
	}
	{
		{
			s.Metric.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2ResourceMetricSource) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Target.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIAutoscalingV2beta2ResourceMetricStatus) SetFake() {
	{
		{
			s.Current.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1CronJob) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1CronJobList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIBatchV1CronJob
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1CronJobSpec) SetFake() {
	{
		{
			s.ConcurrencyPolicy.SetFake()
		}
	}
	{
		{
			s.FailedJobsHistoryLimit.SetFake()
		}
	}
	{
		{
			s.JobTemplate.SetFake()
		}
	}
	{
		{
			s.Schedule = "string"
		}
	}
	{
		{
			s.StartingDeadlineSeconds.SetFake()
		}
	}
	{
		{
			s.SuccessfulJobsHistoryLimit.SetFake()
		}
	}
	{
		{
			s.Suspend.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1CronJobStatus) SetFake() {
	{
		{
			s.Active = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ObjectReference
				{
					elem.SetFake()
				}
				s.Active = append(s.Active, elem)
			}
		}
	}
	{
		{
			s.LastScheduleTime.SetFake()
		}
	}
	{
		{
			s.LastSuccessfulTime.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1Job) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1JobCondition) SetFake() {
	{
		{
			s.LastProbeTime.SetFake()
		}
	}
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1JobList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIBatchV1Job
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1JobSpec) SetFake() {
	{
		{
			s.ActiveDeadlineSeconds.SetFake()
		}
	}
	{
		{
			s.BackoffLimit.SetFake()
		}
	}
	{
		{
			s.CompletionMode.SetFake()
		}
	}
	{
		{
			s.Completions.SetFake()
		}
	}
	{
		{
			s.ManualSelector.SetFake()
		}
	}
	{
		{
			s.Parallelism.SetFake()
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
	{
		{
			s.Suspend.SetFake()
		}
	}
	{
		{
			s.Template.SetFake()
		}
	}
	{
		{
			s.TtlSecondsAfterFinished.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1JobStatus) SetFake() {
	{
		{
			s.Active.SetFake()
		}
	}
	{
		{
			s.CompletedIndexes.SetFake()
		}
	}
	{
		{
			s.CompletionTime.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIBatchV1JobCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.Failed.SetFake()
		}
	}
	{
		{
			s.StartTime.SetFake()
		}
	}
	{
		{
			s.Succeeded.SetFake()
		}
	}
	{
		{
			s.UncountedTerminatedPods.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1JobTemplateSpec) SetFake() {
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1UncountedTerminatedPods) SetFake() {
	{
		{
			s.Failed = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Failed = append(s.Failed, elem)
			}
		}
	}
	{
		{
			s.Succeeded = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Succeeded = append(s.Succeeded, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1beta1CronJob) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1beta1CronJobList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIBatchV1beta1CronJob
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1beta1CronJobSpec) SetFake() {
	{
		{
			s.ConcurrencyPolicy.SetFake()
		}
	}
	{
		{
			s.FailedJobsHistoryLimit.SetFake()
		}
	}
	{
		{
			s.JobTemplate.SetFake()
		}
	}
	{
		{
			s.Schedule = "string"
		}
	}
	{
		{
			s.StartingDeadlineSeconds.SetFake()
		}
	}
	{
		{
			s.SuccessfulJobsHistoryLimit.SetFake()
		}
	}
	{
		{
			s.Suspend.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1beta1CronJobStatus) SetFake() {
	{
		{
			s.Active = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ObjectReference
				{
					elem.SetFake()
				}
				s.Active = append(s.Active, elem)
			}
		}
	}
	{
		{
			s.LastScheduleTime.SetFake()
		}
	}
	{
		{
			s.LastSuccessfulTime.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIBatchV1beta1JobTemplateSpec) SetFake() {
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICertificatesV1CertificateSigningRequest) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICertificatesV1CertificateSigningRequestCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.LastUpdateTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICertificatesV1CertificateSigningRequestList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICertificatesV1CertificateSigningRequest
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICertificatesV1CertificateSigningRequestSpec) SetFake() {
	{
		{
			s.ExpirationSeconds.SetFake()
		}
	}
	{
		{
			s.Extra.SetFake()
		}
	}
	{
		{
			s.Groups = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Groups = append(s.Groups, elem)
			}
		}
	}
	{
		{
			s.Request = []byte("[]byte")
		}
	}
	{
		{
			s.SignerName = "string"
		}
	}
	{
		{
			s.UID.SetFake()
		}
	}
	{
		{
			s.Usages = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Usages = append(s.Usages, elem)
			}
		}
	}
	{
		{
			s.Username.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICertificatesV1CertificateSigningRequestSpecExtra) SetFake() {
	var (
		elem []string
		m    map[string][]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICertificatesV1CertificateSigningRequestStatus) SetFake() {
	{
		{
			s.Certificate = []byte("[]byte")
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICertificatesV1CertificateSigningRequestCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoordinationV1Lease) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoordinationV1LeaseList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoordinationV1Lease
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoordinationV1LeaseSpec) SetFake() {
	{
		{
			s.AcquireTime.SetFake()
		}
	}
	{
		{
			s.HolderIdentity.SetFake()
		}
	}
	{
		{
			s.LeaseDurationSeconds.SetFake()
		}
	}
	{
		{
			s.LeaseTransitions.SetFake()
		}
	}
	{
		{
			s.RenewTime.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1AWSElasticBlockStoreVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.Partition.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.VolumeID = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Affinity) SetFake() {
	{
		{
			s.NodeAffinity.SetFake()
		}
	}
	{
		{
			s.PodAffinity.SetFake()
		}
	}
	{
		{
			s.PodAntiAffinity.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1AttachedVolume) SetFake() {
	{
		{
			s.DevicePath = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1AzureDiskVolumeSource) SetFake() {
	{
		{
			s.CachingMode.SetFake()
		}
	}
	{
		{
			s.DiskName = "string"
		}
	}
	{
		{
			s.DiskURI = "string"
		}
	}
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1AzureFilePersistentVolumeSource) SetFake() {
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretName = "string"
		}
	}
	{
		{
			s.SecretNamespace.SetFake()
		}
	}
	{
		{
			s.ShareName = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1AzureFileVolumeSource) SetFake() {
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretName = "string"
		}
	}
	{
		{
			s.ShareName = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1CSIPersistentVolumeSource) SetFake() {
	{
		{
			s.ControllerExpandSecretRef.SetFake()
		}
	}
	{
		{
			s.ControllerPublishSecretRef.SetFake()
		}
	}
	{
		{
			s.Driver = "string"
		}
	}
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.NodePublishSecretRef.SetFake()
		}
	}
	{
		{
			s.NodeStageSecretRef.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.VolumeAttributes.SetFake()
		}
	}
	{
		{
			s.VolumeHandle = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1CSIPersistentVolumeSourceVolumeAttributes) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1CSIVolumeSource) SetFake() {
	{
		{
			s.Driver = "string"
		}
	}
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.NodePublishSecretRef.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.VolumeAttributes.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1CSIVolumeSourceVolumeAttributes) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Capabilities) SetFake() {
	{
		{
			s.Add = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Add = append(s.Add, elem)
			}
		}
	}
	{
		{
			s.Drop = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Drop = append(s.Drop, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1CephFSPersistentVolumeSource) SetFake() {
	{
		{
			s.Monitors = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Monitors = append(s.Monitors, elem)
			}
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretFile.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1CephFSVolumeSource) SetFake() {
	{
		{
			s.Monitors = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Monitors = append(s.Monitors, elem)
			}
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretFile.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1CinderPersistentVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.VolumeID = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1CinderVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.VolumeID = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ClientIPConfig) SetFake() {
	{
		{
			s.TimeoutSeconds.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ComponentCondition) SetFake() {
	{
		{
			s.Error.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ComponentStatus) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ComponentCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ComponentStatusList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ComponentStatus
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ConfigMap) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.BinaryData.SetFake()
		}
	}
	{
		{
			s.Data.SetFake()
		}
	}
	{
		{
			s.Immutable.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ConfigMapBinaryData) SetFake() {
	var (
		elem []byte
		m    map[string][]byte = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ConfigMapData) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ConfigMapEnvSource) SetFake() {
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Optional.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ConfigMapKeySelector) SetFake() {
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Optional.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ConfigMapList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ConfigMap
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ConfigMapNodeConfigSource) SetFake() {
	{
		{
			s.KubeletConfigKey = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Namespace = "string"
		}
	}
	{
		{
			s.ResourceVersion.SetFake()
		}
	}
	{
		{
			s.UID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ConfigMapProjection) SetFake() {
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1KeyToPath
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Optional.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ConfigMapVolumeSource) SetFake() {
	{
		{
			s.DefaultMode.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1KeyToPath
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Optional.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Container) SetFake() {
	{
		{
			s.Args = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Args = append(s.Args, elem)
			}
		}
	}
	{
		{
			s.Command = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Command = append(s.Command, elem)
			}
		}
	}
	{
		{
			s.Env = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1EnvVar
				{
					elem.SetFake()
				}
				s.Env = append(s.Env, elem)
			}
		}
	}
	{
		{
			s.EnvFrom = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1EnvFromSource
				{
					elem.SetFake()
				}
				s.EnvFrom = append(s.EnvFrom, elem)
			}
		}
	}
	{
		{
			s.Image.SetFake()
		}
	}
	{
		{
			s.ImagePullPolicy.SetFake()
		}
	}
	{
		{
			s.Lifecycle.SetFake()
		}
	}
	{
		{
			s.LivenessProbe.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Ports = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ContainerPort
				{
					elem.SetFake()
				}
				s.Ports = append(s.Ports, elem)
			}
		}
	}
	{
		{
			s.ReadinessProbe.SetFake()
		}
	}
	{
		{
			s.Resources.SetFake()
		}
	}
	{
		{
			s.SecurityContext.SetFake()
		}
	}
	{
		{
			s.StartupProbe.SetFake()
		}
	}
	{
		{
			s.Stdin.SetFake()
		}
	}
	{
		{
			s.StdinOnce.SetFake()
		}
	}
	{
		{
			s.TerminationMessagePath.SetFake()
		}
	}
	{
		{
			s.TerminationMessagePolicy.SetFake()
		}
	}
	{
		{
			s.Tty.SetFake()
		}
	}
	{
		{
			s.VolumeDevices = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1VolumeDevice
				{
					elem.SetFake()
				}
				s.VolumeDevices = append(s.VolumeDevices, elem)
			}
		}
	}
	{
		{
			s.VolumeMounts = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1VolumeMount
				{
					elem.SetFake()
				}
				s.VolumeMounts = append(s.VolumeMounts, elem)
			}
		}
	}
	{
		{
			s.WorkingDir.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ContainerImage) SetFake() {
	{
		{
			s.Names = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Names = append(s.Names, elem)
			}
		}
	}
	{
		{
			s.SizeBytes.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ContainerPort) SetFake() {
	{
		{
			s.ContainerPort = int32(0)
		}
	}
	{
		{
			s.HostIP.SetFake()
		}
	}
	{
		{
			s.HostPort.SetFake()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Protocol.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ContainerState) SetFake() {
	{
		{
			s.Running.SetFake()
		}
	}
	{
		{
			s.Terminated.SetFake()
		}
	}
	{
		{
			s.Waiting.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ContainerStateRunning) SetFake() {
	{
		{
			s.StartedAt.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ContainerStateTerminated) SetFake() {
	{
		{
			s.ContainerID.SetFake()
		}
	}
	{
		{
			s.ExitCode = int32(0)
		}
	}
	{
		{
			s.FinishedAt.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Signal.SetFake()
		}
	}
	{
		{
			s.StartedAt.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ContainerStateWaiting) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ContainerStatus) SetFake() {
	{
		{
			s.ContainerID.SetFake()
		}
	}
	{
		{
			s.Image = "string"
		}
	}
	{
		{
			s.ImageID = "string"
		}
	}
	{
		{
			s.LastState.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Ready = true
		}
	}
	{
		{
			s.RestartCount = int32(0)
		}
	}
	{
		{
			s.Started.SetFake()
		}
	}
	{
		{
			s.State.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1DaemonEndpoint) SetFake() {
	{
		{
			s.Port = int32(0)
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1DownwardAPIProjection) SetFake() {
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1DownwardAPIVolumeFile
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1DownwardAPIVolumeFile) SetFake() {
	{
		{
			s.FieldRef.SetFake()
		}
	}
	{
		{
			s.Mode.SetFake()
		}
	}
	{
		{
			s.Path = "string"
		}
	}
	{
		{
			s.ResourceFieldRef.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1DownwardAPIVolumeSource) SetFake() {
	{
		{
			s.DefaultMode.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1DownwardAPIVolumeFile
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EmptyDirVolumeSource) SetFake() {
	{
		{
			s.Medium.SetFake()
		}
	}
	{
		{
			s.SizeLimit.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EndpointAddress) SetFake() {
	{
		{
			s.Hostname.SetFake()
		}
	}
	{
		{
			s.IP = "string"
		}
	}
	{
		{
			s.NodeName.SetFake()
		}
	}
	{
		{
			s.TargetRef.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EndpointPort) SetFake() {
	{
		{
			s.AppProtocol.SetFake()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Port = int32(0)
		}
	}
	{
		{
			s.Protocol.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EndpointSubset) SetFake() {
	{
		{
			s.Addresses = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1EndpointAddress
				{
					elem.SetFake()
				}
				s.Addresses = append(s.Addresses, elem)
			}
		}
	}
	{
		{
			s.NotReadyAddresses = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1EndpointAddress
				{
					elem.SetFake()
				}
				s.NotReadyAddresses = append(s.NotReadyAddresses, elem)
			}
		}
	}
	{
		{
			s.Ports = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1EndpointPort
				{
					elem.SetFake()
				}
				s.Ports = append(s.Ports, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Endpoints) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Subsets = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1EndpointSubset
				{
					elem.SetFake()
				}
				s.Subsets = append(s.Subsets, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EndpointsList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Endpoints
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EnvFromSource) SetFake() {
	{
		{
			s.ConfigMapRef.SetFake()
		}
	}
	{
		{
			s.Prefix.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EnvVar) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Value.SetFake()
		}
	}
	{
		{
			s.ValueFrom.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EnvVarSource) SetFake() {
	{
		{
			s.ConfigMapKeyRef.SetFake()
		}
	}
	{
		{
			s.FieldRef.SetFake()
		}
	}
	{
		{
			s.ResourceFieldRef.SetFake()
		}
	}
	{
		{
			s.SecretKeyRef.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EphemeralContainer) SetFake() {
	{
		{
			s.Args = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Args = append(s.Args, elem)
			}
		}
	}
	{
		{
			s.Command = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Command = append(s.Command, elem)
			}
		}
	}
	{
		{
			s.Env = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1EnvVar
				{
					elem.SetFake()
				}
				s.Env = append(s.Env, elem)
			}
		}
	}
	{
		{
			s.EnvFrom = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1EnvFromSource
				{
					elem.SetFake()
				}
				s.EnvFrom = append(s.EnvFrom, elem)
			}
		}
	}
	{
		{
			s.Image.SetFake()
		}
	}
	{
		{
			s.ImagePullPolicy.SetFake()
		}
	}
	{
		{
			s.Lifecycle.SetFake()
		}
	}
	{
		{
			s.LivenessProbe.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Ports = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ContainerPort
				{
					elem.SetFake()
				}
				s.Ports = append(s.Ports, elem)
			}
		}
	}
	{
		{
			s.ReadinessProbe.SetFake()
		}
	}
	{
		{
			s.Resources.SetFake()
		}
	}
	{
		{
			s.SecurityContext.SetFake()
		}
	}
	{
		{
			s.StartupProbe.SetFake()
		}
	}
	{
		{
			s.Stdin.SetFake()
		}
	}
	{
		{
			s.StdinOnce.SetFake()
		}
	}
	{
		{
			s.TargetContainerName.SetFake()
		}
	}
	{
		{
			s.TerminationMessagePath.SetFake()
		}
	}
	{
		{
			s.TerminationMessagePolicy.SetFake()
		}
	}
	{
		{
			s.Tty.SetFake()
		}
	}
	{
		{
			s.VolumeDevices = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1VolumeDevice
				{
					elem.SetFake()
				}
				s.VolumeDevices = append(s.VolumeDevices, elem)
			}
		}
	}
	{
		{
			s.VolumeMounts = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1VolumeMount
				{
					elem.SetFake()
				}
				s.VolumeMounts = append(s.VolumeMounts, elem)
			}
		}
	}
	{
		{
			s.WorkingDir.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EphemeralVolumeSource) SetFake() {
	{
		{
			s.VolumeClaimTemplate.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Event) SetFake() {
	{
		{
			s.Action.SetFake()
		}
	}
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Count.SetFake()
		}
	}
	{
		{
			s.EventTime.SetFake()
		}
	}
	{
		{
			s.FirstTimestamp.SetFake()
		}
	}
	{
		{
			s.InvolvedObject.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.LastTimestamp.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Related.SetFake()
		}
	}
	{
		{
			s.ReportingComponent.SetFake()
		}
	}
	{
		{
			s.ReportingInstance.SetFake()
		}
	}
	{
		{
			s.Series.SetFake()
		}
	}
	{
		{
			s.Source.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EventList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Event
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EventSeries) SetFake() {
	{
		{
			s.Count.SetFake()
		}
	}
	{
		{
			s.LastObservedTime.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1EventSource) SetFake() {
	{
		{
			s.Component.SetFake()
		}
	}
	{
		{
			s.Host.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ExecAction) SetFake() {
	{
		{
			s.Command = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Command = append(s.Command, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1FCVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.Lun.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.TargetWWNs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.TargetWWNs = append(s.TargetWWNs, elem)
			}
		}
	}
	{
		{
			s.Wwids = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Wwids = append(s.Wwids, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1FlexPersistentVolumeSource) SetFake() {
	{
		{
			s.Driver = "string"
		}
	}
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.Options.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1FlexPersistentVolumeSourceOptions) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1FlexVolumeSource) SetFake() {
	{
		{
			s.Driver = "string"
		}
	}
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.Options.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1FlexVolumeSourceOptions) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1FlockerVolumeSource) SetFake() {
	{
		{
			s.DatasetName.SetFake()
		}
	}
	{
		{
			s.DatasetUUID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1GCEPersistentDiskVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.Partition.SetFake()
		}
	}
	{
		{
			s.PdName = "string"
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1GitRepoVolumeSource) SetFake() {
	{
		{
			s.Directory.SetFake()
		}
	}
	{
		{
			s.Repository = "string"
		}
	}
	{
		{
			s.Revision.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1GlusterfsPersistentVolumeSource) SetFake() {
	{
		{
			s.Endpoints = "string"
		}
	}
	{
		{
			s.EndpointsNamespace.SetFake()
		}
	}
	{
		{
			s.Path = "string"
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1GlusterfsVolumeSource) SetFake() {
	{
		{
			s.Endpoints = "string"
		}
	}
	{
		{
			s.Path = "string"
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1HTTPGetAction) SetFake() {
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.HttpHeaders = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1HTTPHeader
				{
					elem.SetFake()
				}
				s.HttpHeaders = append(s.HttpHeaders, elem)
			}
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.Scheme.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1HTTPHeader) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Value = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Handler) SetFake() {
	{
		{
			s.Exec.SetFake()
		}
	}
	{
		{
			s.HttpGet.SetFake()
		}
	}
	{
		{
			s.TcpSocket.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1HostAlias) SetFake() {
	{
		{
			s.Hostnames = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Hostnames = append(s.Hostnames, elem)
			}
		}
	}
	{
		{
			s.IP.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1HostPathVolumeSource) SetFake() {
	{
		{
			s.Path = "string"
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ISCSIPersistentVolumeSource) SetFake() {
	{
		{
			s.ChapAuthDiscovery.SetFake()
		}
	}
	{
		{
			s.ChapAuthSession.SetFake()
		}
	}
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.InitiatorName.SetFake()
		}
	}
	{
		{
			s.Iqn = "string"
		}
	}
	{
		{
			s.IscsiInterface.SetFake()
		}
	}
	{
		{
			s.Lun = int32(0)
		}
	}
	{
		{
			s.Portals = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Portals = append(s.Portals, elem)
			}
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.TargetPortal = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ISCSIVolumeSource) SetFake() {
	{
		{
			s.ChapAuthDiscovery.SetFake()
		}
	}
	{
		{
			s.ChapAuthSession.SetFake()
		}
	}
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.InitiatorName.SetFake()
		}
	}
	{
		{
			s.Iqn = "string"
		}
	}
	{
		{
			s.IscsiInterface.SetFake()
		}
	}
	{
		{
			s.Lun = int32(0)
		}
	}
	{
		{
			s.Portals = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Portals = append(s.Portals, elem)
			}
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.TargetPortal = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1KeyToPath) SetFake() {
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.Mode.SetFake()
		}
	}
	{
		{
			s.Path = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Lifecycle) SetFake() {
	{
		{
			s.PostStart.SetFake()
		}
	}
	{
		{
			s.PreStop.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LimitRange) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LimitRangeItem) SetFake() {
	{
		{
			s.Default.SetFake()
		}
	}
	{
		{
			s.DefaultRequest.SetFake()
		}
	}
	{
		{
			s.Max.SetFake()
		}
	}
	{
		{
			s.MaxLimitRequestRatio.SetFake()
		}
	}
	{
		{
			s.Min.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LimitRangeItemDefault) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LimitRangeItemDefaultRequest) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LimitRangeItemMax) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LimitRangeItemMaxLimitRequestRatio) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LimitRangeItemMin) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LimitRangeList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1LimitRange
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LimitRangeSpec) SetFake() {
	{
		{
			s.Limits = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1LimitRangeItem
				{
					elem.SetFake()
				}
				s.Limits = append(s.Limits, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LoadBalancerIngress) SetFake() {
	{
		{
			s.Hostname.SetFake()
		}
	}
	{
		{
			s.IP.SetFake()
		}
	}
	{
		{
			s.Ports = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PortStatus
				{
					elem.SetFake()
				}
				s.Ports = append(s.Ports, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LoadBalancerStatus) SetFake() {
	{
		{
			s.Ingress = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1LoadBalancerIngress
				{
					elem.SetFake()
				}
				s.Ingress = append(s.Ingress, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LocalObjectReference) SetFake() {
	{
		{
			s.Name.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1LocalVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.Path = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NFSVolumeSource) SetFake() {
	{
		{
			s.Path = "string"
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.Server = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Namespace) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NamespaceCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NamespaceList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Namespace
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NamespaceSpec) SetFake() {
	{
		{
			s.Finalizers = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Finalizers = append(s.Finalizers, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NamespaceStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1NamespaceCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.Phase.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Node) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeAddress) SetFake() {
	{
		{
			s.Address = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeAffinity) SetFake() {
	{
		{
			s.PreferredDuringSchedulingIgnoredDuringExecution = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PreferredSchedulingTerm
				{
					elem.SetFake()
				}
				s.PreferredDuringSchedulingIgnoredDuringExecution = append(s.PreferredDuringSchedulingIgnoredDuringExecution, elem)
			}
		}
	}
	{
		{
			s.RequiredDuringSchedulingIgnoredDuringExecution.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeCondition) SetFake() {
	{
		{
			s.LastHeartbeatTime.SetFake()
		}
	}
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeConfigSource) SetFake() {
	{
		{
			s.ConfigMap.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeConfigStatus) SetFake() {
	{
		{
			s.Active.SetFake()
		}
	}
	{
		{
			s.Assigned.SetFake()
		}
	}
	{
		{
			s.Error.SetFake()
		}
	}
	{
		{
			s.LastKnownGood.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeDaemonEndpoints) SetFake() {
	{
		{
			s.KubeletEndpoint.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Node
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeSelector) SetFake() {
	{
		{
			s.NodeSelectorTerms = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1NodeSelectorTerm
				{
					elem.SetFake()
				}
				s.NodeSelectorTerms = append(s.NodeSelectorTerms, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeSelectorRequirement) SetFake() {
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.Operator = "string"
		}
	}
	{
		{
			s.Values = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Values = append(s.Values, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeSelectorTerm) SetFake() {
	{
		{
			s.MatchExpressions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1NodeSelectorRequirement
				{
					elem.SetFake()
				}
				s.MatchExpressions = append(s.MatchExpressions, elem)
			}
		}
	}
	{
		{
			s.MatchFields = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1NodeSelectorRequirement
				{
					elem.SetFake()
				}
				s.MatchFields = append(s.MatchFields, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeSpec) SetFake() {
	{
		{
			s.ConfigSource.SetFake()
		}
	}
	{
		{
			s.ExternalID.SetFake()
		}
	}
	{
		{
			s.PodCIDR.SetFake()
		}
	}
	{
		{
			s.PodCIDRs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.PodCIDRs = append(s.PodCIDRs, elem)
			}
		}
	}
	{
		{
			s.ProviderID.SetFake()
		}
	}
	{
		{
			s.Taints = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Taint
				{
					elem.SetFake()
				}
				s.Taints = append(s.Taints, elem)
			}
		}
	}
	{
		{
			s.Unschedulable.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeStatus) SetFake() {
	{
		{
			s.Addresses = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1NodeAddress
				{
					elem.SetFake()
				}
				s.Addresses = append(s.Addresses, elem)
			}
		}
	}
	{
		{
			s.Allocatable.SetFake()
		}
	}
	{
		{
			s.Capacity.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1NodeCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.Config.SetFake()
		}
	}
	{
		{
			s.DaemonEndpoints.SetFake()
		}
	}
	{
		{
			s.Images = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ContainerImage
				{
					elem.SetFake()
				}
				s.Images = append(s.Images, elem)
			}
		}
	}
	{
		{
			s.NodeInfo.SetFake()
		}
	}
	{
		{
			s.Phase.SetFake()
		}
	}
	{
		{
			s.VolumesAttached = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1AttachedVolume
				{
					elem.SetFake()
				}
				s.VolumesAttached = append(s.VolumesAttached, elem)
			}
		}
	}
	{
		{
			s.VolumesInUse = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.VolumesInUse = append(s.VolumesInUse, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeStatusAllocatable) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeStatusCapacity) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1NodeSystemInfo) SetFake() {
	{
		{
			s.Architecture = "string"
		}
	}
	{
		{
			s.BootID = "string"
		}
	}
	{
		{
			s.ContainerRuntimeVersion = "string"
		}
	}
	{
		{
			s.KernelVersion = "string"
		}
	}
	{
		{
			s.KubeProxyVersion = "string"
		}
	}
	{
		{
			s.KubeletVersion = "string"
		}
	}
	{
		{
			s.MachineID = "string"
		}
	}
	{
		{
			s.OperatingSystem = "string"
		}
	}
	{
		{
			s.OsImage = "string"
		}
	}
	{
		{
			s.SystemUUID = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ObjectFieldSelector) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.FieldPath = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ObjectReference) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.FieldPath.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Namespace.SetFake()
		}
	}
	{
		{
			s.ResourceVersion.SetFake()
		}
	}
	{
		{
			s.UID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolume) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeClaim) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeClaimCondition) SetFake() {
	{
		{
			s.LastProbeTime.SetFake()
		}
	}
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeClaimList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PersistentVolumeClaim
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeClaimSpec) SetFake() {
	{
		{
			s.AccessModes = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AccessModes = append(s.AccessModes, elem)
			}
		}
	}
	{
		{
			s.DataSource.SetFake()
		}
	}
	{
		{
			s.DataSourceRef.SetFake()
		}
	}
	{
		{
			s.Resources.SetFake()
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
	{
		{
			s.StorageClassName.SetFake()
		}
	}
	{
		{
			s.VolumeMode.SetFake()
		}
	}
	{
		{
			s.VolumeName.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeClaimStatus) SetFake() {
	{
		{
			s.AccessModes = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AccessModes = append(s.AccessModes, elem)
			}
		}
	}
	{
		{
			s.Capacity.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PersistentVolumeClaimCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.Phase.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeClaimStatusCapacity) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeClaimTemplate) SetFake() {
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeClaimVolumeSource) SetFake() {
	{
		{
			s.ClaimName = "string"
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PersistentVolume
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeSpec) SetFake() {
	{
		{
			s.AccessModes = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AccessModes = append(s.AccessModes, elem)
			}
		}
	}
	{
		{
			s.AwsElasticBlockStore.SetFake()
		}
	}
	{
		{
			s.AzureDisk.SetFake()
		}
	}
	{
		{
			s.AzureFile.SetFake()
		}
	}
	{
		{
			s.Capacity.SetFake()
		}
	}
	{
		{
			s.Cephfs.SetFake()
		}
	}
	{
		{
			s.Cinder.SetFake()
		}
	}
	{
		{
			s.ClaimRef.SetFake()
		}
	}
	{
		{
			s.Csi.SetFake()
		}
	}
	{
		{
			s.Fc.SetFake()
		}
	}
	{
		{
			s.FlexVolume.SetFake()
		}
	}
	{
		{
			s.Flocker.SetFake()
		}
	}
	{
		{
			s.GcePersistentDisk.SetFake()
		}
	}
	{
		{
			s.Glusterfs.SetFake()
		}
	}
	{
		{
			s.HostPath.SetFake()
		}
	}
	{
		{
			s.Iscsi.SetFake()
		}
	}
	{
		{
			s.Local.SetFake()
		}
	}
	{
		{
			s.MountOptions = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.MountOptions = append(s.MountOptions, elem)
			}
		}
	}
	{
		{
			s.Nfs.SetFake()
		}
	}
	{
		{
			s.NodeAffinity.SetFake()
		}
	}
	{
		{
			s.PersistentVolumeReclaimPolicy.SetFake()
		}
	}
	{
		{
			s.PhotonPersistentDisk.SetFake()
		}
	}
	{
		{
			s.PortworxVolume.SetFake()
		}
	}
	{
		{
			s.Quobyte.SetFake()
		}
	}
	{
		{
			s.Rbd.SetFake()
		}
	}
	{
		{
			s.ScaleIO.SetFake()
		}
	}
	{
		{
			s.StorageClassName.SetFake()
		}
	}
	{
		{
			s.Storageos.SetFake()
		}
	}
	{
		{
			s.VolumeMode.SetFake()
		}
	}
	{
		{
			s.VsphereVolume.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeSpecCapacity) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PersistentVolumeStatus) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Phase.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PhotonPersistentDiskVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.PdID = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Pod) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodAffinity) SetFake() {
	{
		{
			s.PreferredDuringSchedulingIgnoredDuringExecution = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1WeightedPodAffinityTerm
				{
					elem.SetFake()
				}
				s.PreferredDuringSchedulingIgnoredDuringExecution = append(s.PreferredDuringSchedulingIgnoredDuringExecution, elem)
			}
		}
	}
	{
		{
			s.RequiredDuringSchedulingIgnoredDuringExecution = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PodAffinityTerm
				{
					elem.SetFake()
				}
				s.RequiredDuringSchedulingIgnoredDuringExecution = append(s.RequiredDuringSchedulingIgnoredDuringExecution, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodAffinityTerm) SetFake() {
	{
		{
			s.LabelSelector.SetFake()
		}
	}
	{
		{
			s.NamespaceSelector.SetFake()
		}
	}
	{
		{
			s.Namespaces = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Namespaces = append(s.Namespaces, elem)
			}
		}
	}
	{
		{
			s.TopologyKey = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodAntiAffinity) SetFake() {
	{
		{
			s.PreferredDuringSchedulingIgnoredDuringExecution = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1WeightedPodAffinityTerm
				{
					elem.SetFake()
				}
				s.PreferredDuringSchedulingIgnoredDuringExecution = append(s.PreferredDuringSchedulingIgnoredDuringExecution, elem)
			}
		}
	}
	{
		{
			s.RequiredDuringSchedulingIgnoredDuringExecution = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PodAffinityTerm
				{
					elem.SetFake()
				}
				s.RequiredDuringSchedulingIgnoredDuringExecution = append(s.RequiredDuringSchedulingIgnoredDuringExecution, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodCondition) SetFake() {
	{
		{
			s.LastProbeTime.SetFake()
		}
	}
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodDNSConfig) SetFake() {
	{
		{
			s.Nameservers = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Nameservers = append(s.Nameservers, elem)
			}
		}
	}
	{
		{
			s.Options = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PodDNSConfigOption
				{
					elem.SetFake()
				}
				s.Options = append(s.Options, elem)
			}
		}
	}
	{
		{
			s.Searches = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Searches = append(s.Searches, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodDNSConfigOption) SetFake() {
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Value.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodIP) SetFake() {
	{
		{
			s.IP.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Pod
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodReadinessGate) SetFake() {
	{
		{
			s.ConditionType = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodSecurityContext) SetFake() {
	{
		{
			s.FsGroup.SetFake()
		}
	}
	{
		{
			s.FsGroupChangePolicy.SetFake()
		}
	}
	{
		{
			s.RunAsGroup.SetFake()
		}
	}
	{
		{
			s.RunAsNonRoot.SetFake()
		}
	}
	{
		{
			s.RunAsUser.SetFake()
		}
	}
	{
		{
			s.SeLinuxOptions.SetFake()
		}
	}
	{
		{
			s.SeccompProfile.SetFake()
		}
	}
	{
		{
			s.SupplementalGroups = nil
			for i := 0; i < 0; i++ {
				var elem int64
				{
					elem = int64(0)
				}
				s.SupplementalGroups = append(s.SupplementalGroups, elem)
			}
		}
	}
	{
		{
			s.Sysctls = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Sysctl
				{
					elem.SetFake()
				}
				s.Sysctls = append(s.Sysctls, elem)
			}
		}
	}
	{
		{
			s.WindowsOptions.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodSpec) SetFake() {
	{
		{
			s.ActiveDeadlineSeconds.SetFake()
		}
	}
	{
		{
			s.Affinity.SetFake()
		}
	}
	{
		{
			s.AutomountServiceAccountToken.SetFake()
		}
	}
	{
		{
			s.Containers = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Container
				{
					elem.SetFake()
				}
				s.Containers = append(s.Containers, elem)
			}
		}
	}
	{
		{
			s.DnsConfig.SetFake()
		}
	}
	{
		{
			s.DnsPolicy.SetFake()
		}
	}
	{
		{
			s.EnableServiceLinks.SetFake()
		}
	}
	{
		{
			s.EphemeralContainers = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1EphemeralContainer
				{
					elem.SetFake()
				}
				s.EphemeralContainers = append(s.EphemeralContainers, elem)
			}
		}
	}
	{
		{
			s.HostAliases = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1HostAlias
				{
					elem.SetFake()
				}
				s.HostAliases = append(s.HostAliases, elem)
			}
		}
	}
	{
		{
			s.HostIPC.SetFake()
		}
	}
	{
		{
			s.HostNetwork.SetFake()
		}
	}
	{
		{
			s.HostPID.SetFake()
		}
	}
	{
		{
			s.Hostname.SetFake()
		}
	}
	{
		{
			s.ImagePullSecrets = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1LocalObjectReference
				{
					elem.SetFake()
				}
				s.ImagePullSecrets = append(s.ImagePullSecrets, elem)
			}
		}
	}
	{
		{
			s.InitContainers = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Container
				{
					elem.SetFake()
				}
				s.InitContainers = append(s.InitContainers, elem)
			}
		}
	}
	{
		{
			s.NodeName.SetFake()
		}
	}
	{
		{
			s.NodeSelector.SetFake()
		}
	}
	{
		{
			s.Overhead.SetFake()
		}
	}
	{
		{
			s.PreemptionPolicy.SetFake()
		}
	}
	{
		{
			s.Priority.SetFake()
		}
	}
	{
		{
			s.PriorityClassName.SetFake()
		}
	}
	{
		{
			s.ReadinessGates = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PodReadinessGate
				{
					elem.SetFake()
				}
				s.ReadinessGates = append(s.ReadinessGates, elem)
			}
		}
	}
	{
		{
			s.RestartPolicy.SetFake()
		}
	}
	{
		{
			s.RuntimeClassName.SetFake()
		}
	}
	{
		{
			s.SchedulerName.SetFake()
		}
	}
	{
		{
			s.SecurityContext.SetFake()
		}
	}
	{
		{
			s.ServiceAccount.SetFake()
		}
	}
	{
		{
			s.ServiceAccountName.SetFake()
		}
	}
	{
		{
			s.SetHostnameAsFQDN.SetFake()
		}
	}
	{
		{
			s.ShareProcessNamespace.SetFake()
		}
	}
	{
		{
			s.Subdomain.SetFake()
		}
	}
	{
		{
			s.TerminationGracePeriodSeconds.SetFake()
		}
	}
	{
		{
			s.Tolerations = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Toleration
				{
					elem.SetFake()
				}
				s.Tolerations = append(s.Tolerations, elem)
			}
		}
	}
	{
		{
			s.TopologySpreadConstraints = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1TopologySpreadConstraint
				{
					elem.SetFake()
				}
				s.TopologySpreadConstraints = append(s.TopologySpreadConstraints, elem)
			}
		}
	}
	{
		{
			s.Volumes = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Volume
				{
					elem.SetFake()
				}
				s.Volumes = append(s.Volumes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodSpecNodeSelector) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodSpecOverhead) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PodCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.ContainerStatuses = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ContainerStatus
				{
					elem.SetFake()
				}
				s.ContainerStatuses = append(s.ContainerStatuses, elem)
			}
		}
	}
	{
		{
			s.EphemeralContainerStatuses = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ContainerStatus
				{
					elem.SetFake()
				}
				s.EphemeralContainerStatuses = append(s.EphemeralContainerStatuses, elem)
			}
		}
	}
	{
		{
			s.HostIP.SetFake()
		}
	}
	{
		{
			s.InitContainerStatuses = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ContainerStatus
				{
					elem.SetFake()
				}
				s.InitContainerStatuses = append(s.InitContainerStatuses, elem)
			}
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.NominatedNodeName.SetFake()
		}
	}
	{
		{
			s.Phase.SetFake()
		}
	}
	{
		{
			s.PodIP.SetFake()
		}
	}
	{
		{
			s.PodIPs = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PodIP
				{
					elem.SetFake()
				}
				s.PodIPs = append(s.PodIPs, elem)
			}
		}
	}
	{
		{
			s.QosClass.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.StartTime.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodTemplate) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Template.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodTemplateList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1PodTemplate
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PodTemplateSpec) SetFake() {
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PortStatus) SetFake() {
	{
		{
			s.Error.SetFake()
		}
	}
	{
		{
			s.Port = int32(0)
		}
	}
	{
		{
			s.Protocol = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PortworxVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.VolumeID = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1PreferredSchedulingTerm) SetFake() {
	{
		{
			s.Preference.SetFake()
		}
	}
	{
		{
			s.Weight = int32(0)
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Probe) SetFake() {
	{
		{
			s.Exec.SetFake()
		}
	}
	{
		{
			s.FailureThreshold.SetFake()
		}
	}
	{
		{
			s.HttpGet.SetFake()
		}
	}
	{
		{
			s.InitialDelaySeconds.SetFake()
		}
	}
	{
		{
			s.PeriodSeconds.SetFake()
		}
	}
	{
		{
			s.SuccessThreshold.SetFake()
		}
	}
	{
		{
			s.TcpSocket.SetFake()
		}
	}
	{
		{
			s.TerminationGracePeriodSeconds.SetFake()
		}
	}
	{
		{
			s.TimeoutSeconds.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ProjectedVolumeSource) SetFake() {
	{
		{
			s.DefaultMode.SetFake()
		}
	}
	{
		{
			s.Sources = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1VolumeProjection
				{
					elem.SetFake()
				}
				s.Sources = append(s.Sources, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1QuobyteVolumeSource) SetFake() {
	{
		{
			s.Group.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.Registry = "string"
		}
	}
	{
		{
			s.Tenant.SetFake()
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
	{
		{
			s.Volume = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1RBDPersistentVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.Image = "string"
		}
	}
	{
		{
			s.Keyring.SetFake()
		}
	}
	{
		{
			s.Monitors = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Monitors = append(s.Monitors, elem)
			}
		}
	}
	{
		{
			s.Pool.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1RBDVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.Image = "string"
		}
	}
	{
		{
			s.Keyring.SetFake()
		}
	}
	{
		{
			s.Monitors = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Monitors = append(s.Monitors, elem)
			}
		}
	}
	{
		{
			s.Pool.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ReplicationController) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ReplicationControllerCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ReplicationControllerList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ReplicationController
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ReplicationControllerSpec) SetFake() {
	{
		{
			s.MinReadySeconds.SetFake()
		}
	}
	{
		{
			s.Replicas.SetFake()
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
	{
		{
			s.Template.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ReplicationControllerSpecSelector) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ReplicationControllerStatus) SetFake() {
	{
		{
			s.AvailableReplicas.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ReplicationControllerCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.FullyLabeledReplicas.SetFake()
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
	{
		{
			s.ReadyReplicas.SetFake()
		}
	}
	{
		{
			s.Replicas = int32(0)
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ResourceFieldSelector) SetFake() {
	{
		{
			s.ContainerName.SetFake()
		}
	}
	{
		{
			s.Divisor.SetFake()
		}
	}
	{
		{
			s.Resource = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ResourceQuota) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ResourceQuotaList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ResourceQuota
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ResourceQuotaSpec) SetFake() {
	{
		{
			s.Hard.SetFake()
		}
	}
	{
		{
			s.ScopeSelector.SetFake()
		}
	}
	{
		{
			s.Scopes = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Scopes = append(s.Scopes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ResourceQuotaSpecHard) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ResourceQuotaStatus) SetFake() {
	{
		{
			s.Hard.SetFake()
		}
	}
	{
		{
			s.Used.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ResourceQuotaStatusHard) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ResourceQuotaStatusUsed) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ResourceRequirements) SetFake() {
	{
		{
			s.Limits.SetFake()
		}
	}
	{
		{
			s.Requests.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ResourceRequirementsLimits) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ResourceRequirementsRequests) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SELinuxOptions) SetFake() {
	{
		{
			s.Level.SetFake()
		}
	}
	{
		{
			s.Role.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ScaleIOPersistentVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.Gateway = "string"
		}
	}
	{
		{
			s.ProtectionDomain.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.SslEnabled.SetFake()
		}
	}
	{
		{
			s.StorageMode.SetFake()
		}
	}
	{
		{
			s.StoragePool.SetFake()
		}
	}
	{
		{
			s.System = "string"
		}
	}
	{
		{
			s.VolumeName.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ScaleIOVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.Gateway = "string"
		}
	}
	{
		{
			s.ProtectionDomain.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.SslEnabled.SetFake()
		}
	}
	{
		{
			s.StorageMode.SetFake()
		}
	}
	{
		{
			s.StoragePool.SetFake()
		}
	}
	{
		{
			s.System = "string"
		}
	}
	{
		{
			s.VolumeName.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ScopeSelector) SetFake() {
	{
		{
			s.MatchExpressions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ScopedResourceSelectorRequirement
				{
					elem.SetFake()
				}
				s.MatchExpressions = append(s.MatchExpressions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ScopedResourceSelectorRequirement) SetFake() {
	{
		{
			s.Operator = "string"
		}
	}
	{
		{
			s.ScopeName = "string"
		}
	}
	{
		{
			s.Values = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Values = append(s.Values, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SeccompProfile) SetFake() {
	{
		{
			s.LocalhostProfile.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Secret) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Data.SetFake()
		}
	}
	{
		{
			s.Immutable.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.StringData.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SecretData) SetFake() {
	var (
		elem []byte
		m    map[string][]byte = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SecretEnvSource) SetFake() {
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Optional.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SecretKeySelector) SetFake() {
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Optional.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SecretList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Secret
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SecretProjection) SetFake() {
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1KeyToPath
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Optional.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SecretReference) SetFake() {
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Namespace.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SecretStringData) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SecretVolumeSource) SetFake() {
	{
		{
			s.DefaultMode.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1KeyToPath
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Optional.SetFake()
		}
	}
	{
		{
			s.SecretName.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SecurityContext) SetFake() {
	{
		{
			s.AllowPrivilegeEscalation.SetFake()
		}
	}
	{
		{
			s.Capabilities.SetFake()
		}
	}
	{
		{
			s.Privileged.SetFake()
		}
	}
	{
		{
			s.ProcMount.SetFake()
		}
	}
	{
		{
			s.ReadOnlyRootFilesystem.SetFake()
		}
	}
	{
		{
			s.RunAsGroup.SetFake()
		}
	}
	{
		{
			s.RunAsNonRoot.SetFake()
		}
	}
	{
		{
			s.RunAsUser.SetFake()
		}
	}
	{
		{
			s.SeLinuxOptions.SetFake()
		}
	}
	{
		{
			s.SeccompProfile.SetFake()
		}
	}
	{
		{
			s.WindowsOptions.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Service) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ServiceAccount) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.AutomountServiceAccountToken.SetFake()
		}
	}
	{
		{
			s.ImagePullSecrets = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1LocalObjectReference
				{
					elem.SetFake()
				}
				s.ImagePullSecrets = append(s.ImagePullSecrets, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Secrets = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ObjectReference
				{
					elem.SetFake()
				}
				s.Secrets = append(s.Secrets, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ServiceAccountList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ServiceAccount
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ServiceAccountTokenProjection) SetFake() {
	{
		{
			s.Audience.SetFake()
		}
	}
	{
		{
			s.ExpirationSeconds.SetFake()
		}
	}
	{
		{
			s.Path = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ServiceList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Service
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ServicePort) SetFake() {
	{
		{
			s.AppProtocol.SetFake()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.NodePort.SetFake()
		}
	}
	{
		{
			s.Port = int32(0)
		}
	}
	{
		{
			s.Protocol.SetFake()
		}
	}
	{
		{
			s.TargetPort.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ServiceSpec) SetFake() {
	{
		{
			s.AllocateLoadBalancerNodePorts.SetFake()
		}
	}
	{
		{
			s.ClusterIP.SetFake()
		}
	}
	{
		{
			s.ClusterIPs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ClusterIPs = append(s.ClusterIPs, elem)
			}
		}
	}
	{
		{
			s.ExternalIPs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ExternalIPs = append(s.ExternalIPs, elem)
			}
		}
	}
	{
		{
			s.ExternalName.SetFake()
		}
	}
	{
		{
			s.ExternalTrafficPolicy.SetFake()
		}
	}
	{
		{
			s.HealthCheckNodePort.SetFake()
		}
	}
	{
		{
			s.InternalTrafficPolicy.SetFake()
		}
	}
	{
		{
			s.IpFamilies = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.IpFamilies = append(s.IpFamilies, elem)
			}
		}
	}
	{
		{
			s.IpFamilyPolicy.SetFake()
		}
	}
	{
		{
			s.LoadBalancerClass.SetFake()
		}
	}
	{
		{
			s.LoadBalancerIP.SetFake()
		}
	}
	{
		{
			s.LoadBalancerSourceRanges = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.LoadBalancerSourceRanges = append(s.LoadBalancerSourceRanges, elem)
			}
		}
	}
	{
		{
			s.Ports = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1ServicePort
				{
					elem.SetFake()
				}
				s.Ports = append(s.Ports, elem)
			}
		}
	}
	{
		{
			s.PublishNotReadyAddresses.SetFake()
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
	{
		{
			s.SessionAffinity.SetFake()
		}
	}
	{
		{
			s.SessionAffinityConfig.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ServiceSpecSelector) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1ServiceStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1Condition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.LoadBalancer.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1SessionAffinityConfig) SetFake() {
	{
		{
			s.ClientIP.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1StorageOSPersistentVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.VolumeName.SetFake()
		}
	}
	{
		{
			s.VolumeNamespace.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1StorageOSVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SecretRef.SetFake()
		}
	}
	{
		{
			s.VolumeName.SetFake()
		}
	}
	{
		{
			s.VolumeNamespace.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Sysctl) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Value = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1TCPSocketAction) SetFake() {
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Taint) SetFake() {
	{
		{
			s.Effect = "string"
		}
	}
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.TimeAdded.SetFake()
		}
	}
	{
		{
			s.Value.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Toleration) SetFake() {
	{
		{
			s.Effect.SetFake()
		}
	}
	{
		{
			s.Key.SetFake()
		}
	}
	{
		{
			s.Operator.SetFake()
		}
	}
	{
		{
			s.TolerationSeconds.SetFake()
		}
	}
	{
		{
			s.Value.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1TopologySelectorLabelRequirement) SetFake() {
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.Values = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Values = append(s.Values, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1TopologySelectorTerm) SetFake() {
	{
		{
			s.MatchLabelExpressions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1TopologySelectorLabelRequirement
				{
					elem.SetFake()
				}
				s.MatchLabelExpressions = append(s.MatchLabelExpressions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1TopologySpreadConstraint) SetFake() {
	{
		{
			s.LabelSelector.SetFake()
		}
	}
	{
		{
			s.MaxSkew = int32(0)
		}
	}
	{
		{
			s.TopologyKey = "string"
		}
	}
	{
		{
			s.WhenUnsatisfiable = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1TypedLocalObjectReference) SetFake() {
	{
		{
			s.ApiGroup.SetFake()
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1Volume) SetFake() {
	{
		{
			s.AwsElasticBlockStore.SetFake()
		}
	}
	{
		{
			s.AzureDisk.SetFake()
		}
	}
	{
		{
			s.AzureFile.SetFake()
		}
	}
	{
		{
			s.Cephfs.SetFake()
		}
	}
	{
		{
			s.Cinder.SetFake()
		}
	}
	{
		{
			s.ConfigMap.SetFake()
		}
	}
	{
		{
			s.Csi.SetFake()
		}
	}
	{
		{
			s.DownwardAPI.SetFake()
		}
	}
	{
		{
			s.EmptyDir.SetFake()
		}
	}
	{
		{
			s.Ephemeral.SetFake()
		}
	}
	{
		{
			s.Fc.SetFake()
		}
	}
	{
		{
			s.FlexVolume.SetFake()
		}
	}
	{
		{
			s.Flocker.SetFake()
		}
	}
	{
		{
			s.GcePersistentDisk.SetFake()
		}
	}
	{
		{
			s.GitRepo.SetFake()
		}
	}
	{
		{
			s.Glusterfs.SetFake()
		}
	}
	{
		{
			s.HostPath.SetFake()
		}
	}
	{
		{
			s.Iscsi.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Nfs.SetFake()
		}
	}
	{
		{
			s.PersistentVolumeClaim.SetFake()
		}
	}
	{
		{
			s.PhotonPersistentDisk.SetFake()
		}
	}
	{
		{
			s.PortworxVolume.SetFake()
		}
	}
	{
		{
			s.Projected.SetFake()
		}
	}
	{
		{
			s.Quobyte.SetFake()
		}
	}
	{
		{
			s.Rbd.SetFake()
		}
	}
	{
		{
			s.ScaleIO.SetFake()
		}
	}
	{
		{
			s.Secret.SetFake()
		}
	}
	{
		{
			s.Storageos.SetFake()
		}
	}
	{
		{
			s.VsphereVolume.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1VolumeDevice) SetFake() {
	{
		{
			s.DevicePath = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1VolumeMount) SetFake() {
	{
		{
			s.MountPath = "string"
		}
	}
	{
		{
			s.MountPropagation.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
	{
		{
			s.SubPath.SetFake()
		}
	}
	{
		{
			s.SubPathExpr.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1VolumeNodeAffinity) SetFake() {
	{
		{
			s.Required.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1VolumeProjection) SetFake() {
	{
		{
			s.ConfigMap.SetFake()
		}
	}
	{
		{
			s.DownwardAPI.SetFake()
		}
	}
	{
		{
			s.Secret.SetFake()
		}
	}
	{
		{
			s.ServiceAccountToken.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1VsphereVirtualDiskVolumeSource) SetFake() {
	{
		{
			s.FsType.SetFake()
		}
	}
	{
		{
			s.StoragePolicyID.SetFake()
		}
	}
	{
		{
			s.StoragePolicyName.SetFake()
		}
	}
	{
		{
			s.VolumePath = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1WeightedPodAffinityTerm) SetFake() {
	{
		{
			s.PodAffinityTerm.SetFake()
		}
	}
	{
		{
			s.Weight = int32(0)
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPICoreV1WindowsSecurityContextOptions) SetFake() {
	{
		{
			s.GmsaCredentialSpec.SetFake()
		}
	}
	{
		{
			s.GmsaCredentialSpecName.SetFake()
		}
	}
	{
		{
			s.HostProcess.SetFake()
		}
	}
	{
		{
			s.RunAsUserName.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1Endpoint) SetFake() {
	{
		{
			s.Addresses = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Addresses = append(s.Addresses, elem)
			}
		}
	}
	{
		{
			s.Conditions.SetFake()
		}
	}
	{
		{
			s.DeprecatedTopology.SetFake()
		}
	}
	{
		{
			s.Hints.SetFake()
		}
	}
	{
		{
			s.Hostname.SetFake()
		}
	}
	{
		{
			s.NodeName.SetFake()
		}
	}
	{
		{
			s.TargetRef.SetFake()
		}
	}
	{
		{
			s.Zone.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1EndpointConditions) SetFake() {
	{
		{
			s.Ready.SetFake()
		}
	}
	{
		{
			s.Serving.SetFake()
		}
	}
	{
		{
			s.Terminating.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1EndpointDeprecatedTopology) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1EndpointHints) SetFake() {
	{
		{
			s.ForZones = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIDiscoveryV1ForZone
				{
					elem.SetFake()
				}
				s.ForZones = append(s.ForZones, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1EndpointPort) SetFake() {
	{
		{
			s.AppProtocol.SetFake()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.Protocol.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1EndpointSlice) SetFake() {
	{
		{
			s.AddressType = "string"
		}
	}
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Endpoints = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIDiscoveryV1Endpoint
				{
					elem.SetFake()
				}
				s.Endpoints = append(s.Endpoints, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Ports = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIDiscoveryV1EndpointPort
				{
					elem.SetFake()
				}
				s.Ports = append(s.Ports, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1EndpointSliceList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIDiscoveryV1EndpointSlice
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1ForZone) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1beta1Endpoint) SetFake() {
	{
		{
			s.Addresses = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Addresses = append(s.Addresses, elem)
			}
		}
	}
	{
		{
			s.Conditions.SetFake()
		}
	}
	{
		{
			s.Hints.SetFake()
		}
	}
	{
		{
			s.Hostname.SetFake()
		}
	}
	{
		{
			s.NodeName.SetFake()
		}
	}
	{
		{
			s.TargetRef.SetFake()
		}
	}
	{
		{
			s.Topology.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1beta1EndpointConditions) SetFake() {
	{
		{
			s.Ready.SetFake()
		}
	}
	{
		{
			s.Serving.SetFake()
		}
	}
	{
		{
			s.Terminating.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1beta1EndpointHints) SetFake() {
	{
		{
			s.ForZones = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIDiscoveryV1beta1ForZone
				{
					elem.SetFake()
				}
				s.ForZones = append(s.ForZones, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1beta1EndpointPort) SetFake() {
	{
		{
			s.AppProtocol.SetFake()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.Protocol.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1beta1EndpointSlice) SetFake() {
	{
		{
			s.AddressType = "string"
		}
	}
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Endpoints = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIDiscoveryV1beta1Endpoint
				{
					elem.SetFake()
				}
				s.Endpoints = append(s.Endpoints, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Ports = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIDiscoveryV1beta1EndpointPort
				{
					elem.SetFake()
				}
				s.Ports = append(s.Ports, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1beta1EndpointSliceList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIDiscoveryV1beta1EndpointSlice
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1beta1EndpointTopology) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPIDiscoveryV1beta1ForZone) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIEventsV1Event) SetFake() {
	{
		{
			s.Action.SetFake()
		}
	}
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.DeprecatedCount.SetFake()
		}
	}
	{
		{
			s.DeprecatedFirstTimestamp.SetFake()
		}
	}
	{
		{
			s.DeprecatedLastTimestamp.SetFake()
		}
	}
	{
		{
			s.DeprecatedSource.SetFake()
		}
	}
	{
		{
			s.EventTime.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Note.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Regarding.SetFake()
		}
	}
	{
		{
			s.Related.SetFake()
		}
	}
	{
		{
			s.ReportingController.SetFake()
		}
	}
	{
		{
			s.ReportingInstance.SetFake()
		}
	}
	{
		{
			s.Series.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIEventsV1EventList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIEventsV1Event
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIEventsV1EventSeries) SetFake() {
	{
		{
			s.Count = int32(0)
		}
	}
	{
		{
			s.LastObservedTime.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIEventsV1beta1Event) SetFake() {
	{
		{
			s.Action.SetFake()
		}
	}
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.DeprecatedCount.SetFake()
		}
	}
	{
		{
			s.DeprecatedFirstTimestamp.SetFake()
		}
	}
	{
		{
			s.DeprecatedLastTimestamp.SetFake()
		}
	}
	{
		{
			s.DeprecatedSource.SetFake()
		}
	}
	{
		{
			s.EventTime.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Note.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Regarding.SetFake()
		}
	}
	{
		{
			s.Related.SetFake()
		}
	}
	{
		{
			s.ReportingController.SetFake()
		}
	}
	{
		{
			s.ReportingInstance.SetFake()
		}
	}
	{
		{
			s.Series.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIEventsV1beta1EventList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIEventsV1beta1Event
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIEventsV1beta1EventSeries) SetFake() {
	{
		{
			s.Count = int32(0)
		}
	}
	{
		{
			s.LastObservedTime.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1FlowDistinguisherMethod) SetFake() {
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1FlowSchema) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1FlowSchemaCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1FlowSchemaList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta1FlowSchema
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1FlowSchemaSpec) SetFake() {
	{
		{
			s.DistinguisherMethod.SetFake()
		}
	}
	{
		{
			s.MatchingPrecedence.SetFake()
		}
	}
	{
		{
			s.PriorityLevelConfiguration.SetFake()
		}
	}
	{
		{
			s.Rules = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta1PolicyRulesWithSubjects
				{
					elem.SetFake()
				}
				s.Rules = append(s.Rules, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1FlowSchemaStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta1FlowSchemaCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1GroupSubject) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1LimitResponse) SetFake() {
	{
		{
			s.Queuing.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1LimitedPriorityLevelConfiguration) SetFake() {
	{
		{
			s.AssuredConcurrencyShares.SetFake()
		}
	}
	{
		{
			s.LimitResponse.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1NonResourcePolicyRule) SetFake() {
	{
		{
			s.NonResourceURLs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.NonResourceURLs = append(s.NonResourceURLs, elem)
			}
		}
	}
	{
		{
			s.Verbs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Verbs = append(s.Verbs, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1PolicyRulesWithSubjects) SetFake() {
	{
		{
			s.NonResourceRules = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta1NonResourcePolicyRule
				{
					elem.SetFake()
				}
				s.NonResourceRules = append(s.NonResourceRules, elem)
			}
		}
	}
	{
		{
			s.ResourceRules = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta1ResourcePolicyRule
				{
					elem.SetFake()
				}
				s.ResourceRules = append(s.ResourceRules, elem)
			}
		}
	}
	{
		{
			s.Subjects = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta1Subject
				{
					elem.SetFake()
				}
				s.Subjects = append(s.Subjects, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1PriorityLevelConfigurationCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1PriorityLevelConfigurationList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1PriorityLevelConfigurationReference) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1PriorityLevelConfigurationSpec) SetFake() {
	{
		{
			s.Limited.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1PriorityLevelConfigurationStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta1PriorityLevelConfigurationCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1QueuingConfiguration) SetFake() {
	{
		{
			s.HandSize.SetFake()
		}
	}
	{
		{
			s.QueueLengthLimit.SetFake()
		}
	}
	{
		{
			s.Queues.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1ResourcePolicyRule) SetFake() {
	{
		{
			s.ApiGroups = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ApiGroups = append(s.ApiGroups, elem)
			}
		}
	}
	{
		{
			s.ClusterScope.SetFake()
		}
	}
	{
		{
			s.Namespaces = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Namespaces = append(s.Namespaces, elem)
			}
		}
	}
	{
		{
			s.Resources = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Resources = append(s.Resources, elem)
			}
		}
	}
	{
		{
			s.Verbs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Verbs = append(s.Verbs, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1ServiceAccountSubject) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Namespace = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1Subject) SetFake() {
	{
		{
			s.Group.SetFake()
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.ServiceAccount.SetFake()
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta1UserSubject) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2FlowDistinguisherMethod) SetFake() {
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2FlowSchema) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2FlowSchemaCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2FlowSchemaList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta2FlowSchema
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2FlowSchemaSpec) SetFake() {
	{
		{
			s.DistinguisherMethod.SetFake()
		}
	}
	{
		{
			s.MatchingPrecedence.SetFake()
		}
	}
	{
		{
			s.PriorityLevelConfiguration.SetFake()
		}
	}
	{
		{
			s.Rules = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta2PolicyRulesWithSubjects
				{
					elem.SetFake()
				}
				s.Rules = append(s.Rules, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2FlowSchemaStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta2FlowSchemaCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2GroupSubject) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2LimitResponse) SetFake() {
	{
		{
			s.Queuing.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2LimitedPriorityLevelConfiguration) SetFake() {
	{
		{
			s.AssuredConcurrencyShares.SetFake()
		}
	}
	{
		{
			s.LimitResponse.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2NonResourcePolicyRule) SetFake() {
	{
		{
			s.NonResourceURLs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.NonResourceURLs = append(s.NonResourceURLs, elem)
			}
		}
	}
	{
		{
			s.Verbs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Verbs = append(s.Verbs, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2PolicyRulesWithSubjects) SetFake() {
	{
		{
			s.NonResourceRules = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta2NonResourcePolicyRule
				{
					elem.SetFake()
				}
				s.NonResourceRules = append(s.NonResourceRules, elem)
			}
		}
	}
	{
		{
			s.ResourceRules = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta2ResourcePolicyRule
				{
					elem.SetFake()
				}
				s.ResourceRules = append(s.ResourceRules, elem)
			}
		}
	}
	{
		{
			s.Subjects = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta2Subject
				{
					elem.SetFake()
				}
				s.Subjects = append(s.Subjects, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2PriorityLevelConfigurationCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2PriorityLevelConfigurationList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2PriorityLevelConfigurationReference) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2PriorityLevelConfigurationSpec) SetFake() {
	{
		{
			s.Limited.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2PriorityLevelConfigurationStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIFlowcontrolV1beta2PriorityLevelConfigurationCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2QueuingConfiguration) SetFake() {
	{
		{
			s.HandSize.SetFake()
		}
	}
	{
		{
			s.QueueLengthLimit.SetFake()
		}
	}
	{
		{
			s.Queues.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2ResourcePolicyRule) SetFake() {
	{
		{
			s.ApiGroups = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ApiGroups = append(s.ApiGroups, elem)
			}
		}
	}
	{
		{
			s.ClusterScope.SetFake()
		}
	}
	{
		{
			s.Namespaces = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Namespaces = append(s.Namespaces, elem)
			}
		}
	}
	{
		{
			s.Resources = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Resources = append(s.Resources, elem)
			}
		}
	}
	{
		{
			s.Verbs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Verbs = append(s.Verbs, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2ServiceAccountSubject) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Namespace = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2Subject) SetFake() {
	{
		{
			s.Group.SetFake()
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.ServiceAccount.SetFake()
		}
	}
	{
		{
			s.User.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIFlowcontrolV1beta2UserSubject) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1HTTPIngressPath) SetFake() {
	{
		{
			s.Backend.SetFake()
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.PathType = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1HTTPIngressRuleValue) SetFake() {
	{
		{
			s.Paths = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1HTTPIngressPath
				{
					elem.SetFake()
				}
				s.Paths = append(s.Paths, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IPBlock) SetFake() {
	{
		{
			s.Cidr = "string"
		}
	}
	{
		{
			s.Except = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Except = append(s.Except, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1Ingress) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IngressBackend) SetFake() {
	{
		{
			s.Resource.SetFake()
		}
	}
	{
		{
			s.Service.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IngressClass) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IngressClassList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1IngressClass
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IngressClassParametersReference) SetFake() {
	{
		{
			s.ApiGroup.SetFake()
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Namespace.SetFake()
		}
	}
	{
		{
			s.Scope.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IngressClassSpec) SetFake() {
	{
		{
			s.Controller.SetFake()
		}
	}
	{
		{
			s.Parameters.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IngressList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1Ingress
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IngressRule) SetFake() {
	{
		{
			s.Host.SetFake()
		}
	}
	{
		{
			s.HTTP.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IngressServiceBackend) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IngressSpec) SetFake() {
	{
		{
			s.DefaultBackend.SetFake()
		}
	}
	{
		{
			s.IngressClassName.SetFake()
		}
	}
	{
		{
			s.Rules = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1IngressRule
				{
					elem.SetFake()
				}
				s.Rules = append(s.Rules, elem)
			}
		}
	}
	{
		{
			s.TLS = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1IngressTLS
				{
					elem.SetFake()
				}
				s.TLS = append(s.TLS, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IngressStatus) SetFake() {
	{
		{
			s.LoadBalancer.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1IngressTLS) SetFake() {
	{
		{
			s.Hosts = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Hosts = append(s.Hosts, elem)
			}
		}
	}
	{
		{
			s.SecretName.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1NetworkPolicy) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1NetworkPolicyEgressRule) SetFake() {
	{
		{
			s.Ports = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1NetworkPolicyPort
				{
					elem.SetFake()
				}
				s.Ports = append(s.Ports, elem)
			}
		}
	}
	{
		{
			s.To = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1NetworkPolicyPeer
				{
					elem.SetFake()
				}
				s.To = append(s.To, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1NetworkPolicyIngressRule) SetFake() {
	{
		{
			s.From = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1NetworkPolicyPeer
				{
					elem.SetFake()
				}
				s.From = append(s.From, elem)
			}
		}
	}
	{
		{
			s.Ports = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1NetworkPolicyPort
				{
					elem.SetFake()
				}
				s.Ports = append(s.Ports, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1NetworkPolicyList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1NetworkPolicy
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1NetworkPolicyPeer) SetFake() {
	{
		{
			s.IpBlock.SetFake()
		}
	}
	{
		{
			s.NamespaceSelector.SetFake()
		}
	}
	{
		{
			s.PodSelector.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1NetworkPolicyPort) SetFake() {
	{
		{
			s.EndPort.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
	{
		{
			s.Protocol.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1NetworkPolicySpec) SetFake() {
	{
		{
			s.Egress = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1NetworkPolicyEgressRule
				{
					elem.SetFake()
				}
				s.Egress = append(s.Egress, elem)
			}
		}
	}
	{
		{
			s.Ingress = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINetworkingV1NetworkPolicyIngressRule
				{
					elem.SetFake()
				}
				s.Ingress = append(s.Ingress, elem)
			}
		}
	}
	{
		{
			s.PodSelector.SetFake()
		}
	}
	{
		{
			s.PolicyTypes = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.PolicyTypes = append(s.PolicyTypes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINetworkingV1ServiceBackendPort) SetFake() {
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Number.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1Overhead) SetFake() {
	{
		{
			s.PodFixed.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1OverheadPodFixed) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1RuntimeClass) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Handler = "string"
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Overhead.SetFake()
		}
	}
	{
		{
			s.Scheduling.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1RuntimeClassList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINodeV1RuntimeClass
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1Scheduling) SetFake() {
	{
		{
			s.NodeSelector.SetFake()
		}
	}
	{
		{
			s.Tolerations = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Toleration
				{
					elem.SetFake()
				}
				s.Tolerations = append(s.Tolerations, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1SchedulingNodeSelector) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1alpha1Overhead) SetFake() {
	{
		{
			s.PodFixed.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1alpha1OverheadPodFixed) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1alpha1RuntimeClass) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1alpha1RuntimeClassList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINodeV1alpha1RuntimeClass
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1alpha1RuntimeClassSpec) SetFake() {
	{
		{
			s.Overhead.SetFake()
		}
	}
	{
		{
			s.RuntimeHandler = "string"
		}
	}
	{
		{
			s.Scheduling.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1alpha1Scheduling) SetFake() {
	{
		{
			s.NodeSelector.SetFake()
		}
	}
	{
		{
			s.Tolerations = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Toleration
				{
					elem.SetFake()
				}
				s.Tolerations = append(s.Tolerations, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1alpha1SchedulingNodeSelector) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1beta1Overhead) SetFake() {
	{
		{
			s.PodFixed.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1beta1OverheadPodFixed) SetFake() {
	var (
		elem IoK8sApimachineryPkgAPIResourceQuantity
		m    map[string]IoK8sApimachineryPkgAPIResourceQuantity = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1beta1RuntimeClass) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Handler = "string"
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Overhead.SetFake()
		}
	}
	{
		{
			s.Scheduling.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1beta1RuntimeClassList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPINodeV1beta1RuntimeClass
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1beta1Scheduling) SetFake() {
	{
		{
			s.NodeSelector.SetFake()
		}
	}
	{
		{
			s.Tolerations = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1Toleration
				{
					elem.SetFake()
				}
				s.Tolerations = append(s.Tolerations, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPINodeV1beta1SchedulingNodeSelector) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1PodDisruptionBudget) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1PodDisruptionBudgetList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIPolicyV1PodDisruptionBudget
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1PodDisruptionBudgetSpec) SetFake() {
	{
		{
			s.MaxUnavailable.SetFake()
		}
	}
	{
		{
			s.MinAvailable.SetFake()
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1PodDisruptionBudgetStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1Condition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.CurrentHealthy = int32(0)
		}
	}
	{
		{
			s.DesiredHealthy = int32(0)
		}
	}
	{
		{
			s.DisruptedPods.SetFake()
		}
	}
	{
		{
			s.DisruptionsAllowed = int32(0)
		}
	}
	{
		{
			s.ExpectedPods = int32(0)
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1PodDisruptionBudgetStatusDisruptedPods) SetFake() {
	var (
		elem IoK8sApimachineryPkgApisMetaV1Time
		m    map[string]IoK8sApimachineryPkgApisMetaV1Time = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1AllowedCSIDriver) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1AllowedFlexVolume) SetFake() {
	{
		{
			s.Driver = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1AllowedHostPath) SetFake() {
	{
		{
			s.PathPrefix.SetFake()
		}
	}
	{
		{
			s.ReadOnly.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1FSGroupStrategyOptions) SetFake() {
	{
		{
			s.Ranges = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIPolicyV1beta1IDRange
				{
					elem.SetFake()
				}
				s.Ranges = append(s.Ranges, elem)
			}
		}
	}
	{
		{
			s.Rule.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1HostPortRange) SetFake() {
	{
		{
			s.Max = int32(0)
		}
	}
	{
		{
			s.Min = int32(0)
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1IDRange) SetFake() {
	{
		{
			s.Max = int64(0)
		}
	}
	{
		{
			s.Min = int64(0)
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1PodDisruptionBudget) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1PodDisruptionBudgetList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIPolicyV1beta1PodDisruptionBudget
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1PodDisruptionBudgetSpec) SetFake() {
	{
		{
			s.MaxUnavailable.SetFake()
		}
	}
	{
		{
			s.MinAvailable.SetFake()
		}
	}
	{
		{
			s.Selector.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1PodDisruptionBudgetStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1Condition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.CurrentHealthy = int32(0)
		}
	}
	{
		{
			s.DesiredHealthy = int32(0)
		}
	}
	{
		{
			s.DisruptedPods.SetFake()
		}
	}
	{
		{
			s.DisruptionsAllowed = int32(0)
		}
	}
	{
		{
			s.ExpectedPods = int32(0)
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1PodDisruptionBudgetStatusDisruptedPods) SetFake() {
	var (
		elem IoK8sApimachineryPkgApisMetaV1Time
		m    map[string]IoK8sApimachineryPkgApisMetaV1Time = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1PodSecurityPolicy) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1PodSecurityPolicyList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIPolicyV1beta1PodSecurityPolicy
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1PodSecurityPolicySpec) SetFake() {
	{
		{
			s.AllowPrivilegeEscalation.SetFake()
		}
	}
	{
		{
			s.AllowedCSIDrivers = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIPolicyV1beta1AllowedCSIDriver
				{
					elem.SetFake()
				}
				s.AllowedCSIDrivers = append(s.AllowedCSIDrivers, elem)
			}
		}
	}
	{
		{
			s.AllowedCapabilities = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AllowedCapabilities = append(s.AllowedCapabilities, elem)
			}
		}
	}
	{
		{
			s.AllowedFlexVolumes = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIPolicyV1beta1AllowedFlexVolume
				{
					elem.SetFake()
				}
				s.AllowedFlexVolumes = append(s.AllowedFlexVolumes, elem)
			}
		}
	}
	{
		{
			s.AllowedHostPaths = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIPolicyV1beta1AllowedHostPath
				{
					elem.SetFake()
				}
				s.AllowedHostPaths = append(s.AllowedHostPaths, elem)
			}
		}
	}
	{
		{
			s.AllowedProcMountTypes = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AllowedProcMountTypes = append(s.AllowedProcMountTypes, elem)
			}
		}
	}
	{
		{
			s.AllowedUnsafeSysctls = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AllowedUnsafeSysctls = append(s.AllowedUnsafeSysctls, elem)
			}
		}
	}
	{
		{
			s.DefaultAddCapabilities = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.DefaultAddCapabilities = append(s.DefaultAddCapabilities, elem)
			}
		}
	}
	{
		{
			s.DefaultAllowPrivilegeEscalation.SetFake()
		}
	}
	{
		{
			s.ForbiddenSysctls = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ForbiddenSysctls = append(s.ForbiddenSysctls, elem)
			}
		}
	}
	{
		{
			s.FsGroup.SetFake()
		}
	}
	{
		{
			s.HostIPC.SetFake()
		}
	}
	{
		{
			s.HostNetwork.SetFake()
		}
	}
	{
		{
			s.HostPID.SetFake()
		}
	}
	{
		{
			s.HostPorts = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIPolicyV1beta1HostPortRange
				{
					elem.SetFake()
				}
				s.HostPorts = append(s.HostPorts, elem)
			}
		}
	}
	{
		{
			s.Privileged.SetFake()
		}
	}
	{
		{
			s.ReadOnlyRootFilesystem.SetFake()
		}
	}
	{
		{
			s.RequiredDropCapabilities = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.RequiredDropCapabilities = append(s.RequiredDropCapabilities, elem)
			}
		}
	}
	{
		{
			s.RunAsGroup.SetFake()
		}
	}
	{
		{
			s.RunAsUser.SetFake()
		}
	}
	{
		{
			s.RuntimeClass.SetFake()
		}
	}
	{
		{
			s.SeLinux.SetFake()
		}
	}
	{
		{
			s.SupplementalGroups.SetFake()
		}
	}
	{
		{
			s.Volumes = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Volumes = append(s.Volumes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1RunAsGroupStrategyOptions) SetFake() {
	{
		{
			s.Ranges = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIPolicyV1beta1IDRange
				{
					elem.SetFake()
				}
				s.Ranges = append(s.Ranges, elem)
			}
		}
	}
	{
		{
			s.Rule = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1RunAsUserStrategyOptions) SetFake() {
	{
		{
			s.Ranges = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIPolicyV1beta1IDRange
				{
					elem.SetFake()
				}
				s.Ranges = append(s.Ranges, elem)
			}
		}
	}
	{
		{
			s.Rule = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1RuntimeClassStrategyOptions) SetFake() {
	{
		{
			s.AllowedRuntimeClassNames = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.AllowedRuntimeClassNames = append(s.AllowedRuntimeClassNames, elem)
			}
		}
	}
	{
		{
			s.DefaultRuntimeClassName.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1SELinuxStrategyOptions) SetFake() {
	{
		{
			s.Rule = "string"
		}
	}
	{
		{
			s.SeLinuxOptions.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIPolicyV1beta1SupplementalGroupsStrategyOptions) SetFake() {
	{
		{
			s.Ranges = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIPolicyV1beta1IDRange
				{
					elem.SetFake()
				}
				s.Ranges = append(s.Ranges, elem)
			}
		}
	}
	{
		{
			s.Rule.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1AggregationRule) SetFake() {
	{
		{
			s.ClusterRoleSelectors = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1LabelSelector
				{
					elem.SetFake()
				}
				s.ClusterRoleSelectors = append(s.ClusterRoleSelectors, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1ClusterRole) SetFake() {
	{
		{
			s.AggregationRule.SetFake()
		}
	}
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Rules = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIRbacV1PolicyRule
				{
					elem.SetFake()
				}
				s.Rules = append(s.Rules, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1ClusterRoleBinding) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.RoleRef.SetFake()
		}
	}
	{
		{
			s.Subjects = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIRbacV1Subject
				{
					elem.SetFake()
				}
				s.Subjects = append(s.Subjects, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1ClusterRoleBindingList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIRbacV1ClusterRoleBinding
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1ClusterRoleList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIRbacV1ClusterRole
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1PolicyRule) SetFake() {
	{
		{
			s.ApiGroups = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ApiGroups = append(s.ApiGroups, elem)
			}
		}
	}
	{
		{
			s.NonResourceURLs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.NonResourceURLs = append(s.NonResourceURLs, elem)
			}
		}
	}
	{
		{
			s.ResourceNames = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ResourceNames = append(s.ResourceNames, elem)
			}
		}
	}
	{
		{
			s.Resources = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Resources = append(s.Resources, elem)
			}
		}
	}
	{
		{
			s.Verbs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Verbs = append(s.Verbs, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1Role) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Rules = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIRbacV1PolicyRule
				{
					elem.SetFake()
				}
				s.Rules = append(s.Rules, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1RoleBinding) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.RoleRef.SetFake()
		}
	}
	{
		{
			s.Subjects = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIRbacV1Subject
				{
					elem.SetFake()
				}
				s.Subjects = append(s.Subjects, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1RoleBindingList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIRbacV1RoleBinding
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1RoleList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIRbacV1Role
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1RoleRef) SetFake() {
	{
		{
			s.ApiGroup = "string"
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIRbacV1Subject) SetFake() {
	{
		{
			s.ApiGroup.SetFake()
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Namespace.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPISchedulingV1PriorityClass) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.GlobalDefault.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.PreemptionPolicy.SetFake()
		}
	}
	{
		{
			s.Value = int32(0)
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPISchedulingV1PriorityClassList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPISchedulingV1PriorityClass
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1CSIDriver) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1CSIDriverList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIStorageV1CSIDriver
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1CSIDriverSpec) SetFake() {
	{
		{
			s.AttachRequired.SetFake()
		}
	}
	{
		{
			s.FsGroupPolicy.SetFake()
		}
	}
	{
		{
			s.PodInfoOnMount.SetFake()
		}
	}
	{
		{
			s.RequiresRepublish.SetFake()
		}
	}
	{
		{
			s.StorageCapacity.SetFake()
		}
	}
	{
		{
			s.TokenRequests = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIStorageV1TokenRequest
				{
					elem.SetFake()
				}
				s.TokenRequests = append(s.TokenRequests, elem)
			}
		}
	}
	{
		{
			s.VolumeLifecycleModes = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.VolumeLifecycleModes = append(s.VolumeLifecycleModes, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1CSINode) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1CSINodeDriver) SetFake() {
	{
		{
			s.Allocatable.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.NodeID = "string"
		}
	}
	{
		{
			s.TopologyKeys = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.TopologyKeys = append(s.TopologyKeys, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1CSINodeList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIStorageV1CSINode
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1CSINodeSpec) SetFake() {
	{
		{
			s.Drivers = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIStorageV1CSINodeDriver
				{
					elem.SetFake()
				}
				s.Drivers = append(s.Drivers, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1StorageClass) SetFake() {
	{
		{
			s.AllowVolumeExpansion.SetFake()
		}
	}
	{
		{
			s.AllowedTopologies = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPICoreV1TopologySelectorTerm
				{
					elem.SetFake()
				}
				s.AllowedTopologies = append(s.AllowedTopologies, elem)
			}
		}
	}
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.MountOptions = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.MountOptions = append(s.MountOptions, elem)
			}
		}
	}
	{
		{
			s.Parameters.SetFake()
		}
	}
	{
		{
			s.Provisioner = "string"
		}
	}
	{
		{
			s.ReclaimPolicy.SetFake()
		}
	}
	{
		{
			s.VolumeBindingMode.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1StorageClassList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIStorageV1StorageClass
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1StorageClassParameters) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1TokenRequest) SetFake() {
	{
		{
			s.Audience = "string"
		}
	}
	{
		{
			s.ExpirationSeconds.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1VolumeAttachment) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1VolumeAttachmentList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIStorageV1VolumeAttachment
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1VolumeAttachmentSource) SetFake() {
	{
		{
			s.InlineVolumeSpec.SetFake()
		}
	}
	{
		{
			s.PersistentVolumeName.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1VolumeAttachmentSpec) SetFake() {
	{
		{
			s.Attacher = "string"
		}
	}
	{
		{
			s.NodeName = "string"
		}
	}
	{
		{
			s.Source.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1VolumeAttachmentStatus) SetFake() {
	{
		{
			s.AttachError.SetFake()
		}
	}
	{
		{
			s.Attached = true
		}
	}
	{
		{
			s.AttachmentMetadata.SetFake()
		}
	}
	{
		{
			s.DetachError.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1VolumeAttachmentStatusAttachmentMetadata) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1VolumeError) SetFake() {
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1VolumeNodeResources) SetFake() {
	{
		{
			s.Count.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1alpha1CSIStorageCapacity) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Capacity.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.MaximumVolumeSize.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.NodeTopology.SetFake()
		}
	}
	{
		{
			s.StorageClassName = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1alpha1CSIStorageCapacityList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIStorageV1alpha1CSIStorageCapacity
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1beta1CSIStorageCapacity) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Capacity.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.MaximumVolumeSize.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.NodeTopology.SetFake()
		}
	}
	{
		{
			s.StorageClassName = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sAPIStorageV1beta1CSIStorageCapacityList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sAPIStorageV1beta1CSIStorageCapacity
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition) SetFake() {
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Format.SetFake()
		}
	}
	{
		{
			s.JsonPath = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Priority.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion) SetFake() {
	{
		{
			s.Strategy = "string"
		}
	}
	{
		{
			s.Webhook.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames) SetFake() {
	{
		{
			s.Categories = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Categories = append(s.Categories, elem)
			}
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.ListKind.SetFake()
		}
	}
	{
		{
			s.Plural = "string"
		}
	}
	{
		{
			s.ShortNames = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ShortNames = append(s.ShortNames, elem)
			}
		}
	}
	{
		{
			s.Singular.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec) SetFake() {
	{
		{
			s.Conversion.SetFake()
		}
	}
	{
		{
			s.Group = "string"
		}
	}
	{
		{
			s.Names.SetFake()
		}
	}
	{
		{
			s.PreserveUnknownFields.SetFake()
		}
	}
	{
		{
			s.Scope = "string"
		}
	}
	{
		{
			s.Versions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion
				{
					elem.SetFake()
				}
				s.Versions = append(s.Versions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionStatus) SetFake() {
	{
		{
			s.AcceptedNames.SetFake()
		}
	}
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
	{
		{
			s.StoredVersions = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.StoredVersions = append(s.StoredVersions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion) SetFake() {
	{
		{
			s.AdditionalPrinterColumns = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition
				{
					elem.SetFake()
				}
				s.AdditionalPrinterColumns = append(s.AdditionalPrinterColumns, elem)
			}
		}
	}
	{
		{
			s.Deprecated.SetFake()
		}
	}
	{
		{
			s.DeprecationWarning.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.Schema = nil
		}
	}
	{
		{
			s.Served = true
		}
	}
	{
		{
			s.Storage = true
		}
	}
	{
		{
			s.Subresources.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale) SetFake() {
	{
		{
			s.LabelSelectorPath.SetFake()
		}
	}
	{
		{
			s.SpecReplicasPath = "string"
		}
	}
	{
		{
			s.StatusReplicasPath = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceStatus) SetFake() {
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources) SetFake() {
	{
		{
			s.Scale.SetFake()
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.Status = nil
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation) SetFake() {
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.OpenAPIV3Schema = nil
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation) SetFake() {
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.URL.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSON) SetFake() {
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps) SetFake() {
	{
		{
			s.Ref.SetFake()
		}
	}
	{
		{
			s.Schema.SetFake()
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.AdditionalItems = nil
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.AdditionalProperties = nil
		}
	}
	{
		{
			s.AllOf = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps
				{
					elem.SetFake()
				}
				s.AllOf = append(s.AllOf, elem)
			}
		}
	}
	{
		{
			s.AnyOf = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps
				{
					elem.SetFake()
				}
				s.AnyOf = append(s.AnyOf, elem)
			}
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.Default = nil
		}
	}
	{
		{
			s.Definitions.SetFake()
		}
	}
	{
		{
			s.Dependencies.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Enum = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSON
				{
					elem.SetFake()
				}
				s.Enum = append(s.Enum, elem)
			}
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.Example = nil
		}
	}
	{
		{
			s.ExclusiveMaximum.SetFake()
		}
	}
	{
		{
			s.ExclusiveMinimum.SetFake()
		}
	}
	{
		{
			s.ExternalDocs.SetFake()
		}
	}
	{
		{
			s.Format.SetFake()
		}
	}
	{
		{
			s.ID.SetFake()
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.Items = nil
		}
	}
	{
		{
			s.MaxItems.SetFake()
		}
	}
	{
		{
			s.MaxLength.SetFake()
		}
	}
	{
		{
			s.MaxProperties.SetFake()
		}
	}
	{
		{
			s.Maximum.SetFake()
		}
	}
	{
		{
			s.MinItems.SetFake()
		}
	}
	{
		{
			s.MinLength.SetFake()
		}
	}
	{
		{
			s.MinProperties.SetFake()
		}
	}
	{
		{
			s.Minimum.SetFake()
		}
	}
	{
		{
			s.MultipleOf.SetFake()
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.Not = nil
		}
	}
	{
		{
			s.Nullable.SetFake()
		}
	}
	{
		{
			s.OneOf = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps
				{
					elem.SetFake()
				}
				s.OneOf = append(s.OneOf, elem)
			}
		}
	}
	{
		{
			s.Pattern.SetFake()
		}
	}
	{
		{
			s.PatternProperties.SetFake()
		}
	}
	{
		{
			s.Properties.SetFake()
		}
	}
	{
		{
			s.Required = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Required = append(s.Required, elem)
			}
		}
	}
	{
		{
			s.Title.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
	{
		{
			s.UniqueItems.SetFake()
		}
	}
	{
		{
			s.XMinusKubernetesMinusEmbeddedMinusResource.SetFake()
		}
	}
	{
		{
			s.XMinusKubernetesMinusIntMinusOrMinusString.SetFake()
		}
	}
	{
		{
			s.XMinusKubernetesMinusListMinusMapMinusKeys = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.XMinusKubernetesMinusListMinusMapMinusKeys = append(s.XMinusKubernetesMinusListMinusMapMinusKeys, elem)
			}
		}
	}
	{
		{
			s.XMinusKubernetesMinusListMinusType.SetFake()
		}
	}
	{
		{
			s.XMinusKubernetesMinusMapMinusType.SetFake()
		}
	}
	{
		{
			s.XMinusKubernetesMinusPreserveMinusUnknownMinusFields.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsDefinitions) SetFake() {
	var (
		elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps
		m    map[string]IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsDependencies) SetFake() {
	var (
		elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsOrStringArray
		m    map[string]IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsOrStringArray = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsOrArray) SetFake() {
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsOrBool) SetFake() {
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsOrStringArray) SetFake() {
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsPatternProperties) SetFake() {
	var (
		elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps
		m    map[string]IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsProperties) SetFake() {
	var (
		elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps
		m    map[string]IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1ServiceReference) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Namespace = "string"
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig) SetFake() {
	{
		{
			s.CaBundle = []byte("[]byte")
		}
	}
	{
		{
			s.Service.SetFake()
		}
	}
	{
		{
			s.URL.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion) SetFake() {
	{
		{
			s.ClientConfig.SetFake()
		}
	}
	{
		{
			s.ConversionReviewVersions = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ConversionReviewVersions = append(s.ConversionReviewVersions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgAPIResourceQuantity) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = IoK8sApimachineryPkgAPIResourceQuantity(unwrapped)
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1APIGroup) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.PreferredVersion.SetFake()
		}
	}
	{
		{
			s.ServerAddressByClientCIDRs = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR
				{
					elem.SetFake()
				}
				s.ServerAddressByClientCIDRs = append(s.ServerAddressByClientCIDRs, elem)
			}
		}
	}
	{
		{
			s.Versions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1GroupVersionForDiscovery
				{
					elem.SetFake()
				}
				s.Versions = append(s.Versions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1APIGroupList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Groups = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1APIGroup
				{
					elem.SetFake()
				}
				s.Groups = append(s.Groups, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1APIResource) SetFake() {
	{
		{
			s.Categories = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Categories = append(s.Categories, elem)
			}
		}
	}
	{
		{
			s.Group.SetFake()
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Namespaced = true
		}
	}
	{
		{
			s.ShortNames = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.ShortNames = append(s.ShortNames, elem)
			}
		}
	}
	{
		{
			s.SingularName = "string"
		}
	}
	{
		{
			s.StorageVersionHash.SetFake()
		}
	}
	{
		{
			s.Verbs = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Verbs = append(s.Verbs, elem)
			}
		}
	}
	{
		{
			s.Version.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1APIResourceList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.GroupVersion = "string"
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Resources = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1APIResource
				{
					elem.SetFake()
				}
				s.Resources = append(s.Resources, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1APIVersions) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.ServerAddressByClientCIDRs = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR
				{
					elem.SetFake()
				}
				s.ServerAddressByClientCIDRs = append(s.ServerAddressByClientCIDRs, elem)
			}
		}
	}
	{
		{
			s.Versions = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Versions = append(s.Versions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1Condition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message = "string"
		}
	}
	{
		{
			s.ObservedGeneration.SetFake()
		}
	}
	{
		{
			s.Reason = "string"
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1FieldsV1) SetFake() {
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1GroupVersionForDiscovery) SetFake() {
	{
		{
			s.GroupVersion = "string"
		}
	}
	{
		{
			s.Version = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1LabelSelector) SetFake() {
	{
		{
			s.MatchExpressions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement
				{
					elem.SetFake()
				}
				s.MatchExpressions = append(s.MatchExpressions, elem)
			}
		}
	}
	{
		{
			s.MatchLabels.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1LabelSelectorMatchLabels) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement) SetFake() {
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.Operator = "string"
		}
	}
	{
		{
			s.Values = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Values = append(s.Values, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1ListMeta) SetFake() {
	{
		{
			s.Continue.SetFake()
		}
	}
	{
		{
			s.RemainingItemCount.SetFake()
		}
	}
	{
		{
			s.ResourceVersion.SetFake()
		}
	}
	{
		{
			s.SelfLink.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.FieldsType.SetFake()
		}
	}
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.FieldsV1 = nil
		}
	}
	{
		{
			s.Manager.SetFake()
		}
	}
	{
		{
			s.Operation.SetFake()
		}
	}
	{
		{
			s.Subresource.SetFake()
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1MicroTime) SetFake() {
	var unwrapped time.Time
	{
		unwrapped = time.Now()
	}
	*s = IoK8sApimachineryPkgApisMetaV1MicroTime(unwrapped)
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1ObjectMeta) SetFake() {
	{
		{
			s.Annotations.SetFake()
		}
	}
	{
		{
			s.ClusterName.SetFake()
		}
	}
	{
		{
			s.CreationTimestamp.SetFake()
		}
	}
	{
		{
			s.DeletionGracePeriodSeconds.SetFake()
		}
	}
	{
		{
			s.DeletionTimestamp.SetFake()
		}
	}
	{
		{
			s.Finalizers = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Finalizers = append(s.Finalizers, elem)
			}
		}
	}
	{
		{
			s.GenerateName.SetFake()
		}
	}
	{
		{
			s.Generation.SetFake()
		}
	}
	{
		{
			s.Labels.SetFake()
		}
	}
	{
		{
			s.ManagedFields = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
				{
					elem.SetFake()
				}
				s.ManagedFields = append(s.ManagedFields, elem)
			}
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Namespace.SetFake()
		}
	}
	{
		{
			s.OwnerReferences = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sApimachineryPkgApisMetaV1OwnerReference
				{
					elem.SetFake()
				}
				s.OwnerReferences = append(s.OwnerReferences, elem)
			}
		}
	}
	{
		{
			s.ResourceVersion.SetFake()
		}
	}
	{
		{
			s.SelfLink.SetFake()
		}
	}
	{
		{
			s.UID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1ObjectMetaAnnotations) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1ObjectMetaLabels) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1OwnerReference) SetFake() {
	{
		{
			s.ApiVersion = "string"
		}
	}
	{
		{
			s.BlockOwnerDeletion.SetFake()
		}
	}
	{
		{
			s.Controller.SetFake()
		}
	}
	{
		{
			s.Kind = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.UID = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1Patch) SetFake() {
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR) SetFake() {
	{
		{
			s.ClientCIDR = "string"
		}
	}
	{
		{
			s.ServerAddress = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1Time) SetFake() {
	var unwrapped time.Time
	{
		unwrapped = time.Now()
	}
	*s = IoK8sApimachineryPkgApisMetaV1Time(unwrapped)
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgApisMetaV1WatchEvent) SetFake() {
	{
		{
			s.Object.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgRuntimeRawExtension) SetFake() {
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgUtilIntstrIntOrString) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = IoK8sApimachineryPkgUtilIntstrIntOrString(unwrapped)
}

// SetFake set fake values.
func (s *IoK8sApimachineryPkgVersionInfo) SetFake() {
	{
		{
			s.BuildDate = "string"
		}
	}
	{
		{
			s.Compiler = "string"
		}
	}
	{
		{
			s.GitCommit = "string"
		}
	}
	{
		{
			s.GitTreeState = "string"
		}
	}
	{
		{
			s.GitVersion = "string"
		}
	}
	{
		{
			s.GoVersion = "string"
		}
	}
	{
		{
			s.Major = "string"
		}
	}
	{
		{
			s.Minor = "string"
		}
	}
	{
		{
			s.Platform = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sKubeAggregatorPkgApisApiregistrationV1APIService) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Spec.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceCondition) SetFake() {
	{
		{
			s.LastTransitionTime.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.Reason.SetFake()
		}
	}
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceList) SetFake() {
	{
		{
			s.ApiVersion.SetFake()
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sKubeAggregatorPkgApisApiregistrationV1APIService
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.Kind.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceSpec) SetFake() {
	{
		{
			s.CaBundle = []byte("[]byte")
		}
	}
	{
		{
			s.Group.SetFake()
		}
	}
	{
		{
			s.GroupPriorityMinimum = int32(0)
		}
	}
	{
		{
			s.InsecureSkipTLSVerify.SetFake()
		}
	}
	{
		{
			s.Service.SetFake()
		}
	}
	{
		{
			s.Version.SetFake()
		}
	}
	{
		{
			s.VersionPriority = int32(0)
		}
	}
}

// SetFake set fake values.
func (s *IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceStatus) SetFake() {
	{
		{
			s.Conditions = nil
			for i := 0; i < 0; i++ {
				var elem IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceCondition
				{
					elem.SetFake()
				}
				s.Conditions = append(s.Conditions, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference) SetFake() {
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Namespace.SetFake()
		}
	}
	{
		{
			s.Port.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OptBool) SetFake() {
	var elem bool
	{
		elem = true
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptFloat64) SetFake() {
	var elem float64
	{
		elem = float64(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptInt32) SetFake() {
	var elem int32
	{
		elem = int32(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptInt64) SetFake() {
	var elem int64
	{
		elem = int64(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAdmissionregistrationV1ServiceReference) SetFake() {
	var elem IoK8sAPIAdmissionregistrationV1ServiceReference
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1DaemonSetSpec) SetFake() {
	var elem IoK8sAPIAppsV1DaemonSetSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1DaemonSetStatus) SetFake() {
	var elem IoK8sAPIAppsV1DaemonSetStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1DaemonSetUpdateStrategy) SetFake() {
	var elem IoK8sAPIAppsV1DaemonSetUpdateStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1DeploymentSpec) SetFake() {
	var elem IoK8sAPIAppsV1DeploymentSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1DeploymentStatus) SetFake() {
	var elem IoK8sAPIAppsV1DeploymentStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1DeploymentStrategy) SetFake() {
	var elem IoK8sAPIAppsV1DeploymentStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1ReplicaSetSpec) SetFake() {
	var elem IoK8sAPIAppsV1ReplicaSetSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1ReplicaSetStatus) SetFake() {
	var elem IoK8sAPIAppsV1ReplicaSetStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1RollingUpdateDaemonSet) SetFake() {
	var elem IoK8sAPIAppsV1RollingUpdateDaemonSet
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1RollingUpdateDeployment) SetFake() {
	var elem IoK8sAPIAppsV1RollingUpdateDeployment
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1RollingUpdateStatefulSetStrategy) SetFake() {
	var elem IoK8sAPIAppsV1RollingUpdateStatefulSetStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1StatefulSetSpec) SetFake() {
	var elem IoK8sAPIAppsV1StatefulSetSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1StatefulSetStatus) SetFake() {
	var elem IoK8sAPIAppsV1StatefulSetStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAppsV1StatefulSetUpdateStrategy) SetFake() {
	var elem IoK8sAPIAppsV1StatefulSetUpdateStrategy
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV1HorizontalPodAutoscalerSpec) SetFake() {
	var elem IoK8sAPIAutoscalingV1HorizontalPodAutoscalerSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV1HorizontalPodAutoscalerStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV1HorizontalPodAutoscalerStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV1ScaleSpec) SetFake() {
	var elem IoK8sAPIAutoscalingV1ScaleSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV1ScaleStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV1ScaleStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1ContainerResourceMetricSource) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1ContainerResourceMetricSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1ContainerResourceMetricStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1ContainerResourceMetricStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1ExternalMetricSource) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1ExternalMetricSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1ExternalMetricStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1ExternalMetricStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1HorizontalPodAutoscalerSpec) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscalerSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1HorizontalPodAutoscalerStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscalerStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1ObjectMetricSource) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1ObjectMetricSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1ObjectMetricStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1ObjectMetricStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1PodsMetricSource) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1PodsMetricSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1PodsMetricStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1PodsMetricStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1ResourceMetricSource) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1ResourceMetricSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta1ResourceMetricStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta1ResourceMetricStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2ContainerResourceMetricSource) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2ContainerResourceMetricSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2ContainerResourceMetricStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2ContainerResourceMetricStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2ExternalMetricSource) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2ExternalMetricSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2ExternalMetricStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2ExternalMetricStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2HPAScalingRules) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2HPAScalingRules
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerBehavior) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerBehavior
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerSpec) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscalerStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2ObjectMetricSource) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2ObjectMetricSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2ObjectMetricStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2ObjectMetricStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2PodsMetricSource) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2PodsMetricSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2PodsMetricStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2PodsMetricStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2ResourceMetricSource) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2ResourceMetricSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIAutoscalingV2beta2ResourceMetricStatus) SetFake() {
	var elem IoK8sAPIAutoscalingV2beta2ResourceMetricStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIBatchV1CronJobSpec) SetFake() {
	var elem IoK8sAPIBatchV1CronJobSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIBatchV1CronJobStatus) SetFake() {
	var elem IoK8sAPIBatchV1CronJobStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIBatchV1JobSpec) SetFake() {
	var elem IoK8sAPIBatchV1JobSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIBatchV1JobStatus) SetFake() {
	var elem IoK8sAPIBatchV1JobStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIBatchV1UncountedTerminatedPods) SetFake() {
	var elem IoK8sAPIBatchV1UncountedTerminatedPods
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIBatchV1beta1CronJobSpec) SetFake() {
	var elem IoK8sAPIBatchV1beta1CronJobSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIBatchV1beta1CronJobStatus) SetFake() {
	var elem IoK8sAPIBatchV1beta1CronJobStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICertificatesV1CertificateSigningRequestSpecExtra) SetFake() {
	var elem IoK8sAPICertificatesV1CertificateSigningRequestSpecExtra
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICertificatesV1CertificateSigningRequestStatus) SetFake() {
	var elem IoK8sAPICertificatesV1CertificateSigningRequestStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoordinationV1LeaseSpec) SetFake() {
	var elem IoK8sAPICoordinationV1LeaseSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1AWSElasticBlockStoreVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1AWSElasticBlockStoreVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1Affinity) SetFake() {
	var elem IoK8sAPICoreV1Affinity
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1AzureDiskVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1AzureDiskVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1AzureFilePersistentVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1AzureFilePersistentVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1AzureFileVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1AzureFileVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1CSIPersistentVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1CSIPersistentVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1CSIPersistentVolumeSourceVolumeAttributes) SetFake() {
	var elem IoK8sAPICoreV1CSIPersistentVolumeSourceVolumeAttributes
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1CSIVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1CSIVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1CSIVolumeSourceVolumeAttributes) SetFake() {
	var elem IoK8sAPICoreV1CSIVolumeSourceVolumeAttributes
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1Capabilities) SetFake() {
	var elem IoK8sAPICoreV1Capabilities
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1CephFSPersistentVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1CephFSPersistentVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1CephFSVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1CephFSVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1CinderPersistentVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1CinderPersistentVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1CinderVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1CinderVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ClientIPConfig) SetFake() {
	var elem IoK8sAPICoreV1ClientIPConfig
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ConfigMapBinaryData) SetFake() {
	var elem IoK8sAPICoreV1ConfigMapBinaryData
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ConfigMapData) SetFake() {
	var elem IoK8sAPICoreV1ConfigMapData
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ConfigMapEnvSource) SetFake() {
	var elem IoK8sAPICoreV1ConfigMapEnvSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ConfigMapKeySelector) SetFake() {
	var elem IoK8sAPICoreV1ConfigMapKeySelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ConfigMapNodeConfigSource) SetFake() {
	var elem IoK8sAPICoreV1ConfigMapNodeConfigSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ConfigMapProjection) SetFake() {
	var elem IoK8sAPICoreV1ConfigMapProjection
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ConfigMapVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1ConfigMapVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ContainerState) SetFake() {
	var elem IoK8sAPICoreV1ContainerState
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ContainerStateRunning) SetFake() {
	var elem IoK8sAPICoreV1ContainerStateRunning
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ContainerStateTerminated) SetFake() {
	var elem IoK8sAPICoreV1ContainerStateTerminated
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ContainerStateWaiting) SetFake() {
	var elem IoK8sAPICoreV1ContainerStateWaiting
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1DaemonEndpoint) SetFake() {
	var elem IoK8sAPICoreV1DaemonEndpoint
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1DownwardAPIProjection) SetFake() {
	var elem IoK8sAPICoreV1DownwardAPIProjection
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1DownwardAPIVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1DownwardAPIVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1EmptyDirVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1EmptyDirVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1EnvVarSource) SetFake() {
	var elem IoK8sAPICoreV1EnvVarSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1EphemeralVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1EphemeralVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1EventSeries) SetFake() {
	var elem IoK8sAPICoreV1EventSeries
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1EventSource) SetFake() {
	var elem IoK8sAPICoreV1EventSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ExecAction) SetFake() {
	var elem IoK8sAPICoreV1ExecAction
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1FCVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1FCVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1FlexPersistentVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1FlexPersistentVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1FlexPersistentVolumeSourceOptions) SetFake() {
	var elem IoK8sAPICoreV1FlexPersistentVolumeSourceOptions
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1FlexVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1FlexVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1FlexVolumeSourceOptions) SetFake() {
	var elem IoK8sAPICoreV1FlexVolumeSourceOptions
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1FlockerVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1FlockerVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1GCEPersistentDiskVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1GCEPersistentDiskVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1GitRepoVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1GitRepoVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1GlusterfsPersistentVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1GlusterfsPersistentVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1GlusterfsVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1GlusterfsVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1HTTPGetAction) SetFake() {
	var elem IoK8sAPICoreV1HTTPGetAction
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1Handler) SetFake() {
	var elem IoK8sAPICoreV1Handler
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1HostPathVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1HostPathVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ISCSIPersistentVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1ISCSIPersistentVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ISCSIVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1ISCSIVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1Lifecycle) SetFake() {
	var elem IoK8sAPICoreV1Lifecycle
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1LimitRangeItemDefault) SetFake() {
	var elem IoK8sAPICoreV1LimitRangeItemDefault
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1LimitRangeItemDefaultRequest) SetFake() {
	var elem IoK8sAPICoreV1LimitRangeItemDefaultRequest
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1LimitRangeItemMax) SetFake() {
	var elem IoK8sAPICoreV1LimitRangeItemMax
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1LimitRangeItemMaxLimitRequestRatio) SetFake() {
	var elem IoK8sAPICoreV1LimitRangeItemMaxLimitRequestRatio
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1LimitRangeItemMin) SetFake() {
	var elem IoK8sAPICoreV1LimitRangeItemMin
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1LimitRangeSpec) SetFake() {
	var elem IoK8sAPICoreV1LimitRangeSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1LoadBalancerStatus) SetFake() {
	var elem IoK8sAPICoreV1LoadBalancerStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1LocalObjectReference) SetFake() {
	var elem IoK8sAPICoreV1LocalObjectReference
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1LocalVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1LocalVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NFSVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1NFSVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NamespaceSpec) SetFake() {
	var elem IoK8sAPICoreV1NamespaceSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NamespaceStatus) SetFake() {
	var elem IoK8sAPICoreV1NamespaceStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NodeAffinity) SetFake() {
	var elem IoK8sAPICoreV1NodeAffinity
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NodeConfigSource) SetFake() {
	var elem IoK8sAPICoreV1NodeConfigSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NodeConfigStatus) SetFake() {
	var elem IoK8sAPICoreV1NodeConfigStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NodeDaemonEndpoints) SetFake() {
	var elem IoK8sAPICoreV1NodeDaemonEndpoints
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NodeSelector) SetFake() {
	var elem IoK8sAPICoreV1NodeSelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NodeSpec) SetFake() {
	var elem IoK8sAPICoreV1NodeSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NodeStatus) SetFake() {
	var elem IoK8sAPICoreV1NodeStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NodeStatusAllocatable) SetFake() {
	var elem IoK8sAPICoreV1NodeStatusAllocatable
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NodeStatusCapacity) SetFake() {
	var elem IoK8sAPICoreV1NodeStatusCapacity
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1NodeSystemInfo) SetFake() {
	var elem IoK8sAPICoreV1NodeSystemInfo
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ObjectFieldSelector) SetFake() {
	var elem IoK8sAPICoreV1ObjectFieldSelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ObjectReference) SetFake() {
	var elem IoK8sAPICoreV1ObjectReference
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PersistentVolumeClaimSpec) SetFake() {
	var elem IoK8sAPICoreV1PersistentVolumeClaimSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PersistentVolumeClaimStatus) SetFake() {
	var elem IoK8sAPICoreV1PersistentVolumeClaimStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PersistentVolumeClaimStatusCapacity) SetFake() {
	var elem IoK8sAPICoreV1PersistentVolumeClaimStatusCapacity
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PersistentVolumeClaimTemplate) SetFake() {
	var elem IoK8sAPICoreV1PersistentVolumeClaimTemplate
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PersistentVolumeClaimVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1PersistentVolumeClaimVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PersistentVolumeSpec) SetFake() {
	var elem IoK8sAPICoreV1PersistentVolumeSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PersistentVolumeSpecCapacity) SetFake() {
	var elem IoK8sAPICoreV1PersistentVolumeSpecCapacity
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PersistentVolumeStatus) SetFake() {
	var elem IoK8sAPICoreV1PersistentVolumeStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PhotonPersistentDiskVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1PhotonPersistentDiskVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PodAffinity) SetFake() {
	var elem IoK8sAPICoreV1PodAffinity
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PodAntiAffinity) SetFake() {
	var elem IoK8sAPICoreV1PodAntiAffinity
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PodDNSConfig) SetFake() {
	var elem IoK8sAPICoreV1PodDNSConfig
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PodSecurityContext) SetFake() {
	var elem IoK8sAPICoreV1PodSecurityContext
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PodSpec) SetFake() {
	var elem IoK8sAPICoreV1PodSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PodSpecNodeSelector) SetFake() {
	var elem IoK8sAPICoreV1PodSpecNodeSelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PodSpecOverhead) SetFake() {
	var elem IoK8sAPICoreV1PodSpecOverhead
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PodStatus) SetFake() {
	var elem IoK8sAPICoreV1PodStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PodTemplateSpec) SetFake() {
	var elem IoK8sAPICoreV1PodTemplateSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1PortworxVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1PortworxVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1Probe) SetFake() {
	var elem IoK8sAPICoreV1Probe
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ProjectedVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1ProjectedVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1QuobyteVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1QuobyteVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1RBDPersistentVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1RBDPersistentVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1RBDVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1RBDVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ReplicationControllerSpec) SetFake() {
	var elem IoK8sAPICoreV1ReplicationControllerSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ReplicationControllerSpecSelector) SetFake() {
	var elem IoK8sAPICoreV1ReplicationControllerSpecSelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ReplicationControllerStatus) SetFake() {
	var elem IoK8sAPICoreV1ReplicationControllerStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ResourceFieldSelector) SetFake() {
	var elem IoK8sAPICoreV1ResourceFieldSelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ResourceQuotaSpec) SetFake() {
	var elem IoK8sAPICoreV1ResourceQuotaSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ResourceQuotaSpecHard) SetFake() {
	var elem IoK8sAPICoreV1ResourceQuotaSpecHard
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ResourceQuotaStatus) SetFake() {
	var elem IoK8sAPICoreV1ResourceQuotaStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ResourceQuotaStatusHard) SetFake() {
	var elem IoK8sAPICoreV1ResourceQuotaStatusHard
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ResourceQuotaStatusUsed) SetFake() {
	var elem IoK8sAPICoreV1ResourceQuotaStatusUsed
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ResourceRequirements) SetFake() {
	var elem IoK8sAPICoreV1ResourceRequirements
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ResourceRequirementsLimits) SetFake() {
	var elem IoK8sAPICoreV1ResourceRequirementsLimits
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ResourceRequirementsRequests) SetFake() {
	var elem IoK8sAPICoreV1ResourceRequirementsRequests
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1SELinuxOptions) SetFake() {
	var elem IoK8sAPICoreV1SELinuxOptions
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ScaleIOPersistentVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1ScaleIOPersistentVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ScaleIOVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1ScaleIOVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ScopeSelector) SetFake() {
	var elem IoK8sAPICoreV1ScopeSelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1SeccompProfile) SetFake() {
	var elem IoK8sAPICoreV1SeccompProfile
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1SecretData) SetFake() {
	var elem IoK8sAPICoreV1SecretData
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1SecretEnvSource) SetFake() {
	var elem IoK8sAPICoreV1SecretEnvSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1SecretKeySelector) SetFake() {
	var elem IoK8sAPICoreV1SecretKeySelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1SecretProjection) SetFake() {
	var elem IoK8sAPICoreV1SecretProjection
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1SecretReference) SetFake() {
	var elem IoK8sAPICoreV1SecretReference
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1SecretStringData) SetFake() {
	var elem IoK8sAPICoreV1SecretStringData
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1SecretVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1SecretVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1SecurityContext) SetFake() {
	var elem IoK8sAPICoreV1SecurityContext
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ServiceAccountTokenProjection) SetFake() {
	var elem IoK8sAPICoreV1ServiceAccountTokenProjection
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ServiceSpec) SetFake() {
	var elem IoK8sAPICoreV1ServiceSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ServiceSpecSelector) SetFake() {
	var elem IoK8sAPICoreV1ServiceSpecSelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1ServiceStatus) SetFake() {
	var elem IoK8sAPICoreV1ServiceStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1SessionAffinityConfig) SetFake() {
	var elem IoK8sAPICoreV1SessionAffinityConfig
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1StorageOSPersistentVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1StorageOSPersistentVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1StorageOSVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1StorageOSVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1TCPSocketAction) SetFake() {
	var elem IoK8sAPICoreV1TCPSocketAction
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1TypedLocalObjectReference) SetFake() {
	var elem IoK8sAPICoreV1TypedLocalObjectReference
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1VolumeNodeAffinity) SetFake() {
	var elem IoK8sAPICoreV1VolumeNodeAffinity
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1VsphereVirtualDiskVolumeSource) SetFake() {
	var elem IoK8sAPICoreV1VsphereVirtualDiskVolumeSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPICoreV1WindowsSecurityContextOptions) SetFake() {
	var elem IoK8sAPICoreV1WindowsSecurityContextOptions
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIDiscoveryV1EndpointConditions) SetFake() {
	var elem IoK8sAPIDiscoveryV1EndpointConditions
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIDiscoveryV1EndpointDeprecatedTopology) SetFake() {
	var elem IoK8sAPIDiscoveryV1EndpointDeprecatedTopology
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIDiscoveryV1EndpointHints) SetFake() {
	var elem IoK8sAPIDiscoveryV1EndpointHints
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIDiscoveryV1beta1EndpointConditions) SetFake() {
	var elem IoK8sAPIDiscoveryV1beta1EndpointConditions
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIDiscoveryV1beta1EndpointHints) SetFake() {
	var elem IoK8sAPIDiscoveryV1beta1EndpointHints
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIDiscoveryV1beta1EndpointTopology) SetFake() {
	var elem IoK8sAPIDiscoveryV1beta1EndpointTopology
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIEventsV1EventSeries) SetFake() {
	var elem IoK8sAPIEventsV1EventSeries
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIEventsV1beta1EventSeries) SetFake() {
	var elem IoK8sAPIEventsV1beta1EventSeries
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta1FlowDistinguisherMethod) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta1FlowDistinguisherMethod
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta1FlowSchemaSpec) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta1FlowSchemaSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta1FlowSchemaStatus) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta1FlowSchemaStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta1GroupSubject) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta1GroupSubject
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta1LimitResponse) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta1LimitResponse
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta1LimitedPriorityLevelConfiguration) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta1LimitedPriorityLevelConfiguration
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta1PriorityLevelConfigurationSpec) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta1PriorityLevelConfigurationSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta1PriorityLevelConfigurationStatus) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta1PriorityLevelConfigurationStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta1QueuingConfiguration) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta1QueuingConfiguration
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta1ServiceAccountSubject) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta1ServiceAccountSubject
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta1UserSubject) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta1UserSubject
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta2FlowDistinguisherMethod) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta2FlowDistinguisherMethod
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta2FlowSchemaSpec) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta2FlowSchemaSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta2FlowSchemaStatus) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta2FlowSchemaStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta2GroupSubject) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta2GroupSubject
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta2LimitResponse) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta2LimitResponse
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta2LimitedPriorityLevelConfiguration) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta2LimitedPriorityLevelConfiguration
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta2PriorityLevelConfigurationSpec) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta2PriorityLevelConfigurationSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta2PriorityLevelConfigurationStatus) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta2PriorityLevelConfigurationStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta2QueuingConfiguration) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta2QueuingConfiguration
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta2ServiceAccountSubject) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta2ServiceAccountSubject
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIFlowcontrolV1beta2UserSubject) SetFake() {
	var elem IoK8sAPIFlowcontrolV1beta2UserSubject
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINetworkingV1HTTPIngressRuleValue) SetFake() {
	var elem IoK8sAPINetworkingV1HTTPIngressRuleValue
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINetworkingV1IPBlock) SetFake() {
	var elem IoK8sAPINetworkingV1IPBlock
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINetworkingV1IngressBackend) SetFake() {
	var elem IoK8sAPINetworkingV1IngressBackend
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINetworkingV1IngressClassParametersReference) SetFake() {
	var elem IoK8sAPINetworkingV1IngressClassParametersReference
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINetworkingV1IngressClassSpec) SetFake() {
	var elem IoK8sAPINetworkingV1IngressClassSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINetworkingV1IngressServiceBackend) SetFake() {
	var elem IoK8sAPINetworkingV1IngressServiceBackend
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINetworkingV1IngressSpec) SetFake() {
	var elem IoK8sAPINetworkingV1IngressSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINetworkingV1IngressStatus) SetFake() {
	var elem IoK8sAPINetworkingV1IngressStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINetworkingV1NetworkPolicySpec) SetFake() {
	var elem IoK8sAPINetworkingV1NetworkPolicySpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINetworkingV1ServiceBackendPort) SetFake() {
	var elem IoK8sAPINetworkingV1ServiceBackendPort
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1Overhead) SetFake() {
	var elem IoK8sAPINodeV1Overhead
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1OverheadPodFixed) SetFake() {
	var elem IoK8sAPINodeV1OverheadPodFixed
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1Scheduling) SetFake() {
	var elem IoK8sAPINodeV1Scheduling
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1SchedulingNodeSelector) SetFake() {
	var elem IoK8sAPINodeV1SchedulingNodeSelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1alpha1Overhead) SetFake() {
	var elem IoK8sAPINodeV1alpha1Overhead
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1alpha1OverheadPodFixed) SetFake() {
	var elem IoK8sAPINodeV1alpha1OverheadPodFixed
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1alpha1Scheduling) SetFake() {
	var elem IoK8sAPINodeV1alpha1Scheduling
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1alpha1SchedulingNodeSelector) SetFake() {
	var elem IoK8sAPINodeV1alpha1SchedulingNodeSelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1beta1Overhead) SetFake() {
	var elem IoK8sAPINodeV1beta1Overhead
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1beta1OverheadPodFixed) SetFake() {
	var elem IoK8sAPINodeV1beta1OverheadPodFixed
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1beta1Scheduling) SetFake() {
	var elem IoK8sAPINodeV1beta1Scheduling
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPINodeV1beta1SchedulingNodeSelector) SetFake() {
	var elem IoK8sAPINodeV1beta1SchedulingNodeSelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIPolicyV1PodDisruptionBudgetSpec) SetFake() {
	var elem IoK8sAPIPolicyV1PodDisruptionBudgetSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIPolicyV1PodDisruptionBudgetStatus) SetFake() {
	var elem IoK8sAPIPolicyV1PodDisruptionBudgetStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIPolicyV1PodDisruptionBudgetStatusDisruptedPods) SetFake() {
	var elem IoK8sAPIPolicyV1PodDisruptionBudgetStatusDisruptedPods
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIPolicyV1beta1PodDisruptionBudgetSpec) SetFake() {
	var elem IoK8sAPIPolicyV1beta1PodDisruptionBudgetSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIPolicyV1beta1PodDisruptionBudgetStatus) SetFake() {
	var elem IoK8sAPIPolicyV1beta1PodDisruptionBudgetStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIPolicyV1beta1PodDisruptionBudgetStatusDisruptedPods) SetFake() {
	var elem IoK8sAPIPolicyV1beta1PodDisruptionBudgetStatusDisruptedPods
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIPolicyV1beta1PodSecurityPolicySpec) SetFake() {
	var elem IoK8sAPIPolicyV1beta1PodSecurityPolicySpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIPolicyV1beta1RunAsGroupStrategyOptions) SetFake() {
	var elem IoK8sAPIPolicyV1beta1RunAsGroupStrategyOptions
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIPolicyV1beta1RuntimeClassStrategyOptions) SetFake() {
	var elem IoK8sAPIPolicyV1beta1RuntimeClassStrategyOptions
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIRbacV1AggregationRule) SetFake() {
	var elem IoK8sAPIRbacV1AggregationRule
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIStorageV1StorageClassParameters) SetFake() {
	var elem IoK8sAPIStorageV1StorageClassParameters
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIStorageV1VolumeAttachmentStatus) SetFake() {
	var elem IoK8sAPIStorageV1VolumeAttachmentStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIStorageV1VolumeAttachmentStatusAttachmentMetadata) SetFake() {
	var elem IoK8sAPIStorageV1VolumeAttachmentStatusAttachmentMetadata
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIStorageV1VolumeError) SetFake() {
	var elem IoK8sAPIStorageV1VolumeError
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sAPIStorageV1VolumeNodeResources) SetFake() {
	var elem IoK8sAPIStorageV1VolumeNodeResources
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionStatus) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsDefinitions) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsDefinitions
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsDependencies) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsDependencies
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsPatternProperties) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsPatternProperties
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsProperties) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsProperties
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1ServiceReference) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1ServiceReference
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion) SetFake() {
	var elem IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApimachineryPkgAPIResourceQuantity) SetFake() {
	var elem IoK8sApimachineryPkgAPIResourceQuantity
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApimachineryPkgApisMetaV1GroupVersionForDiscovery) SetFake() {
	var elem IoK8sApimachineryPkgApisMetaV1GroupVersionForDiscovery
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApimachineryPkgApisMetaV1LabelSelector) SetFake() {
	var elem IoK8sApimachineryPkgApisMetaV1LabelSelector
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApimachineryPkgApisMetaV1LabelSelectorMatchLabels) SetFake() {
	var elem IoK8sApimachineryPkgApisMetaV1LabelSelectorMatchLabels
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApimachineryPkgApisMetaV1ListMeta) SetFake() {
	var elem IoK8sApimachineryPkgApisMetaV1ListMeta
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApimachineryPkgApisMetaV1MicroTime) SetFake() {
	var elem IoK8sApimachineryPkgApisMetaV1MicroTime
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApimachineryPkgApisMetaV1ObjectMeta) SetFake() {
	var elem IoK8sApimachineryPkgApisMetaV1ObjectMeta
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApimachineryPkgApisMetaV1ObjectMetaAnnotations) SetFake() {
	var elem IoK8sApimachineryPkgApisMetaV1ObjectMetaAnnotations
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApimachineryPkgApisMetaV1ObjectMetaLabels) SetFake() {
	var elem IoK8sApimachineryPkgApisMetaV1ObjectMetaLabels
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApimachineryPkgApisMetaV1Time) SetFake() {
	var elem IoK8sApimachineryPkgApisMetaV1Time
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sApimachineryPkgUtilIntstrIntOrString) SetFake() {
	var elem IoK8sApimachineryPkgUtilIntstrIntOrString
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceSpec) SetFake() {
	var elem IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceSpec
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceStatus) SetFake() {
	var elem IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceStatus
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference) SetFake() {
	var elem IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string
	{
		elem = "string"
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *PatchCoreV1NamespacedConfigMapCreated) SetFake() {
	var unwrapped IoK8sAPICoreV1ConfigMap
	{
		unwrapped.SetFake()
	}
	*s = PatchCoreV1NamespacedConfigMapCreated(unwrapped)
}

// SetFake set fake values.
func (s *PatchCoreV1NamespacedConfigMapOK) SetFake() {
	var unwrapped IoK8sAPICoreV1ConfigMap
	{
		unwrapped.SetFake()
	}
	*s = PatchCoreV1NamespacedConfigMapOK(unwrapped)
}

// SetFake set fake values.
func (s *ReadCoreV1NamespacedPodLogOKApplicationJSON) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = ReadCoreV1NamespacedPodLogOKApplicationJSON(unwrapped)
}
