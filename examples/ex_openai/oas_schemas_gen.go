// Code generated by ogen, DO NOT EDIT.

package api

import (
	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	ht "github.com/ogen-go/ogen/http"
)

// Ref: #/components/schemas/ChatCompletionRequestMessage
type ChatCompletionRequestMessage struct {
	// The role of the author of this message.
	Role ChatCompletionRequestMessageRole `json:"role"`
	// The contents of the message.
	Content string `json:"content"`
	// The name of the user in a multi-user chat.
	Name OptString `json:"name"`
}

// GetRole returns the value of Role.
func (s *ChatCompletionRequestMessage) GetRole() ChatCompletionRequestMessageRole {
	return s.Role
}

// GetContent returns the value of Content.
func (s *ChatCompletionRequestMessage) GetContent() string {
	return s.Content
}

// GetName returns the value of Name.
func (s *ChatCompletionRequestMessage) GetName() OptString {
	return s.Name
}

// SetRole sets the value of Role.
func (s *ChatCompletionRequestMessage) SetRole(val ChatCompletionRequestMessageRole) {
	s.Role = val
}

// SetContent sets the value of Content.
func (s *ChatCompletionRequestMessage) SetContent(val string) {
	s.Content = val
}

// SetName sets the value of Name.
func (s *ChatCompletionRequestMessage) SetName(val OptString) {
	s.Name = val
}

// The role of the author of this message.
type ChatCompletionRequestMessageRole string

const (
	ChatCompletionRequestMessageRoleSystem    ChatCompletionRequestMessageRole = "system"
	ChatCompletionRequestMessageRoleUser      ChatCompletionRequestMessageRole = "user"
	ChatCompletionRequestMessageRoleAssistant ChatCompletionRequestMessageRole = "assistant"
)

// AllValues returns all ChatCompletionRequestMessageRole values.
func (ChatCompletionRequestMessageRole) AllValues() []ChatCompletionRequestMessageRole {
	return []ChatCompletionRequestMessageRole{
		ChatCompletionRequestMessageRoleSystem,
		ChatCompletionRequestMessageRoleUser,
		ChatCompletionRequestMessageRoleAssistant,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ChatCompletionRequestMessageRole) MarshalText() ([]byte, error) {
	switch s {
	case ChatCompletionRequestMessageRoleSystem:
		return []byte(s), nil
	case ChatCompletionRequestMessageRoleUser:
		return []byte(s), nil
	case ChatCompletionRequestMessageRoleAssistant:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ChatCompletionRequestMessageRole) UnmarshalText(data []byte) error {
	switch ChatCompletionRequestMessageRole(data) {
	case ChatCompletionRequestMessageRoleSystem:
		*s = ChatCompletionRequestMessageRoleSystem
		return nil
	case ChatCompletionRequestMessageRoleUser:
		*s = ChatCompletionRequestMessageRoleUser
		return nil
	case ChatCompletionRequestMessageRoleAssistant:
		*s = ChatCompletionRequestMessageRoleAssistant
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/ChatCompletionResponseMessage
type ChatCompletionResponseMessage struct {
	// The role of the author of this message.
	Role ChatCompletionResponseMessageRole `json:"role"`
	// The contents of the message.
	Content string `json:"content"`
}

// GetRole returns the value of Role.
func (s *ChatCompletionResponseMessage) GetRole() ChatCompletionResponseMessageRole {
	return s.Role
}

// GetContent returns the value of Content.
func (s *ChatCompletionResponseMessage) GetContent() string {
	return s.Content
}

// SetRole sets the value of Role.
func (s *ChatCompletionResponseMessage) SetRole(val ChatCompletionResponseMessageRole) {
	s.Role = val
}

// SetContent sets the value of Content.
func (s *ChatCompletionResponseMessage) SetContent(val string) {
	s.Content = val
}

// The role of the author of this message.
type ChatCompletionResponseMessageRole string

const (
	ChatCompletionResponseMessageRoleSystem    ChatCompletionResponseMessageRole = "system"
	ChatCompletionResponseMessageRoleUser      ChatCompletionResponseMessageRole = "user"
	ChatCompletionResponseMessageRoleAssistant ChatCompletionResponseMessageRole = "assistant"
)

// AllValues returns all ChatCompletionResponseMessageRole values.
func (ChatCompletionResponseMessageRole) AllValues() []ChatCompletionResponseMessageRole {
	return []ChatCompletionResponseMessageRole{
		ChatCompletionResponseMessageRoleSystem,
		ChatCompletionResponseMessageRoleUser,
		ChatCompletionResponseMessageRoleAssistant,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ChatCompletionResponseMessageRole) MarshalText() ([]byte, error) {
	switch s {
	case ChatCompletionResponseMessageRoleSystem:
		return []byte(s), nil
	case ChatCompletionResponseMessageRoleUser:
		return []byte(s), nil
	case ChatCompletionResponseMessageRoleAssistant:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ChatCompletionResponseMessageRole) UnmarshalText(data []byte) error {
	switch ChatCompletionResponseMessageRole(data) {
	case ChatCompletionResponseMessageRoleSystem:
		*s = ChatCompletionResponseMessageRoleSystem
		return nil
	case ChatCompletionResponseMessageRoleUser:
		*s = ChatCompletionResponseMessageRoleUser
		return nil
	case ChatCompletionResponseMessageRoleAssistant:
		*s = ChatCompletionResponseMessageRoleAssistant
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateAnswerRequest
type CreateAnswerRequest struct {
	// ID of the model to use for completion. You can select one of `ada`, `babbage`, `curie`, or
	// `davinci`.
	Model string `json:"model"`
	// Question to get answered.
	Question string `json:"question"`
	// List of (question, answer) pairs that will help steer the model towards the tone and answer format
	// you'd like. We recommend adding 2 to 3 examples.
	Examples [][]string `json:"examples"`
	// A text snippet containing the contextual information used to generate the answers for the
	// `examples` you provide.
	ExamplesContext string `json:"examples_context"`
	// List of documents from which the answer for the input `question` should be derived. If this is an
	// empty list, the question will be answered based on the question-answer examples.
	// You should specify either `documents` or a `file`, but not both.
	Documents OptNilStringArray `json:"documents"`
	// The ID of an uploaded file that contains documents to search over. See [upload
	// file](/docs/api-reference/files/upload) for how to upload a file of the desired format and purpose.
	// You should specify either `documents` or a `file`, but not both.
	File OptNilString `json:"file"`
	// ID of the model to use for [Search](/docs/api-reference/searches/create). You can select one of
	// `ada`, `babbage`, `curie`, or `davinci`.
	SearchModel OptNilString `json:"search_model"`
	// The maximum number of documents to be ranked by [Search](/docs/api-reference/searches/create) when
	// using `file`. Setting it to a higher value leads to improved accuracy but with increased latency
	// and cost.
	MaxRerank OptNilInt `json:"max_rerank"`
	// What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output
	// more random, while lower values like 0.2 will make it more focused and deterministic.
	Temperature OptNilFloat64 `json:"temperature"`
	// Include the log probabilities on the `logprobs` most likely tokens, as well the chosen tokens. For
	// example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will
	// always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in
	// the response.
	// The maximum value for `logprobs` is 5. If you need more than this, please contact us through our
	// [Help center](https://help.openai.com) and describe your use case.
	// When `logprobs` is set, `completion` will be automatically added into `expand` to get the logprobs.
	Logprobs OptNilInt `json:"logprobs"`
	// The maximum number of tokens allowed for the generated answer.
	MaxTokens OptNilInt `json:"max_tokens"`
	// Up to 4 sequences where the API will stop generating further tokens. The returned text will not
	// contain the stop sequence.
	Stop OptNilCreateAnswerRequestStop `json:"stop"`
	// How many answers to generate for each question.
	N OptNilInt `json:"n"`
	// Modify the likelihood of specified tokens appearing in the completion.
	// Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an
	// associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe)
	// (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is
	// added to the logits generated by the model prior to sampling. The exact effect will vary per model,
	//  but values between -1 and 1 should decrease or increase likelihood of selection; values like -100
	// or 100 should result in a ban or exclusive selection of the relevant token.
	// As an example, you can pass `{"50256": -100}` to prevent the <|endoftext|> token from being
	// generated.
	LogitBias OptCreateAnswerRequestLogitBias `json:"logit_bias"`
	// A special boolean flag for showing metadata. If set to `true`, each document entry in the returned
	// JSON will contain a "metadata" field.
	// This flag only takes effect when `file` is set.
	ReturnMetadata OptNilBool `json:"return_metadata"`
	// If set to `true`, the returned JSON will include a "prompt" field containing the final prompt that
	// was used to request a completion. This is mainly useful for debugging purposes.
	ReturnPrompt OptNilBool `json:"return_prompt"`
	// If an object name is in the list, we provide the full information of the object; otherwise, we
	// only provide the object ID. Currently we support `completion` and `file` objects for expansion.
	Expand OptNilAnyArray `json:"expand"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetModel returns the value of Model.
func (s *CreateAnswerRequest) GetModel() string {
	return s.Model
}

// GetQuestion returns the value of Question.
func (s *CreateAnswerRequest) GetQuestion() string {
	return s.Question
}

// GetExamples returns the value of Examples.
func (s *CreateAnswerRequest) GetExamples() [][]string {
	return s.Examples
}

// GetExamplesContext returns the value of ExamplesContext.
func (s *CreateAnswerRequest) GetExamplesContext() string {
	return s.ExamplesContext
}

// GetDocuments returns the value of Documents.
func (s *CreateAnswerRequest) GetDocuments() OptNilStringArray {
	return s.Documents
}

// GetFile returns the value of File.
func (s *CreateAnswerRequest) GetFile() OptNilString {
	return s.File
}

// GetSearchModel returns the value of SearchModel.
func (s *CreateAnswerRequest) GetSearchModel() OptNilString {
	return s.SearchModel
}

// GetMaxRerank returns the value of MaxRerank.
func (s *CreateAnswerRequest) GetMaxRerank() OptNilInt {
	return s.MaxRerank
}

// GetTemperature returns the value of Temperature.
func (s *CreateAnswerRequest) GetTemperature() OptNilFloat64 {
	return s.Temperature
}

// GetLogprobs returns the value of Logprobs.
func (s *CreateAnswerRequest) GetLogprobs() OptNilInt {
	return s.Logprobs
}

// GetMaxTokens returns the value of MaxTokens.
func (s *CreateAnswerRequest) GetMaxTokens() OptNilInt {
	return s.MaxTokens
}

// GetStop returns the value of Stop.
func (s *CreateAnswerRequest) GetStop() OptNilCreateAnswerRequestStop {
	return s.Stop
}

// GetN returns the value of N.
func (s *CreateAnswerRequest) GetN() OptNilInt {
	return s.N
}

// GetLogitBias returns the value of LogitBias.
func (s *CreateAnswerRequest) GetLogitBias() OptCreateAnswerRequestLogitBias {
	return s.LogitBias
}

// GetReturnMetadata returns the value of ReturnMetadata.
func (s *CreateAnswerRequest) GetReturnMetadata() OptNilBool {
	return s.ReturnMetadata
}

// GetReturnPrompt returns the value of ReturnPrompt.
func (s *CreateAnswerRequest) GetReturnPrompt() OptNilBool {
	return s.ReturnPrompt
}

// GetExpand returns the value of Expand.
func (s *CreateAnswerRequest) GetExpand() OptNilAnyArray {
	return s.Expand
}

// GetUser returns the value of User.
func (s *CreateAnswerRequest) GetUser() OptString {
	return s.User
}

// SetModel sets the value of Model.
func (s *CreateAnswerRequest) SetModel(val string) {
	s.Model = val
}

// SetQuestion sets the value of Question.
func (s *CreateAnswerRequest) SetQuestion(val string) {
	s.Question = val
}

// SetExamples sets the value of Examples.
func (s *CreateAnswerRequest) SetExamples(val [][]string) {
	s.Examples = val
}

// SetExamplesContext sets the value of ExamplesContext.
func (s *CreateAnswerRequest) SetExamplesContext(val string) {
	s.ExamplesContext = val
}

// SetDocuments sets the value of Documents.
func (s *CreateAnswerRequest) SetDocuments(val OptNilStringArray) {
	s.Documents = val
}

// SetFile sets the value of File.
func (s *CreateAnswerRequest) SetFile(val OptNilString) {
	s.File = val
}

// SetSearchModel sets the value of SearchModel.
func (s *CreateAnswerRequest) SetSearchModel(val OptNilString) {
	s.SearchModel = val
}

// SetMaxRerank sets the value of MaxRerank.
func (s *CreateAnswerRequest) SetMaxRerank(val OptNilInt) {
	s.MaxRerank = val
}

// SetTemperature sets the value of Temperature.
func (s *CreateAnswerRequest) SetTemperature(val OptNilFloat64) {
	s.Temperature = val
}

// SetLogprobs sets the value of Logprobs.
func (s *CreateAnswerRequest) SetLogprobs(val OptNilInt) {
	s.Logprobs = val
}

// SetMaxTokens sets the value of MaxTokens.
func (s *CreateAnswerRequest) SetMaxTokens(val OptNilInt) {
	s.MaxTokens = val
}

// SetStop sets the value of Stop.
func (s *CreateAnswerRequest) SetStop(val OptNilCreateAnswerRequestStop) {
	s.Stop = val
}

// SetN sets the value of N.
func (s *CreateAnswerRequest) SetN(val OptNilInt) {
	s.N = val
}

// SetLogitBias sets the value of LogitBias.
func (s *CreateAnswerRequest) SetLogitBias(val OptCreateAnswerRequestLogitBias) {
	s.LogitBias = val
}

// SetReturnMetadata sets the value of ReturnMetadata.
func (s *CreateAnswerRequest) SetReturnMetadata(val OptNilBool) {
	s.ReturnMetadata = val
}

// SetReturnPrompt sets the value of ReturnPrompt.
func (s *CreateAnswerRequest) SetReturnPrompt(val OptNilBool) {
	s.ReturnPrompt = val
}

// SetExpand sets the value of Expand.
func (s *CreateAnswerRequest) SetExpand(val OptNilAnyArray) {
	s.Expand = val
}

// SetUser sets the value of User.
func (s *CreateAnswerRequest) SetUser(val OptString) {
	s.User = val
}

// Modify the likelihood of specified tokens appearing in the completion.
// Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an
// associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe)
// (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is
// added to the logits generated by the model prior to sampling. The exact effect will vary per model,
//
//	but values between -1 and 1 should decrease or increase likelihood of selection; values like -100
//
// or 100 should result in a ban or exclusive selection of the relevant token.
// As an example, you can pass `{"50256": -100}` to prevent the <|endoftext|> token from being
// generated.
type CreateAnswerRequestLogitBias struct{}

// Up to 4 sequences where the API will stop generating further tokens. The returned text will not
// contain the stop sequence.
// CreateAnswerRequestStop represents sum type.
type CreateAnswerRequestStop struct {
	Type        CreateAnswerRequestStopType // switch on this field
	String      string
	StringArray []string
}

// CreateAnswerRequestStopType is oneOf type of CreateAnswerRequestStop.
type CreateAnswerRequestStopType string

// Possible values for CreateAnswerRequestStopType.
const (
	StringCreateAnswerRequestStop      CreateAnswerRequestStopType = "string"
	StringArrayCreateAnswerRequestStop CreateAnswerRequestStopType = "[]string"
)

// IsString reports whether CreateAnswerRequestStop is string.
func (s CreateAnswerRequestStop) IsString() bool { return s.Type == StringCreateAnswerRequestStop }

// IsStringArray reports whether CreateAnswerRequestStop is []string.
func (s CreateAnswerRequestStop) IsStringArray() bool {
	return s.Type == StringArrayCreateAnswerRequestStop
}

// SetString sets CreateAnswerRequestStop to string.
func (s *CreateAnswerRequestStop) SetString(v string) {
	s.Type = StringCreateAnswerRequestStop
	s.String = v
}

// GetString returns string and true boolean if CreateAnswerRequestStop is string.
func (s CreateAnswerRequestStop) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringCreateAnswerRequestStop returns new CreateAnswerRequestStop from string.
func NewStringCreateAnswerRequestStop(v string) CreateAnswerRequestStop {
	var s CreateAnswerRequestStop
	s.SetString(v)
	return s
}

// SetStringArray sets CreateAnswerRequestStop to []string.
func (s *CreateAnswerRequestStop) SetStringArray(v []string) {
	s.Type = StringArrayCreateAnswerRequestStop
	s.StringArray = v
}

// GetStringArray returns []string and true boolean if CreateAnswerRequestStop is []string.
func (s CreateAnswerRequestStop) GetStringArray() (v []string, ok bool) {
	if !s.IsStringArray() {
		return v, false
	}
	return s.StringArray, true
}

// NewStringArrayCreateAnswerRequestStop returns new CreateAnswerRequestStop from []string.
func NewStringArrayCreateAnswerRequestStop(v []string) CreateAnswerRequestStop {
	var s CreateAnswerRequestStop
	s.SetStringArray(v)
	return s
}

// Ref: #/components/schemas/CreateAnswerResponse
type CreateAnswerResponse struct {
	Object            OptString                                   `json:"object"`
	Model             OptString                                   `json:"model"`
	SearchModel       OptString                                   `json:"search_model"`
	Completion        OptString                                   `json:"completion"`
	Answers           []string                                    `json:"answers"`
	SelectedDocuments []CreateAnswerResponseSelectedDocumentsItem `json:"selected_documents"`
}

// GetObject returns the value of Object.
func (s *CreateAnswerResponse) GetObject() OptString {
	return s.Object
}

// GetModel returns the value of Model.
func (s *CreateAnswerResponse) GetModel() OptString {
	return s.Model
}

// GetSearchModel returns the value of SearchModel.
func (s *CreateAnswerResponse) GetSearchModel() OptString {
	return s.SearchModel
}

// GetCompletion returns the value of Completion.
func (s *CreateAnswerResponse) GetCompletion() OptString {
	return s.Completion
}

// GetAnswers returns the value of Answers.
func (s *CreateAnswerResponse) GetAnswers() []string {
	return s.Answers
}

// GetSelectedDocuments returns the value of SelectedDocuments.
func (s *CreateAnswerResponse) GetSelectedDocuments() []CreateAnswerResponseSelectedDocumentsItem {
	return s.SelectedDocuments
}

// SetObject sets the value of Object.
func (s *CreateAnswerResponse) SetObject(val OptString) {
	s.Object = val
}

// SetModel sets the value of Model.
func (s *CreateAnswerResponse) SetModel(val OptString) {
	s.Model = val
}

// SetSearchModel sets the value of SearchModel.
func (s *CreateAnswerResponse) SetSearchModel(val OptString) {
	s.SearchModel = val
}

// SetCompletion sets the value of Completion.
func (s *CreateAnswerResponse) SetCompletion(val OptString) {
	s.Completion = val
}

// SetAnswers sets the value of Answers.
func (s *CreateAnswerResponse) SetAnswers(val []string) {
	s.Answers = val
}

// SetSelectedDocuments sets the value of SelectedDocuments.
func (s *CreateAnswerResponse) SetSelectedDocuments(val []CreateAnswerResponseSelectedDocumentsItem) {
	s.SelectedDocuments = val
}

type CreateAnswerResponseSelectedDocumentsItem struct {
	Document OptInt    `json:"document"`
	Text     OptString `json:"text"`
}

// GetDocument returns the value of Document.
func (s *CreateAnswerResponseSelectedDocumentsItem) GetDocument() OptInt {
	return s.Document
}

// GetText returns the value of Text.
func (s *CreateAnswerResponseSelectedDocumentsItem) GetText() OptString {
	return s.Text
}

// SetDocument sets the value of Document.
func (s *CreateAnswerResponseSelectedDocumentsItem) SetDocument(val OptInt) {
	s.Document = val
}

// SetText sets the value of Text.
func (s *CreateAnswerResponseSelectedDocumentsItem) SetText(val OptString) {
	s.Text = val
}

// Ref: #/components/schemas/CreateChatCompletionRequest
type CreateChatCompletionRequest struct {
	// ID of the model to use. Currently, only `gpt-3.5-turbo` and `gpt-3.5-turbo-0301` are supported.
	Model string `json:"model"`
	// The messages to generate chat completions for, in the [chat
	// format](/docs/guides/chat/introduction).
	Messages []ChatCompletionRequestMessage `json:"messages"`
	// What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output
	// more random, while lower values like 0.2 will make it more focused and deterministic.
	// We generally recommend altering this or `top_p` but not both.
	Temperature OptNilFloat64 `json:"temperature"`
	// An alternative to sampling with temperature, called nucleus sampling, where the model considers
	// the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the
	// top 10% probability mass are considered.
	// We generally recommend altering this or `temperature` but not both.
	TopP OptNilFloat64 `json:"top_p"`
	// How many chat completion choices to generate for each input message.
	N OptNilInt `json:"n"`
	// If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only
	// [server-sent events](https://developer.mozilla.
	// org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they
	// become available, with the stream terminated by a `data: [DONE]` message.
	Stream OptNilBool `json:"stream"`
	// Up to 4 sequences where the API will stop generating further tokens.
	Stop OptNilCreateChatCompletionRequestStop `json:"stop"`
	// The maximum number of tokens allowed for the generated answer. By default, the number of tokens
	// the model can return will be (4096 - prompt tokens).
	MaxTokens OptInt `json:"max_tokens"`
	// Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in
	// the text so far, increasing the model's likelihood to talk about new topics.
	// [See more information about frequency and presence penalties.
	// ](/docs/api-reference/parameter-details).
	PresencePenalty OptNilFloat64 `json:"presence_penalty"`
	// Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency
	// in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
	// [See more information about frequency and presence penalties.
	// ](/docs/api-reference/parameter-details).
	FrequencyPenalty OptNilFloat64 `json:"frequency_penalty"`
	// Modify the likelihood of specified tokens appearing in the completion.
	// Accepts a json object that maps tokens (specified by their token ID in the tokenizer) to an
	// associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated
	// by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1
	// should decrease or increase likelihood of selection; values like -100 or 100 should result in a
	// ban or exclusive selection of the relevant token.
	LogitBias OptCreateChatCompletionRequestLogitBias `json:"logit_bias"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetModel returns the value of Model.
func (s *CreateChatCompletionRequest) GetModel() string {
	return s.Model
}

// GetMessages returns the value of Messages.
func (s *CreateChatCompletionRequest) GetMessages() []ChatCompletionRequestMessage {
	return s.Messages
}

// GetTemperature returns the value of Temperature.
func (s *CreateChatCompletionRequest) GetTemperature() OptNilFloat64 {
	return s.Temperature
}

// GetTopP returns the value of TopP.
func (s *CreateChatCompletionRequest) GetTopP() OptNilFloat64 {
	return s.TopP
}

// GetN returns the value of N.
func (s *CreateChatCompletionRequest) GetN() OptNilInt {
	return s.N
}

// GetStream returns the value of Stream.
func (s *CreateChatCompletionRequest) GetStream() OptNilBool {
	return s.Stream
}

// GetStop returns the value of Stop.
func (s *CreateChatCompletionRequest) GetStop() OptNilCreateChatCompletionRequestStop {
	return s.Stop
}

// GetMaxTokens returns the value of MaxTokens.
func (s *CreateChatCompletionRequest) GetMaxTokens() OptInt {
	return s.MaxTokens
}

// GetPresencePenalty returns the value of PresencePenalty.
func (s *CreateChatCompletionRequest) GetPresencePenalty() OptNilFloat64 {
	return s.PresencePenalty
}

// GetFrequencyPenalty returns the value of FrequencyPenalty.
func (s *CreateChatCompletionRequest) GetFrequencyPenalty() OptNilFloat64 {
	return s.FrequencyPenalty
}

// GetLogitBias returns the value of LogitBias.
func (s *CreateChatCompletionRequest) GetLogitBias() OptCreateChatCompletionRequestLogitBias {
	return s.LogitBias
}

// GetUser returns the value of User.
func (s *CreateChatCompletionRequest) GetUser() OptString {
	return s.User
}

// SetModel sets the value of Model.
func (s *CreateChatCompletionRequest) SetModel(val string) {
	s.Model = val
}

// SetMessages sets the value of Messages.
func (s *CreateChatCompletionRequest) SetMessages(val []ChatCompletionRequestMessage) {
	s.Messages = val
}

// SetTemperature sets the value of Temperature.
func (s *CreateChatCompletionRequest) SetTemperature(val OptNilFloat64) {
	s.Temperature = val
}

// SetTopP sets the value of TopP.
func (s *CreateChatCompletionRequest) SetTopP(val OptNilFloat64) {
	s.TopP = val
}

// SetN sets the value of N.
func (s *CreateChatCompletionRequest) SetN(val OptNilInt) {
	s.N = val
}

// SetStream sets the value of Stream.
func (s *CreateChatCompletionRequest) SetStream(val OptNilBool) {
	s.Stream = val
}

// SetStop sets the value of Stop.
func (s *CreateChatCompletionRequest) SetStop(val OptNilCreateChatCompletionRequestStop) {
	s.Stop = val
}

// SetMaxTokens sets the value of MaxTokens.
func (s *CreateChatCompletionRequest) SetMaxTokens(val OptInt) {
	s.MaxTokens = val
}

// SetPresencePenalty sets the value of PresencePenalty.
func (s *CreateChatCompletionRequest) SetPresencePenalty(val OptNilFloat64) {
	s.PresencePenalty = val
}

// SetFrequencyPenalty sets the value of FrequencyPenalty.
func (s *CreateChatCompletionRequest) SetFrequencyPenalty(val OptNilFloat64) {
	s.FrequencyPenalty = val
}

// SetLogitBias sets the value of LogitBias.
func (s *CreateChatCompletionRequest) SetLogitBias(val OptCreateChatCompletionRequestLogitBias) {
	s.LogitBias = val
}

// SetUser sets the value of User.
func (s *CreateChatCompletionRequest) SetUser(val OptString) {
	s.User = val
}

// Modify the likelihood of specified tokens appearing in the completion.
// Accepts a json object that maps tokens (specified by their token ID in the tokenizer) to an
// associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated
// by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1
// should decrease or increase likelihood of selection; values like -100 or 100 should result in a
// ban or exclusive selection of the relevant token.
type CreateChatCompletionRequestLogitBias struct{}

// Up to 4 sequences where the API will stop generating further tokens.
// CreateChatCompletionRequestStop represents sum type.
type CreateChatCompletionRequestStop struct {
	Type        CreateChatCompletionRequestStopType // switch on this field
	String      string
	StringArray []string
}

// CreateChatCompletionRequestStopType is oneOf type of CreateChatCompletionRequestStop.
type CreateChatCompletionRequestStopType string

// Possible values for CreateChatCompletionRequestStopType.
const (
	StringCreateChatCompletionRequestStop      CreateChatCompletionRequestStopType = "string"
	StringArrayCreateChatCompletionRequestStop CreateChatCompletionRequestStopType = "[]string"
)

// IsString reports whether CreateChatCompletionRequestStop is string.
func (s CreateChatCompletionRequestStop) IsString() bool {
	return s.Type == StringCreateChatCompletionRequestStop
}

// IsStringArray reports whether CreateChatCompletionRequestStop is []string.
func (s CreateChatCompletionRequestStop) IsStringArray() bool {
	return s.Type == StringArrayCreateChatCompletionRequestStop
}

// SetString sets CreateChatCompletionRequestStop to string.
func (s *CreateChatCompletionRequestStop) SetString(v string) {
	s.Type = StringCreateChatCompletionRequestStop
	s.String = v
}

// GetString returns string and true boolean if CreateChatCompletionRequestStop is string.
func (s CreateChatCompletionRequestStop) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringCreateChatCompletionRequestStop returns new CreateChatCompletionRequestStop from string.
func NewStringCreateChatCompletionRequestStop(v string) CreateChatCompletionRequestStop {
	var s CreateChatCompletionRequestStop
	s.SetString(v)
	return s
}

// SetStringArray sets CreateChatCompletionRequestStop to []string.
func (s *CreateChatCompletionRequestStop) SetStringArray(v []string) {
	s.Type = StringArrayCreateChatCompletionRequestStop
	s.StringArray = v
}

// GetStringArray returns []string and true boolean if CreateChatCompletionRequestStop is []string.
func (s CreateChatCompletionRequestStop) GetStringArray() (v []string, ok bool) {
	if !s.IsStringArray() {
		return v, false
	}
	return s.StringArray, true
}

// NewStringArrayCreateChatCompletionRequestStop returns new CreateChatCompletionRequestStop from []string.
func NewStringArrayCreateChatCompletionRequestStop(v []string) CreateChatCompletionRequestStop {
	var s CreateChatCompletionRequestStop
	s.SetStringArray(v)
	return s
}

// Ref: #/components/schemas/CreateChatCompletionResponse
type CreateChatCompletionResponse struct {
	ID      string                                    `json:"id"`
	Object  string                                    `json:"object"`
	Created int                                       `json:"created"`
	Model   string                                    `json:"model"`
	Choices []CreateChatCompletionResponseChoicesItem `json:"choices"`
	Usage   OptCreateChatCompletionResponseUsage      `json:"usage"`
}

// GetID returns the value of ID.
func (s *CreateChatCompletionResponse) GetID() string {
	return s.ID
}

// GetObject returns the value of Object.
func (s *CreateChatCompletionResponse) GetObject() string {
	return s.Object
}

// GetCreated returns the value of Created.
func (s *CreateChatCompletionResponse) GetCreated() int {
	return s.Created
}

// GetModel returns the value of Model.
func (s *CreateChatCompletionResponse) GetModel() string {
	return s.Model
}

// GetChoices returns the value of Choices.
func (s *CreateChatCompletionResponse) GetChoices() []CreateChatCompletionResponseChoicesItem {
	return s.Choices
}

// GetUsage returns the value of Usage.
func (s *CreateChatCompletionResponse) GetUsage() OptCreateChatCompletionResponseUsage {
	return s.Usage
}

// SetID sets the value of ID.
func (s *CreateChatCompletionResponse) SetID(val string) {
	s.ID = val
}

// SetObject sets the value of Object.
func (s *CreateChatCompletionResponse) SetObject(val string) {
	s.Object = val
}

// SetCreated sets the value of Created.
func (s *CreateChatCompletionResponse) SetCreated(val int) {
	s.Created = val
}

// SetModel sets the value of Model.
func (s *CreateChatCompletionResponse) SetModel(val string) {
	s.Model = val
}

// SetChoices sets the value of Choices.
func (s *CreateChatCompletionResponse) SetChoices(val []CreateChatCompletionResponseChoicesItem) {
	s.Choices = val
}

// SetUsage sets the value of Usage.
func (s *CreateChatCompletionResponse) SetUsage(val OptCreateChatCompletionResponseUsage) {
	s.Usage = val
}

type CreateChatCompletionResponseChoicesItem struct {
	Index        OptInt                           `json:"index"`
	Message      OptChatCompletionResponseMessage `json:"message"`
	FinishReason OptString                        `json:"finish_reason"`
}

// GetIndex returns the value of Index.
func (s *CreateChatCompletionResponseChoicesItem) GetIndex() OptInt {
	return s.Index
}

// GetMessage returns the value of Message.
func (s *CreateChatCompletionResponseChoicesItem) GetMessage() OptChatCompletionResponseMessage {
	return s.Message
}

// GetFinishReason returns the value of FinishReason.
func (s *CreateChatCompletionResponseChoicesItem) GetFinishReason() OptString {
	return s.FinishReason
}

// SetIndex sets the value of Index.
func (s *CreateChatCompletionResponseChoicesItem) SetIndex(val OptInt) {
	s.Index = val
}

// SetMessage sets the value of Message.
func (s *CreateChatCompletionResponseChoicesItem) SetMessage(val OptChatCompletionResponseMessage) {
	s.Message = val
}

// SetFinishReason sets the value of FinishReason.
func (s *CreateChatCompletionResponseChoicesItem) SetFinishReason(val OptString) {
	s.FinishReason = val
}

type CreateChatCompletionResponseUsage struct {
	PromptTokens     int `json:"prompt_tokens"`
	CompletionTokens int `json:"completion_tokens"`
	TotalTokens      int `json:"total_tokens"`
}

// GetPromptTokens returns the value of PromptTokens.
func (s *CreateChatCompletionResponseUsage) GetPromptTokens() int {
	return s.PromptTokens
}

// GetCompletionTokens returns the value of CompletionTokens.
func (s *CreateChatCompletionResponseUsage) GetCompletionTokens() int {
	return s.CompletionTokens
}

// GetTotalTokens returns the value of TotalTokens.
func (s *CreateChatCompletionResponseUsage) GetTotalTokens() int {
	return s.TotalTokens
}

// SetPromptTokens sets the value of PromptTokens.
func (s *CreateChatCompletionResponseUsage) SetPromptTokens(val int) {
	s.PromptTokens = val
}

// SetCompletionTokens sets the value of CompletionTokens.
func (s *CreateChatCompletionResponseUsage) SetCompletionTokens(val int) {
	s.CompletionTokens = val
}

// SetTotalTokens sets the value of TotalTokens.
func (s *CreateChatCompletionResponseUsage) SetTotalTokens(val int) {
	s.TotalTokens = val
}

// Ref: #/components/schemas/CreateClassificationRequest
type CreateClassificationRequest struct {
	// ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see
	// all of your available models, or see our [Model overview](/docs/models/overview) for descriptions
	// of them.
	Model string `json:"model"`
	// Query to be classified.
	Query string `json:"query"`
	// A list of examples with labels, in the following format:
	// `[["The movie is so interesting.", "Positive"], ["It is quite boring.", "Negative"], ...]`
	// All the label strings will be normalized to be capitalized.
	// You should specify either `examples` or `file`, but not both.
	Examples OptNilStringArrayArray `json:"examples"`
	// The ID of the uploaded file that contains training examples. See [upload
	// file](/docs/api-reference/files/upload) for how to upload a file of the desired format and purpose.
	// You should specify either `examples` or `file`, but not both.
	File OptNilString `json:"file"`
	// The set of categories being classified. If not specified, candidate labels will be automatically
	// collected from the examples you provide. All the label strings will be normalized to be
	// capitalized.
	Labels OptNilStringArray `json:"labels"`
	// ID of the model to use for [Search](/docs/api-reference/searches/create). You can select one of
	// `ada`, `babbage`, `curie`, or `davinci`.
	SearchModel OptNilString `json:"search_model"`
	// What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output
	// more random, while lower values like 0.2 will make it more focused and deterministic.
	Temperature OptNilFloat64 `json:"temperature"`
	// Include the log probabilities on the `logprobs` most likely tokens, as well the chosen tokens. For
	// example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will
	// always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in
	// the response.
	// The maximum value for `logprobs` is 5. If you need more than this, please contact us through our
	// [Help center](https://help.openai.com) and describe your use case.
	// When `logprobs` is set, `completion` will be automatically added into `expand` to get the logprobs.
	Logprobs OptNilInt `json:"logprobs"`
	// The maximum number of examples to be ranked by [Search](/docs/api-reference/searches/create) when
	// using `file`. Setting it to a higher value leads to improved accuracy but with increased latency
	// and cost.
	MaxExamples OptNilInt `json:"max_examples"`
	// Modify the likelihood of specified tokens appearing in the completion.
	// Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an
	// associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe)
	// (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is
	// added to the logits generated by the model prior to sampling. The exact effect will vary per model,
	//  but values between -1 and 1 should decrease or increase likelihood of selection; values like -100
	// or 100 should result in a ban or exclusive selection of the relevant token.
	// As an example, you can pass `{"50256": -100}` to prevent the <|endoftext|> token from being
	// generated.
	LogitBias OptCreateClassificationRequestLogitBias `json:"logit_bias"`
	// If set to `true`, the returned JSON will include a "prompt" field containing the final prompt that
	// was used to request a completion. This is mainly useful for debugging purposes.
	ReturnPrompt OptNilBool `json:"return_prompt"`
	// A special boolean flag for showing metadata. If set to `true`, each document entry in the returned
	// JSON will contain a "metadata" field.
	// This flag only takes effect when `file` is set.
	ReturnMetadata OptNilBool `json:"return_metadata"`
	// If an object name is in the list, we provide the full information of the object; otherwise, we
	// only provide the object ID. Currently we support `completion` and `file` objects for expansion.
	Expand OptNilAnyArray `json:"expand"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetModel returns the value of Model.
func (s *CreateClassificationRequest) GetModel() string {
	return s.Model
}

// GetQuery returns the value of Query.
func (s *CreateClassificationRequest) GetQuery() string {
	return s.Query
}

// GetExamples returns the value of Examples.
func (s *CreateClassificationRequest) GetExamples() OptNilStringArrayArray {
	return s.Examples
}

// GetFile returns the value of File.
func (s *CreateClassificationRequest) GetFile() OptNilString {
	return s.File
}

// GetLabels returns the value of Labels.
func (s *CreateClassificationRequest) GetLabels() OptNilStringArray {
	return s.Labels
}

// GetSearchModel returns the value of SearchModel.
func (s *CreateClassificationRequest) GetSearchModel() OptNilString {
	return s.SearchModel
}

// GetTemperature returns the value of Temperature.
func (s *CreateClassificationRequest) GetTemperature() OptNilFloat64 {
	return s.Temperature
}

// GetLogprobs returns the value of Logprobs.
func (s *CreateClassificationRequest) GetLogprobs() OptNilInt {
	return s.Logprobs
}

// GetMaxExamples returns the value of MaxExamples.
func (s *CreateClassificationRequest) GetMaxExamples() OptNilInt {
	return s.MaxExamples
}

// GetLogitBias returns the value of LogitBias.
func (s *CreateClassificationRequest) GetLogitBias() OptCreateClassificationRequestLogitBias {
	return s.LogitBias
}

// GetReturnPrompt returns the value of ReturnPrompt.
func (s *CreateClassificationRequest) GetReturnPrompt() OptNilBool {
	return s.ReturnPrompt
}

// GetReturnMetadata returns the value of ReturnMetadata.
func (s *CreateClassificationRequest) GetReturnMetadata() OptNilBool {
	return s.ReturnMetadata
}

// GetExpand returns the value of Expand.
func (s *CreateClassificationRequest) GetExpand() OptNilAnyArray {
	return s.Expand
}

// GetUser returns the value of User.
func (s *CreateClassificationRequest) GetUser() OptString {
	return s.User
}

// SetModel sets the value of Model.
func (s *CreateClassificationRequest) SetModel(val string) {
	s.Model = val
}

// SetQuery sets the value of Query.
func (s *CreateClassificationRequest) SetQuery(val string) {
	s.Query = val
}

// SetExamples sets the value of Examples.
func (s *CreateClassificationRequest) SetExamples(val OptNilStringArrayArray) {
	s.Examples = val
}

// SetFile sets the value of File.
func (s *CreateClassificationRequest) SetFile(val OptNilString) {
	s.File = val
}

// SetLabels sets the value of Labels.
func (s *CreateClassificationRequest) SetLabels(val OptNilStringArray) {
	s.Labels = val
}

// SetSearchModel sets the value of SearchModel.
func (s *CreateClassificationRequest) SetSearchModel(val OptNilString) {
	s.SearchModel = val
}

// SetTemperature sets the value of Temperature.
func (s *CreateClassificationRequest) SetTemperature(val OptNilFloat64) {
	s.Temperature = val
}

// SetLogprobs sets the value of Logprobs.
func (s *CreateClassificationRequest) SetLogprobs(val OptNilInt) {
	s.Logprobs = val
}

// SetMaxExamples sets the value of MaxExamples.
func (s *CreateClassificationRequest) SetMaxExamples(val OptNilInt) {
	s.MaxExamples = val
}

// SetLogitBias sets the value of LogitBias.
func (s *CreateClassificationRequest) SetLogitBias(val OptCreateClassificationRequestLogitBias) {
	s.LogitBias = val
}

// SetReturnPrompt sets the value of ReturnPrompt.
func (s *CreateClassificationRequest) SetReturnPrompt(val OptNilBool) {
	s.ReturnPrompt = val
}

// SetReturnMetadata sets the value of ReturnMetadata.
func (s *CreateClassificationRequest) SetReturnMetadata(val OptNilBool) {
	s.ReturnMetadata = val
}

// SetExpand sets the value of Expand.
func (s *CreateClassificationRequest) SetExpand(val OptNilAnyArray) {
	s.Expand = val
}

// SetUser sets the value of User.
func (s *CreateClassificationRequest) SetUser(val OptString) {
	s.User = val
}

// Modify the likelihood of specified tokens appearing in the completion.
// Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an
// associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe)
// (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is
// added to the logits generated by the model prior to sampling. The exact effect will vary per model,
//
//	but values between -1 and 1 should decrease or increase likelihood of selection; values like -100
//
// or 100 should result in a ban or exclusive selection of the relevant token.
// As an example, you can pass `{"50256": -100}` to prevent the <|endoftext|> token from being
// generated.
type CreateClassificationRequestLogitBias struct{}

// Ref: #/components/schemas/CreateClassificationResponse
type CreateClassificationResponse struct {
	Object           OptString                                          `json:"object"`
	Model            OptString                                          `json:"model"`
	SearchModel      OptString                                          `json:"search_model"`
	Completion       OptString                                          `json:"completion"`
	Label            OptString                                          `json:"label"`
	SelectedExamples []CreateClassificationResponseSelectedExamplesItem `json:"selected_examples"`
}

// GetObject returns the value of Object.
func (s *CreateClassificationResponse) GetObject() OptString {
	return s.Object
}

// GetModel returns the value of Model.
func (s *CreateClassificationResponse) GetModel() OptString {
	return s.Model
}

// GetSearchModel returns the value of SearchModel.
func (s *CreateClassificationResponse) GetSearchModel() OptString {
	return s.SearchModel
}

// GetCompletion returns the value of Completion.
func (s *CreateClassificationResponse) GetCompletion() OptString {
	return s.Completion
}

// GetLabel returns the value of Label.
func (s *CreateClassificationResponse) GetLabel() OptString {
	return s.Label
}

// GetSelectedExamples returns the value of SelectedExamples.
func (s *CreateClassificationResponse) GetSelectedExamples() []CreateClassificationResponseSelectedExamplesItem {
	return s.SelectedExamples
}

// SetObject sets the value of Object.
func (s *CreateClassificationResponse) SetObject(val OptString) {
	s.Object = val
}

// SetModel sets the value of Model.
func (s *CreateClassificationResponse) SetModel(val OptString) {
	s.Model = val
}

// SetSearchModel sets the value of SearchModel.
func (s *CreateClassificationResponse) SetSearchModel(val OptString) {
	s.SearchModel = val
}

// SetCompletion sets the value of Completion.
func (s *CreateClassificationResponse) SetCompletion(val OptString) {
	s.Completion = val
}

// SetLabel sets the value of Label.
func (s *CreateClassificationResponse) SetLabel(val OptString) {
	s.Label = val
}

// SetSelectedExamples sets the value of SelectedExamples.
func (s *CreateClassificationResponse) SetSelectedExamples(val []CreateClassificationResponseSelectedExamplesItem) {
	s.SelectedExamples = val
}

type CreateClassificationResponseSelectedExamplesItem struct {
	Document OptInt    `json:"document"`
	Text     OptString `json:"text"`
	Label    OptString `json:"label"`
}

// GetDocument returns the value of Document.
func (s *CreateClassificationResponseSelectedExamplesItem) GetDocument() OptInt {
	return s.Document
}

// GetText returns the value of Text.
func (s *CreateClassificationResponseSelectedExamplesItem) GetText() OptString {
	return s.Text
}

// GetLabel returns the value of Label.
func (s *CreateClassificationResponseSelectedExamplesItem) GetLabel() OptString {
	return s.Label
}

// SetDocument sets the value of Document.
func (s *CreateClassificationResponseSelectedExamplesItem) SetDocument(val OptInt) {
	s.Document = val
}

// SetText sets the value of Text.
func (s *CreateClassificationResponseSelectedExamplesItem) SetText(val OptString) {
	s.Text = val
}

// SetLabel sets the value of Label.
func (s *CreateClassificationResponseSelectedExamplesItem) SetLabel(val OptString) {
	s.Label = val
}

// Ref: #/components/schemas/CreateCompletionRequest
type CreateCompletionRequest struct {
	// ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see
	// all of your available models, or see our [Model overview](/docs/models/overview) for descriptions
	// of them.
	Model string `json:"model"`
	// The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens,
	// or array of token arrays.
	// Note that <|endoftext|> is the document separator that the model sees during training, so if a
	// prompt is not specified the model will generate as if from the beginning of a new document.
	Prompt OptNilCreateCompletionRequestPrompt `json:"prompt"`
	// The suffix that comes after a completion of inserted text.
	Suffix OptNilString `json:"suffix"`
	// The maximum number of [tokens](/tokenizer) to generate in the completion.
	// The token count of your prompt plus `max_tokens` cannot exceed the model's context length. Most
	// models have a context length of 2048 tokens (except for the newest models, which support 4096).
	MaxTokens OptNilInt `json:"max_tokens"`
	// What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output
	// more random, while lower values like 0.2 will make it more focused and deterministic.
	// We generally recommend altering this or `top_p` but not both.
	Temperature OptNilFloat64 `json:"temperature"`
	// An alternative to sampling with temperature, called nucleus sampling, where the model considers
	// the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the
	// top 10% probability mass are considered.
	// We generally recommend altering this or `temperature` but not both.
	TopP OptNilFloat64 `json:"top_p"`
	// How many completions to generate for each prompt.
	// **Note:** Because this parameter generates many completions, it can quickly consume your token
	// quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.
	N OptNilInt `json:"n"`
	// Whether to stream back partial progress. If set, tokens will be sent as data-only [server-sent
	// events](https://developer.mozilla.
	// org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they
	// become available, with the stream terminated by a `data: [DONE]` message.
	Stream OptNilBool `json:"stream"`
	// Include the log probabilities on the `logprobs` most likely tokens, as well the chosen tokens. For
	// example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will
	// always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in
	// the response.
	// The maximum value for `logprobs` is 5. If you need more than this, please contact us through our
	// [Help center](https://help.openai.com) and describe your use case.
	Logprobs OptNilInt `json:"logprobs"`
	// Echo back the prompt in addition to the completion.
	Echo OptNilBool `json:"echo"`
	// Up to 4 sequences where the API will stop generating further tokens. The returned text will not
	// contain the stop sequence.
	Stop OptNilCreateCompletionRequestStop `json:"stop"`
	// Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in
	// the text so far, increasing the model's likelihood to talk about new topics.
	// [See more information about frequency and presence penalties.
	// ](/docs/api-reference/parameter-details).
	PresencePenalty OptNilFloat64 `json:"presence_penalty"`
	// Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency
	// in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
	// [See more information about frequency and presence penalties.
	// ](/docs/api-reference/parameter-details).
	FrequencyPenalty OptNilFloat64 `json:"frequency_penalty"`
	// Generates `best_of` completions server-side and returns the "best" (the one with the highest log
	// probability per token). Results cannot be streamed.
	// When used with `n`, `best_of` controls the number of candidate completions and `n` specifies how
	// many to return – `best_of` must be greater than `n`.
	// **Note:** Because this parameter generates many completions, it can quickly consume your token
	// quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.
	BestOf OptNilInt `json:"best_of"`
	// Modify the likelihood of specified tokens appearing in the completion.
	// Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an
	// associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe)
	// (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is
	// added to the logits generated by the model prior to sampling. The exact effect will vary per model,
	//  but values between -1 and 1 should decrease or increase likelihood of selection; values like -100
	// or 100 should result in a ban or exclusive selection of the relevant token.
	// As an example, you can pass `{"50256": -100}` to prevent the <|endoftext|> token from being
	// generated.
	LogitBias OptCreateCompletionRequestLogitBias `json:"logit_bias"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetModel returns the value of Model.
func (s *CreateCompletionRequest) GetModel() string {
	return s.Model
}

// GetPrompt returns the value of Prompt.
func (s *CreateCompletionRequest) GetPrompt() OptNilCreateCompletionRequestPrompt {
	return s.Prompt
}

// GetSuffix returns the value of Suffix.
func (s *CreateCompletionRequest) GetSuffix() OptNilString {
	return s.Suffix
}

// GetMaxTokens returns the value of MaxTokens.
func (s *CreateCompletionRequest) GetMaxTokens() OptNilInt {
	return s.MaxTokens
}

// GetTemperature returns the value of Temperature.
func (s *CreateCompletionRequest) GetTemperature() OptNilFloat64 {
	return s.Temperature
}

// GetTopP returns the value of TopP.
func (s *CreateCompletionRequest) GetTopP() OptNilFloat64 {
	return s.TopP
}

// GetN returns the value of N.
func (s *CreateCompletionRequest) GetN() OptNilInt {
	return s.N
}

// GetStream returns the value of Stream.
func (s *CreateCompletionRequest) GetStream() OptNilBool {
	return s.Stream
}

// GetLogprobs returns the value of Logprobs.
func (s *CreateCompletionRequest) GetLogprobs() OptNilInt {
	return s.Logprobs
}

// GetEcho returns the value of Echo.
func (s *CreateCompletionRequest) GetEcho() OptNilBool {
	return s.Echo
}

// GetStop returns the value of Stop.
func (s *CreateCompletionRequest) GetStop() OptNilCreateCompletionRequestStop {
	return s.Stop
}

// GetPresencePenalty returns the value of PresencePenalty.
func (s *CreateCompletionRequest) GetPresencePenalty() OptNilFloat64 {
	return s.PresencePenalty
}

// GetFrequencyPenalty returns the value of FrequencyPenalty.
func (s *CreateCompletionRequest) GetFrequencyPenalty() OptNilFloat64 {
	return s.FrequencyPenalty
}

// GetBestOf returns the value of BestOf.
func (s *CreateCompletionRequest) GetBestOf() OptNilInt {
	return s.BestOf
}

// GetLogitBias returns the value of LogitBias.
func (s *CreateCompletionRequest) GetLogitBias() OptCreateCompletionRequestLogitBias {
	return s.LogitBias
}

// GetUser returns the value of User.
func (s *CreateCompletionRequest) GetUser() OptString {
	return s.User
}

// SetModel sets the value of Model.
func (s *CreateCompletionRequest) SetModel(val string) {
	s.Model = val
}

// SetPrompt sets the value of Prompt.
func (s *CreateCompletionRequest) SetPrompt(val OptNilCreateCompletionRequestPrompt) {
	s.Prompt = val
}

// SetSuffix sets the value of Suffix.
func (s *CreateCompletionRequest) SetSuffix(val OptNilString) {
	s.Suffix = val
}

// SetMaxTokens sets the value of MaxTokens.
func (s *CreateCompletionRequest) SetMaxTokens(val OptNilInt) {
	s.MaxTokens = val
}

// SetTemperature sets the value of Temperature.
func (s *CreateCompletionRequest) SetTemperature(val OptNilFloat64) {
	s.Temperature = val
}

// SetTopP sets the value of TopP.
func (s *CreateCompletionRequest) SetTopP(val OptNilFloat64) {
	s.TopP = val
}

// SetN sets the value of N.
func (s *CreateCompletionRequest) SetN(val OptNilInt) {
	s.N = val
}

// SetStream sets the value of Stream.
func (s *CreateCompletionRequest) SetStream(val OptNilBool) {
	s.Stream = val
}

// SetLogprobs sets the value of Logprobs.
func (s *CreateCompletionRequest) SetLogprobs(val OptNilInt) {
	s.Logprobs = val
}

// SetEcho sets the value of Echo.
func (s *CreateCompletionRequest) SetEcho(val OptNilBool) {
	s.Echo = val
}

// SetStop sets the value of Stop.
func (s *CreateCompletionRequest) SetStop(val OptNilCreateCompletionRequestStop) {
	s.Stop = val
}

// SetPresencePenalty sets the value of PresencePenalty.
func (s *CreateCompletionRequest) SetPresencePenalty(val OptNilFloat64) {
	s.PresencePenalty = val
}

// SetFrequencyPenalty sets the value of FrequencyPenalty.
func (s *CreateCompletionRequest) SetFrequencyPenalty(val OptNilFloat64) {
	s.FrequencyPenalty = val
}

// SetBestOf sets the value of BestOf.
func (s *CreateCompletionRequest) SetBestOf(val OptNilInt) {
	s.BestOf = val
}

// SetLogitBias sets the value of LogitBias.
func (s *CreateCompletionRequest) SetLogitBias(val OptCreateCompletionRequestLogitBias) {
	s.LogitBias = val
}

// SetUser sets the value of User.
func (s *CreateCompletionRequest) SetUser(val OptString) {
	s.User = val
}

// Modify the likelihood of specified tokens appearing in the completion.
// Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an
// associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe)
// (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is
// added to the logits generated by the model prior to sampling. The exact effect will vary per model,
//
//	but values between -1 and 1 should decrease or increase likelihood of selection; values like -100
//
// or 100 should result in a ban or exclusive selection of the relevant token.
// As an example, you can pass `{"50256": -100}` to prevent the <|endoftext|> token from being
// generated.
type CreateCompletionRequestLogitBias struct{}

// The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens,
// or array of token arrays.
// Note that <|endoftext|> is the document separator that the model sees during training, so if a
// prompt is not specified the model will generate as if from the beginning of a new document.
// CreateCompletionRequestPrompt represents sum type.
type CreateCompletionRequestPrompt struct {
	Type        CreateCompletionRequestPromptType // switch on this field
	String      string
	StringArray []string
}

// CreateCompletionRequestPromptType is oneOf type of CreateCompletionRequestPrompt.
type CreateCompletionRequestPromptType string

// Possible values for CreateCompletionRequestPromptType.
const (
	StringCreateCompletionRequestPrompt      CreateCompletionRequestPromptType = "string"
	StringArrayCreateCompletionRequestPrompt CreateCompletionRequestPromptType = "[]string"
)

// IsString reports whether CreateCompletionRequestPrompt is string.
func (s CreateCompletionRequestPrompt) IsString() bool {
	return s.Type == StringCreateCompletionRequestPrompt
}

// IsStringArray reports whether CreateCompletionRequestPrompt is []string.
func (s CreateCompletionRequestPrompt) IsStringArray() bool {
	return s.Type == StringArrayCreateCompletionRequestPrompt
}

// SetString sets CreateCompletionRequestPrompt to string.
func (s *CreateCompletionRequestPrompt) SetString(v string) {
	s.Type = StringCreateCompletionRequestPrompt
	s.String = v
}

// GetString returns string and true boolean if CreateCompletionRequestPrompt is string.
func (s CreateCompletionRequestPrompt) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringCreateCompletionRequestPrompt returns new CreateCompletionRequestPrompt from string.
func NewStringCreateCompletionRequestPrompt(v string) CreateCompletionRequestPrompt {
	var s CreateCompletionRequestPrompt
	s.SetString(v)
	return s
}

// SetStringArray sets CreateCompletionRequestPrompt to []string.
func (s *CreateCompletionRequestPrompt) SetStringArray(v []string) {
	s.Type = StringArrayCreateCompletionRequestPrompt
	s.StringArray = v
}

// GetStringArray returns []string and true boolean if CreateCompletionRequestPrompt is []string.
func (s CreateCompletionRequestPrompt) GetStringArray() (v []string, ok bool) {
	if !s.IsStringArray() {
		return v, false
	}
	return s.StringArray, true
}

// NewStringArrayCreateCompletionRequestPrompt returns new CreateCompletionRequestPrompt from []string.
func NewStringArrayCreateCompletionRequestPrompt(v []string) CreateCompletionRequestPrompt {
	var s CreateCompletionRequestPrompt
	s.SetStringArray(v)
	return s
}

// Up to 4 sequences where the API will stop generating further tokens. The returned text will not
// contain the stop sequence.
// CreateCompletionRequestStop represents sum type.
type CreateCompletionRequestStop struct {
	Type        CreateCompletionRequestStopType // switch on this field
	Null        struct{}
	String      string
	StringArray []string
}

// CreateCompletionRequestStopType is oneOf type of CreateCompletionRequestStop.
type CreateCompletionRequestStopType string

// Possible values for CreateCompletionRequestStopType.
const (
	NullCreateCompletionRequestStop        CreateCompletionRequestStopType = "struct{}"
	StringCreateCompletionRequestStop      CreateCompletionRequestStopType = "string"
	StringArrayCreateCompletionRequestStop CreateCompletionRequestStopType = "[]string"
)

// IsNull reports whether CreateCompletionRequestStop is struct{}.
func (s CreateCompletionRequestStop) IsNull() bool { return s.Type == NullCreateCompletionRequestStop }

// IsString reports whether CreateCompletionRequestStop is string.
func (s CreateCompletionRequestStop) IsString() bool {
	return s.Type == StringCreateCompletionRequestStop
}

// IsStringArray reports whether CreateCompletionRequestStop is []string.
func (s CreateCompletionRequestStop) IsStringArray() bool {
	return s.Type == StringArrayCreateCompletionRequestStop
}

// SetNull sets CreateCompletionRequestStop to struct{}.
func (s *CreateCompletionRequestStop) SetNull(v struct{}) {
	s.Type = NullCreateCompletionRequestStop
	s.Null = v
}

// GetNull returns struct{} and true boolean if CreateCompletionRequestStop is struct{}.
func (s CreateCompletionRequestStop) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullCreateCompletionRequestStop returns new CreateCompletionRequestStop from struct{}.
func NewNullCreateCompletionRequestStop(v struct{}) CreateCompletionRequestStop {
	var s CreateCompletionRequestStop
	s.SetNull(v)
	return s
}

// SetString sets CreateCompletionRequestStop to string.
func (s *CreateCompletionRequestStop) SetString(v string) {
	s.Type = StringCreateCompletionRequestStop
	s.String = v
}

// GetString returns string and true boolean if CreateCompletionRequestStop is string.
func (s CreateCompletionRequestStop) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringCreateCompletionRequestStop returns new CreateCompletionRequestStop from string.
func NewStringCreateCompletionRequestStop(v string) CreateCompletionRequestStop {
	var s CreateCompletionRequestStop
	s.SetString(v)
	return s
}

// SetStringArray sets CreateCompletionRequestStop to []string.
func (s *CreateCompletionRequestStop) SetStringArray(v []string) {
	s.Type = StringArrayCreateCompletionRequestStop
	s.StringArray = v
}

// GetStringArray returns []string and true boolean if CreateCompletionRequestStop is []string.
func (s CreateCompletionRequestStop) GetStringArray() (v []string, ok bool) {
	if !s.IsStringArray() {
		return v, false
	}
	return s.StringArray, true
}

// NewStringArrayCreateCompletionRequestStop returns new CreateCompletionRequestStop from []string.
func NewStringArrayCreateCompletionRequestStop(v []string) CreateCompletionRequestStop {
	var s CreateCompletionRequestStop
	s.SetStringArray(v)
	return s
}

// Ref: #/components/schemas/CreateCompletionResponse
type CreateCompletionResponse struct {
	ID      string                                `json:"id"`
	Object  string                                `json:"object"`
	Created int                                   `json:"created"`
	Model   string                                `json:"model"`
	Choices []CreateCompletionResponseChoicesItem `json:"choices"`
	Usage   OptCreateCompletionResponseUsage      `json:"usage"`
}

// GetID returns the value of ID.
func (s *CreateCompletionResponse) GetID() string {
	return s.ID
}

// GetObject returns the value of Object.
func (s *CreateCompletionResponse) GetObject() string {
	return s.Object
}

// GetCreated returns the value of Created.
func (s *CreateCompletionResponse) GetCreated() int {
	return s.Created
}

// GetModel returns the value of Model.
func (s *CreateCompletionResponse) GetModel() string {
	return s.Model
}

// GetChoices returns the value of Choices.
func (s *CreateCompletionResponse) GetChoices() []CreateCompletionResponseChoicesItem {
	return s.Choices
}

// GetUsage returns the value of Usage.
func (s *CreateCompletionResponse) GetUsage() OptCreateCompletionResponseUsage {
	return s.Usage
}

// SetID sets the value of ID.
func (s *CreateCompletionResponse) SetID(val string) {
	s.ID = val
}

// SetObject sets the value of Object.
func (s *CreateCompletionResponse) SetObject(val string) {
	s.Object = val
}

// SetCreated sets the value of Created.
func (s *CreateCompletionResponse) SetCreated(val int) {
	s.Created = val
}

// SetModel sets the value of Model.
func (s *CreateCompletionResponse) SetModel(val string) {
	s.Model = val
}

// SetChoices sets the value of Choices.
func (s *CreateCompletionResponse) SetChoices(val []CreateCompletionResponseChoicesItem) {
	s.Choices = val
}

// SetUsage sets the value of Usage.
func (s *CreateCompletionResponse) SetUsage(val OptCreateCompletionResponseUsage) {
	s.Usage = val
}

type CreateCompletionResponseChoicesItem struct {
	Text         OptString                                         `json:"text"`
	Index        OptInt                                            `json:"index"`
	Logprobs     OptNilCreateCompletionResponseChoicesItemLogprobs `json:"logprobs"`
	FinishReason OptString                                         `json:"finish_reason"`
}

// GetText returns the value of Text.
func (s *CreateCompletionResponseChoicesItem) GetText() OptString {
	return s.Text
}

// GetIndex returns the value of Index.
func (s *CreateCompletionResponseChoicesItem) GetIndex() OptInt {
	return s.Index
}

// GetLogprobs returns the value of Logprobs.
func (s *CreateCompletionResponseChoicesItem) GetLogprobs() OptNilCreateCompletionResponseChoicesItemLogprobs {
	return s.Logprobs
}

// GetFinishReason returns the value of FinishReason.
func (s *CreateCompletionResponseChoicesItem) GetFinishReason() OptString {
	return s.FinishReason
}

// SetText sets the value of Text.
func (s *CreateCompletionResponseChoicesItem) SetText(val OptString) {
	s.Text = val
}

// SetIndex sets the value of Index.
func (s *CreateCompletionResponseChoicesItem) SetIndex(val OptInt) {
	s.Index = val
}

// SetLogprobs sets the value of Logprobs.
func (s *CreateCompletionResponseChoicesItem) SetLogprobs(val OptNilCreateCompletionResponseChoicesItemLogprobs) {
	s.Logprobs = val
}

// SetFinishReason sets the value of FinishReason.
func (s *CreateCompletionResponseChoicesItem) SetFinishReason(val OptString) {
	s.FinishReason = val
}

type CreateCompletionResponseChoicesItemLogprobs struct {
	Tokens        []string                                                     `json:"tokens"`
	TokenLogprobs []float64                                                    `json:"token_logprobs"`
	TopLogprobs   []CreateCompletionResponseChoicesItemLogprobsTopLogprobsItem `json:"top_logprobs"`
	TextOffset    []int                                                        `json:"text_offset"`
}

// GetTokens returns the value of Tokens.
func (s *CreateCompletionResponseChoicesItemLogprobs) GetTokens() []string {
	return s.Tokens
}

// GetTokenLogprobs returns the value of TokenLogprobs.
func (s *CreateCompletionResponseChoicesItemLogprobs) GetTokenLogprobs() []float64 {
	return s.TokenLogprobs
}

// GetTopLogprobs returns the value of TopLogprobs.
func (s *CreateCompletionResponseChoicesItemLogprobs) GetTopLogprobs() []CreateCompletionResponseChoicesItemLogprobsTopLogprobsItem {
	return s.TopLogprobs
}

// GetTextOffset returns the value of TextOffset.
func (s *CreateCompletionResponseChoicesItemLogprobs) GetTextOffset() []int {
	return s.TextOffset
}

// SetTokens sets the value of Tokens.
func (s *CreateCompletionResponseChoicesItemLogprobs) SetTokens(val []string) {
	s.Tokens = val
}

// SetTokenLogprobs sets the value of TokenLogprobs.
func (s *CreateCompletionResponseChoicesItemLogprobs) SetTokenLogprobs(val []float64) {
	s.TokenLogprobs = val
}

// SetTopLogprobs sets the value of TopLogprobs.
func (s *CreateCompletionResponseChoicesItemLogprobs) SetTopLogprobs(val []CreateCompletionResponseChoicesItemLogprobsTopLogprobsItem) {
	s.TopLogprobs = val
}

// SetTextOffset sets the value of TextOffset.
func (s *CreateCompletionResponseChoicesItemLogprobs) SetTextOffset(val []int) {
	s.TextOffset = val
}

type CreateCompletionResponseChoicesItemLogprobsTopLogprobsItem struct{}

type CreateCompletionResponseUsage struct {
	PromptTokens     int `json:"prompt_tokens"`
	CompletionTokens int `json:"completion_tokens"`
	TotalTokens      int `json:"total_tokens"`
}

// GetPromptTokens returns the value of PromptTokens.
func (s *CreateCompletionResponseUsage) GetPromptTokens() int {
	return s.PromptTokens
}

// GetCompletionTokens returns the value of CompletionTokens.
func (s *CreateCompletionResponseUsage) GetCompletionTokens() int {
	return s.CompletionTokens
}

// GetTotalTokens returns the value of TotalTokens.
func (s *CreateCompletionResponseUsage) GetTotalTokens() int {
	return s.TotalTokens
}

// SetPromptTokens sets the value of PromptTokens.
func (s *CreateCompletionResponseUsage) SetPromptTokens(val int) {
	s.PromptTokens = val
}

// SetCompletionTokens sets the value of CompletionTokens.
func (s *CreateCompletionResponseUsage) SetCompletionTokens(val int) {
	s.CompletionTokens = val
}

// SetTotalTokens sets the value of TotalTokens.
func (s *CreateCompletionResponseUsage) SetTotalTokens(val int) {
	s.TotalTokens = val
}

// Ref: #/components/schemas/CreateEditRequest
type CreateEditRequest struct {
	// ID of the model to use. You can use the `text-davinci-edit-001` or `code-davinci-edit-001` model
	// with this endpoint.
	Model string `json:"model"`
	// The input text to use as a starting point for the edit.
	Input OptNilString `json:"input"`
	// The instruction that tells the model how to edit the prompt.
	Instruction string `json:"instruction"`
	// How many edits to generate for the input and instruction.
	N OptNilInt `json:"n"`
	// What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output
	// more random, while lower values like 0.2 will make it more focused and deterministic.
	// We generally recommend altering this or `top_p` but not both.
	Temperature OptNilFloat64 `json:"temperature"`
	// An alternative to sampling with temperature, called nucleus sampling, where the model considers
	// the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the
	// top 10% probability mass are considered.
	// We generally recommend altering this or `temperature` but not both.
	TopP OptNilFloat64 `json:"top_p"`
}

// GetModel returns the value of Model.
func (s *CreateEditRequest) GetModel() string {
	return s.Model
}

// GetInput returns the value of Input.
func (s *CreateEditRequest) GetInput() OptNilString {
	return s.Input
}

// GetInstruction returns the value of Instruction.
func (s *CreateEditRequest) GetInstruction() string {
	return s.Instruction
}

// GetN returns the value of N.
func (s *CreateEditRequest) GetN() OptNilInt {
	return s.N
}

// GetTemperature returns the value of Temperature.
func (s *CreateEditRequest) GetTemperature() OptNilFloat64 {
	return s.Temperature
}

// GetTopP returns the value of TopP.
func (s *CreateEditRequest) GetTopP() OptNilFloat64 {
	return s.TopP
}

// SetModel sets the value of Model.
func (s *CreateEditRequest) SetModel(val string) {
	s.Model = val
}

// SetInput sets the value of Input.
func (s *CreateEditRequest) SetInput(val OptNilString) {
	s.Input = val
}

// SetInstruction sets the value of Instruction.
func (s *CreateEditRequest) SetInstruction(val string) {
	s.Instruction = val
}

// SetN sets the value of N.
func (s *CreateEditRequest) SetN(val OptNilInt) {
	s.N = val
}

// SetTemperature sets the value of Temperature.
func (s *CreateEditRequest) SetTemperature(val OptNilFloat64) {
	s.Temperature = val
}

// SetTopP sets the value of TopP.
func (s *CreateEditRequest) SetTopP(val OptNilFloat64) {
	s.TopP = val
}

// Ref: #/components/schemas/CreateEditResponse
type CreateEditResponse struct {
	Object  string                          `json:"object"`
	Created int                             `json:"created"`
	Choices []CreateEditResponseChoicesItem `json:"choices"`
	Usage   CreateEditResponseUsage         `json:"usage"`
}

// GetObject returns the value of Object.
func (s *CreateEditResponse) GetObject() string {
	return s.Object
}

// GetCreated returns the value of Created.
func (s *CreateEditResponse) GetCreated() int {
	return s.Created
}

// GetChoices returns the value of Choices.
func (s *CreateEditResponse) GetChoices() []CreateEditResponseChoicesItem {
	return s.Choices
}

// GetUsage returns the value of Usage.
func (s *CreateEditResponse) GetUsage() CreateEditResponseUsage {
	return s.Usage
}

// SetObject sets the value of Object.
func (s *CreateEditResponse) SetObject(val string) {
	s.Object = val
}

// SetCreated sets the value of Created.
func (s *CreateEditResponse) SetCreated(val int) {
	s.Created = val
}

// SetChoices sets the value of Choices.
func (s *CreateEditResponse) SetChoices(val []CreateEditResponseChoicesItem) {
	s.Choices = val
}

// SetUsage sets the value of Usage.
func (s *CreateEditResponse) SetUsage(val CreateEditResponseUsage) {
	s.Usage = val
}

type CreateEditResponseChoicesItem struct {
	Text         OptString                                   `json:"text"`
	Index        OptInt                                      `json:"index"`
	Logprobs     OptNilCreateEditResponseChoicesItemLogprobs `json:"logprobs"`
	FinishReason OptString                                   `json:"finish_reason"`
}

// GetText returns the value of Text.
func (s *CreateEditResponseChoicesItem) GetText() OptString {
	return s.Text
}

// GetIndex returns the value of Index.
func (s *CreateEditResponseChoicesItem) GetIndex() OptInt {
	return s.Index
}

// GetLogprobs returns the value of Logprobs.
func (s *CreateEditResponseChoicesItem) GetLogprobs() OptNilCreateEditResponseChoicesItemLogprobs {
	return s.Logprobs
}

// GetFinishReason returns the value of FinishReason.
func (s *CreateEditResponseChoicesItem) GetFinishReason() OptString {
	return s.FinishReason
}

// SetText sets the value of Text.
func (s *CreateEditResponseChoicesItem) SetText(val OptString) {
	s.Text = val
}

// SetIndex sets the value of Index.
func (s *CreateEditResponseChoicesItem) SetIndex(val OptInt) {
	s.Index = val
}

// SetLogprobs sets the value of Logprobs.
func (s *CreateEditResponseChoicesItem) SetLogprobs(val OptNilCreateEditResponseChoicesItemLogprobs) {
	s.Logprobs = val
}

// SetFinishReason sets the value of FinishReason.
func (s *CreateEditResponseChoicesItem) SetFinishReason(val OptString) {
	s.FinishReason = val
}

type CreateEditResponseChoicesItemLogprobs struct {
	Tokens        []string                                               `json:"tokens"`
	TokenLogprobs []float64                                              `json:"token_logprobs"`
	TopLogprobs   []CreateEditResponseChoicesItemLogprobsTopLogprobsItem `json:"top_logprobs"`
	TextOffset    []int                                                  `json:"text_offset"`
}

// GetTokens returns the value of Tokens.
func (s *CreateEditResponseChoicesItemLogprobs) GetTokens() []string {
	return s.Tokens
}

// GetTokenLogprobs returns the value of TokenLogprobs.
func (s *CreateEditResponseChoicesItemLogprobs) GetTokenLogprobs() []float64 {
	return s.TokenLogprobs
}

// GetTopLogprobs returns the value of TopLogprobs.
func (s *CreateEditResponseChoicesItemLogprobs) GetTopLogprobs() []CreateEditResponseChoicesItemLogprobsTopLogprobsItem {
	return s.TopLogprobs
}

// GetTextOffset returns the value of TextOffset.
func (s *CreateEditResponseChoicesItemLogprobs) GetTextOffset() []int {
	return s.TextOffset
}

// SetTokens sets the value of Tokens.
func (s *CreateEditResponseChoicesItemLogprobs) SetTokens(val []string) {
	s.Tokens = val
}

// SetTokenLogprobs sets the value of TokenLogprobs.
func (s *CreateEditResponseChoicesItemLogprobs) SetTokenLogprobs(val []float64) {
	s.TokenLogprobs = val
}

// SetTopLogprobs sets the value of TopLogprobs.
func (s *CreateEditResponseChoicesItemLogprobs) SetTopLogprobs(val []CreateEditResponseChoicesItemLogprobsTopLogprobsItem) {
	s.TopLogprobs = val
}

// SetTextOffset sets the value of TextOffset.
func (s *CreateEditResponseChoicesItemLogprobs) SetTextOffset(val []int) {
	s.TextOffset = val
}

type CreateEditResponseChoicesItemLogprobsTopLogprobsItem struct{}

type CreateEditResponseUsage struct {
	PromptTokens     int `json:"prompt_tokens"`
	CompletionTokens int `json:"completion_tokens"`
	TotalTokens      int `json:"total_tokens"`
}

// GetPromptTokens returns the value of PromptTokens.
func (s *CreateEditResponseUsage) GetPromptTokens() int {
	return s.PromptTokens
}

// GetCompletionTokens returns the value of CompletionTokens.
func (s *CreateEditResponseUsage) GetCompletionTokens() int {
	return s.CompletionTokens
}

// GetTotalTokens returns the value of TotalTokens.
func (s *CreateEditResponseUsage) GetTotalTokens() int {
	return s.TotalTokens
}

// SetPromptTokens sets the value of PromptTokens.
func (s *CreateEditResponseUsage) SetPromptTokens(val int) {
	s.PromptTokens = val
}

// SetCompletionTokens sets the value of CompletionTokens.
func (s *CreateEditResponseUsage) SetCompletionTokens(val int) {
	s.CompletionTokens = val
}

// SetTotalTokens sets the value of TotalTokens.
func (s *CreateEditResponseUsage) SetTotalTokens(val int) {
	s.TotalTokens = val
}

// Ref: #/components/schemas/CreateEmbeddingRequest
type CreateEmbeddingRequest struct {
	// ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see
	// all of your available models, or see our [Model overview](/docs/models/overview) for descriptions
	// of them.
	Model string `json:"model"`
	// Input text to get embeddings for, encoded as a string or array of tokens. To get embeddings for
	// multiple inputs in a single request, pass an array of strings or array of token arrays. Each input
	// must not exceed 8192 tokens in length.
	Input CreateEmbeddingRequestInput `json:"input"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetModel returns the value of Model.
func (s *CreateEmbeddingRequest) GetModel() string {
	return s.Model
}

// GetInput returns the value of Input.
func (s *CreateEmbeddingRequest) GetInput() CreateEmbeddingRequestInput {
	return s.Input
}

// GetUser returns the value of User.
func (s *CreateEmbeddingRequest) GetUser() OptString {
	return s.User
}

// SetModel sets the value of Model.
func (s *CreateEmbeddingRequest) SetModel(val string) {
	s.Model = val
}

// SetInput sets the value of Input.
func (s *CreateEmbeddingRequest) SetInput(val CreateEmbeddingRequestInput) {
	s.Input = val
}

// SetUser sets the value of User.
func (s *CreateEmbeddingRequest) SetUser(val OptString) {
	s.User = val
}

// Input text to get embeddings for, encoded as a string or array of tokens. To get embeddings for
// multiple inputs in a single request, pass an array of strings or array of token arrays. Each input
// must not exceed 8192 tokens in length.
// CreateEmbeddingRequestInput represents sum type.
type CreateEmbeddingRequestInput struct {
	Type        CreateEmbeddingRequestInputType // switch on this field
	String      string
	StringArray []string
}

// CreateEmbeddingRequestInputType is oneOf type of CreateEmbeddingRequestInput.
type CreateEmbeddingRequestInputType string

// Possible values for CreateEmbeddingRequestInputType.
const (
	StringCreateEmbeddingRequestInput      CreateEmbeddingRequestInputType = "string"
	StringArrayCreateEmbeddingRequestInput CreateEmbeddingRequestInputType = "[]string"
)

// IsString reports whether CreateEmbeddingRequestInput is string.
func (s CreateEmbeddingRequestInput) IsString() bool {
	return s.Type == StringCreateEmbeddingRequestInput
}

// IsStringArray reports whether CreateEmbeddingRequestInput is []string.
func (s CreateEmbeddingRequestInput) IsStringArray() bool {
	return s.Type == StringArrayCreateEmbeddingRequestInput
}

// SetString sets CreateEmbeddingRequestInput to string.
func (s *CreateEmbeddingRequestInput) SetString(v string) {
	s.Type = StringCreateEmbeddingRequestInput
	s.String = v
}

// GetString returns string and true boolean if CreateEmbeddingRequestInput is string.
func (s CreateEmbeddingRequestInput) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringCreateEmbeddingRequestInput returns new CreateEmbeddingRequestInput from string.
func NewStringCreateEmbeddingRequestInput(v string) CreateEmbeddingRequestInput {
	var s CreateEmbeddingRequestInput
	s.SetString(v)
	return s
}

// SetStringArray sets CreateEmbeddingRequestInput to []string.
func (s *CreateEmbeddingRequestInput) SetStringArray(v []string) {
	s.Type = StringArrayCreateEmbeddingRequestInput
	s.StringArray = v
}

// GetStringArray returns []string and true boolean if CreateEmbeddingRequestInput is []string.
func (s CreateEmbeddingRequestInput) GetStringArray() (v []string, ok bool) {
	if !s.IsStringArray() {
		return v, false
	}
	return s.StringArray, true
}

// NewStringArrayCreateEmbeddingRequestInput returns new CreateEmbeddingRequestInput from []string.
func NewStringArrayCreateEmbeddingRequestInput(v []string) CreateEmbeddingRequestInput {
	var s CreateEmbeddingRequestInput
	s.SetStringArray(v)
	return s
}

// Ref: #/components/schemas/CreateEmbeddingResponse
type CreateEmbeddingResponse struct {
	Object string                            `json:"object"`
	Model  string                            `json:"model"`
	Data   []CreateEmbeddingResponseDataItem `json:"data"`
	Usage  CreateEmbeddingResponseUsage      `json:"usage"`
}

// GetObject returns the value of Object.
func (s *CreateEmbeddingResponse) GetObject() string {
	return s.Object
}

// GetModel returns the value of Model.
func (s *CreateEmbeddingResponse) GetModel() string {
	return s.Model
}

// GetData returns the value of Data.
func (s *CreateEmbeddingResponse) GetData() []CreateEmbeddingResponseDataItem {
	return s.Data
}

// GetUsage returns the value of Usage.
func (s *CreateEmbeddingResponse) GetUsage() CreateEmbeddingResponseUsage {
	return s.Usage
}

// SetObject sets the value of Object.
func (s *CreateEmbeddingResponse) SetObject(val string) {
	s.Object = val
}

// SetModel sets the value of Model.
func (s *CreateEmbeddingResponse) SetModel(val string) {
	s.Model = val
}

// SetData sets the value of Data.
func (s *CreateEmbeddingResponse) SetData(val []CreateEmbeddingResponseDataItem) {
	s.Data = val
}

// SetUsage sets the value of Usage.
func (s *CreateEmbeddingResponse) SetUsage(val CreateEmbeddingResponseUsage) {
	s.Usage = val
}

type CreateEmbeddingResponseDataItem struct {
	Index     int       `json:"index"`
	Object    string    `json:"object"`
	Embedding []float64 `json:"embedding"`
}

// GetIndex returns the value of Index.
func (s *CreateEmbeddingResponseDataItem) GetIndex() int {
	return s.Index
}

// GetObject returns the value of Object.
func (s *CreateEmbeddingResponseDataItem) GetObject() string {
	return s.Object
}

// GetEmbedding returns the value of Embedding.
func (s *CreateEmbeddingResponseDataItem) GetEmbedding() []float64 {
	return s.Embedding
}

// SetIndex sets the value of Index.
func (s *CreateEmbeddingResponseDataItem) SetIndex(val int) {
	s.Index = val
}

// SetObject sets the value of Object.
func (s *CreateEmbeddingResponseDataItem) SetObject(val string) {
	s.Object = val
}

// SetEmbedding sets the value of Embedding.
func (s *CreateEmbeddingResponseDataItem) SetEmbedding(val []float64) {
	s.Embedding = val
}

type CreateEmbeddingResponseUsage struct {
	PromptTokens int `json:"prompt_tokens"`
	TotalTokens  int `json:"total_tokens"`
}

// GetPromptTokens returns the value of PromptTokens.
func (s *CreateEmbeddingResponseUsage) GetPromptTokens() int {
	return s.PromptTokens
}

// GetTotalTokens returns the value of TotalTokens.
func (s *CreateEmbeddingResponseUsage) GetTotalTokens() int {
	return s.TotalTokens
}

// SetPromptTokens sets the value of PromptTokens.
func (s *CreateEmbeddingResponseUsage) SetPromptTokens(val int) {
	s.PromptTokens = val
}

// SetTotalTokens sets the value of TotalTokens.
func (s *CreateEmbeddingResponseUsage) SetTotalTokens(val int) {
	s.TotalTokens = val
}

// Ref: #/components/schemas/CreateFileRequest
type CreateFileRequestMultipart struct {
	// Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.
	// If the `purpose` is set to "fine-tune", each line is a JSON record with "prompt" and "completion"
	// fields representing your [training examples](/docs/guides/fine-tuning/prepare-training-data).
	File ht.MultipartFile `json:"file"`
	// The intended purpose of the uploaded documents.
	// Use "fine-tune" for [Fine-tuning](/docs/api-reference/fine-tunes). This allows us to validate the
	// format of the uploaded file.
	Purpose string `json:"purpose"`
}

// GetFile returns the value of File.
func (s *CreateFileRequestMultipart) GetFile() ht.MultipartFile {
	return s.File
}

// GetPurpose returns the value of Purpose.
func (s *CreateFileRequestMultipart) GetPurpose() string {
	return s.Purpose
}

// SetFile sets the value of File.
func (s *CreateFileRequestMultipart) SetFile(val ht.MultipartFile) {
	s.File = val
}

// SetPurpose sets the value of Purpose.
func (s *CreateFileRequestMultipart) SetPurpose(val string) {
	s.Purpose = val
}

// Ref: #/components/schemas/CreateFineTuneRequest
type CreateFineTuneRequest struct {
	// The ID of an uploaded file that contains training data.
	// See [upload file](/docs/api-reference/files/upload) for how to upload a file.
	// Your dataset must be formatted as a JSONL file, where each training
	// example is a JSON object with the keys "prompt" and "completion".
	// Additionally, you must upload your file with the purpose `fine-tune`.
	// See the [fine-tuning guide](/docs/guides/fine-tuning/creating-training-data) for more details.
	TrainingFile string `json:"training_file"`
	// The ID of an uploaded file that contains validation data.
	// If you provide this file, the data is used to generate validation
	// metrics periodically during fine-tuning. These metrics can be viewed in
	// the [fine-tuning results file](/docs/guides/fine-tuning/analyzing-your-fine-tuned-model).
	// Your train and validation data should be mutually exclusive.
	// Your dataset must be formatted as a JSONL file, where each validation
	// example is a JSON object with the keys "prompt" and "completion".
	// Additionally, you must upload your file with the purpose `fine-tune`.
	// See the [fine-tuning guide](/docs/guides/fine-tuning/creating-training-data) for more details.
	ValidationFile OptNilString `json:"validation_file"`
	// The name of the base model to fine-tune. You can select one of "ada",
	// "babbage", "curie", "davinci", or a fine-tuned model created after 2022-04-21.
	// To learn more about these models, see the
	// [Models](https://platform.openai.com/docs/models) documentation.
	Model OptNilString `json:"model"`
	// The number of epochs to train the model for. An epoch refers to one
	// full cycle through the training dataset.
	NEpochs OptNilInt `json:"n_epochs"`
	// The batch size to use for training. The batch size is the number of
	// training examples used to train a single forward and backward pass.
	// By default, the batch size will be dynamically configured to be
	// ~0.2% of the number of examples in the training set, capped at 256 -
	// in general, we've found that larger batch sizes tend to work better
	// for larger datasets.
	BatchSize OptNilInt `json:"batch_size"`
	// The learning rate multiplier to use for training.
	// The fine-tuning learning rate is the original learning rate used for
	// pretraining multiplied by this value.
	// By default, the learning rate multiplier is the 0.05, 0.1, or 0.2
	// depending on final `batch_size` (larger learning rates tend to
	// perform better with larger batch sizes). We recommend experimenting
	// with values in the range 0.02 to 0.2 to see what produces the best
	// results.
	LearningRateMultiplier OptNilFloat64 `json:"learning_rate_multiplier"`
	// The weight to use for loss on the prompt tokens. This controls how
	// much the model tries to learn to generate the prompt (as compared
	// to the completion which always has a weight of 1.0), and can add
	// a stabilizing effect to training when completions are short.
	// If prompts are extremely long (relative to completions), it may make
	// sense to reduce this weight so as to avoid over-prioritizing
	// learning the prompt.
	PromptLossWeight OptNilFloat64 `json:"prompt_loss_weight"`
	// If set, we calculate classification-specific metrics such as accuracy
	// and F-1 score using the validation set at the end of every epoch.
	// These metrics can be viewed in the [results
	// file](/docs/guides/fine-tuning/analyzing-your-fine-tuned-model).
	// In order to compute classification metrics, you must provide a
	// `validation_file`. Additionally, you must
	// specify `classification_n_classes` for multiclass classification or
	// `classification_positive_class` for binary classification.
	ComputeClassificationMetrics OptNilBool `json:"compute_classification_metrics"`
	// The number of classes in a classification task.
	// This parameter is required for multiclass classification.
	ClassificationNClasses OptNilInt `json:"classification_n_classes"`
	// The positive class in binary classification.
	// This parameter is needed to generate precision, recall, and F1
	// metrics when doing binary classification.
	ClassificationPositiveClass OptNilString `json:"classification_positive_class"`
	// If this is provided, we calculate F-beta scores at the specified
	// beta values. The F-beta score is a generalization of F-1 score.
	// This is only used for binary classification.
	// With a beta of 1 (i.e. the F-1 score), precision and recall are
	// given the same weight. A larger beta score puts more weight on
	// recall and less on precision. A smaller beta score puts more weight
	// on precision and less on recall.
	ClassificationBetas OptNilFloat64Array `json:"classification_betas"`
	// A string of up to 40 characters that will be added to your fine-tuned model name.
	// For example, a `suffix` of "custom-model-name" would produce a model name like
	// `ada:ft-your-org:custom-model-name-2022-02-15-04-21-04`.
	Suffix OptNilString `json:"suffix"`
}

// GetTrainingFile returns the value of TrainingFile.
func (s *CreateFineTuneRequest) GetTrainingFile() string {
	return s.TrainingFile
}

// GetValidationFile returns the value of ValidationFile.
func (s *CreateFineTuneRequest) GetValidationFile() OptNilString {
	return s.ValidationFile
}

// GetModel returns the value of Model.
func (s *CreateFineTuneRequest) GetModel() OptNilString {
	return s.Model
}

// GetNEpochs returns the value of NEpochs.
func (s *CreateFineTuneRequest) GetNEpochs() OptNilInt {
	return s.NEpochs
}

// GetBatchSize returns the value of BatchSize.
func (s *CreateFineTuneRequest) GetBatchSize() OptNilInt {
	return s.BatchSize
}

// GetLearningRateMultiplier returns the value of LearningRateMultiplier.
func (s *CreateFineTuneRequest) GetLearningRateMultiplier() OptNilFloat64 {
	return s.LearningRateMultiplier
}

// GetPromptLossWeight returns the value of PromptLossWeight.
func (s *CreateFineTuneRequest) GetPromptLossWeight() OptNilFloat64 {
	return s.PromptLossWeight
}

// GetComputeClassificationMetrics returns the value of ComputeClassificationMetrics.
func (s *CreateFineTuneRequest) GetComputeClassificationMetrics() OptNilBool {
	return s.ComputeClassificationMetrics
}

// GetClassificationNClasses returns the value of ClassificationNClasses.
func (s *CreateFineTuneRequest) GetClassificationNClasses() OptNilInt {
	return s.ClassificationNClasses
}

// GetClassificationPositiveClass returns the value of ClassificationPositiveClass.
func (s *CreateFineTuneRequest) GetClassificationPositiveClass() OptNilString {
	return s.ClassificationPositiveClass
}

// GetClassificationBetas returns the value of ClassificationBetas.
func (s *CreateFineTuneRequest) GetClassificationBetas() OptNilFloat64Array {
	return s.ClassificationBetas
}

// GetSuffix returns the value of Suffix.
func (s *CreateFineTuneRequest) GetSuffix() OptNilString {
	return s.Suffix
}

// SetTrainingFile sets the value of TrainingFile.
func (s *CreateFineTuneRequest) SetTrainingFile(val string) {
	s.TrainingFile = val
}

// SetValidationFile sets the value of ValidationFile.
func (s *CreateFineTuneRequest) SetValidationFile(val OptNilString) {
	s.ValidationFile = val
}

// SetModel sets the value of Model.
func (s *CreateFineTuneRequest) SetModel(val OptNilString) {
	s.Model = val
}

// SetNEpochs sets the value of NEpochs.
func (s *CreateFineTuneRequest) SetNEpochs(val OptNilInt) {
	s.NEpochs = val
}

// SetBatchSize sets the value of BatchSize.
func (s *CreateFineTuneRequest) SetBatchSize(val OptNilInt) {
	s.BatchSize = val
}

// SetLearningRateMultiplier sets the value of LearningRateMultiplier.
func (s *CreateFineTuneRequest) SetLearningRateMultiplier(val OptNilFloat64) {
	s.LearningRateMultiplier = val
}

// SetPromptLossWeight sets the value of PromptLossWeight.
func (s *CreateFineTuneRequest) SetPromptLossWeight(val OptNilFloat64) {
	s.PromptLossWeight = val
}

// SetComputeClassificationMetrics sets the value of ComputeClassificationMetrics.
func (s *CreateFineTuneRequest) SetComputeClassificationMetrics(val OptNilBool) {
	s.ComputeClassificationMetrics = val
}

// SetClassificationNClasses sets the value of ClassificationNClasses.
func (s *CreateFineTuneRequest) SetClassificationNClasses(val OptNilInt) {
	s.ClassificationNClasses = val
}

// SetClassificationPositiveClass sets the value of ClassificationPositiveClass.
func (s *CreateFineTuneRequest) SetClassificationPositiveClass(val OptNilString) {
	s.ClassificationPositiveClass = val
}

// SetClassificationBetas sets the value of ClassificationBetas.
func (s *CreateFineTuneRequest) SetClassificationBetas(val OptNilFloat64Array) {
	s.ClassificationBetas = val
}

// SetSuffix sets the value of Suffix.
func (s *CreateFineTuneRequest) SetSuffix(val OptNilString) {
	s.Suffix = val
}

// Ref: #/components/schemas/CreateImageEditRequest
type CreateImageEditRequestMultipart struct {
	// The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided,
	// image must have transparency, which will be used as the mask.
	Image ht.MultipartFile `json:"image"`
	// An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where
	// `image` should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as
	// `image`.
	Mask OptMultipartFile `json:"mask"`
	// A text description of the desired image(s). The maximum length is 1000 characters.
	Prompt string `json:"prompt"`
	// The number of images to generate. Must be between 1 and 10.
	N OptNilInt `json:"n"`
	// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
	Size OptNilCreateImageEditRequestMultipartSize `json:"size"`
	// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
	ResponseFormat OptNilCreateImageEditRequestMultipartResponseFormat `json:"response_format"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetImage returns the value of Image.
func (s *CreateImageEditRequestMultipart) GetImage() ht.MultipartFile {
	return s.Image
}

// GetMask returns the value of Mask.
func (s *CreateImageEditRequestMultipart) GetMask() OptMultipartFile {
	return s.Mask
}

// GetPrompt returns the value of Prompt.
func (s *CreateImageEditRequestMultipart) GetPrompt() string {
	return s.Prompt
}

// GetN returns the value of N.
func (s *CreateImageEditRequestMultipart) GetN() OptNilInt {
	return s.N
}

// GetSize returns the value of Size.
func (s *CreateImageEditRequestMultipart) GetSize() OptNilCreateImageEditRequestMultipartSize {
	return s.Size
}

// GetResponseFormat returns the value of ResponseFormat.
func (s *CreateImageEditRequestMultipart) GetResponseFormat() OptNilCreateImageEditRequestMultipartResponseFormat {
	return s.ResponseFormat
}

// GetUser returns the value of User.
func (s *CreateImageEditRequestMultipart) GetUser() OptString {
	return s.User
}

// SetImage sets the value of Image.
func (s *CreateImageEditRequestMultipart) SetImage(val ht.MultipartFile) {
	s.Image = val
}

// SetMask sets the value of Mask.
func (s *CreateImageEditRequestMultipart) SetMask(val OptMultipartFile) {
	s.Mask = val
}

// SetPrompt sets the value of Prompt.
func (s *CreateImageEditRequestMultipart) SetPrompt(val string) {
	s.Prompt = val
}

// SetN sets the value of N.
func (s *CreateImageEditRequestMultipart) SetN(val OptNilInt) {
	s.N = val
}

// SetSize sets the value of Size.
func (s *CreateImageEditRequestMultipart) SetSize(val OptNilCreateImageEditRequestMultipartSize) {
	s.Size = val
}

// SetResponseFormat sets the value of ResponseFormat.
func (s *CreateImageEditRequestMultipart) SetResponseFormat(val OptNilCreateImageEditRequestMultipartResponseFormat) {
	s.ResponseFormat = val
}

// SetUser sets the value of User.
func (s *CreateImageEditRequestMultipart) SetUser(val OptString) {
	s.User = val
}

// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
type CreateImageEditRequestMultipartResponseFormat string

const (
	CreateImageEditRequestMultipartResponseFormatURL     CreateImageEditRequestMultipartResponseFormat = "url"
	CreateImageEditRequestMultipartResponseFormatB64JSON CreateImageEditRequestMultipartResponseFormat = "b64_json"
)

// AllValues returns all CreateImageEditRequestMultipartResponseFormat values.
func (CreateImageEditRequestMultipartResponseFormat) AllValues() []CreateImageEditRequestMultipartResponseFormat {
	return []CreateImageEditRequestMultipartResponseFormat{
		CreateImageEditRequestMultipartResponseFormatURL,
		CreateImageEditRequestMultipartResponseFormatB64JSON,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageEditRequestMultipartResponseFormat) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageEditRequestMultipartResponseFormatURL:
		return []byte(s), nil
	case CreateImageEditRequestMultipartResponseFormatB64JSON:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageEditRequestMultipartResponseFormat) UnmarshalText(data []byte) error {
	switch CreateImageEditRequestMultipartResponseFormat(data) {
	case CreateImageEditRequestMultipartResponseFormatURL:
		*s = CreateImageEditRequestMultipartResponseFormatURL
		return nil
	case CreateImageEditRequestMultipartResponseFormatB64JSON:
		*s = CreateImageEditRequestMultipartResponseFormatB64JSON
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
type CreateImageEditRequestMultipartSize string

const (
	CreateImageEditRequestMultipartSize256x256   CreateImageEditRequestMultipartSize = "256x256"
	CreateImageEditRequestMultipartSize512x512   CreateImageEditRequestMultipartSize = "512x512"
	CreateImageEditRequestMultipartSize1024x1024 CreateImageEditRequestMultipartSize = "1024x1024"
)

// AllValues returns all CreateImageEditRequestMultipartSize values.
func (CreateImageEditRequestMultipartSize) AllValues() []CreateImageEditRequestMultipartSize {
	return []CreateImageEditRequestMultipartSize{
		CreateImageEditRequestMultipartSize256x256,
		CreateImageEditRequestMultipartSize512x512,
		CreateImageEditRequestMultipartSize1024x1024,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageEditRequestMultipartSize) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageEditRequestMultipartSize256x256:
		return []byte(s), nil
	case CreateImageEditRequestMultipartSize512x512:
		return []byte(s), nil
	case CreateImageEditRequestMultipartSize1024x1024:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageEditRequestMultipartSize) UnmarshalText(data []byte) error {
	switch CreateImageEditRequestMultipartSize(data) {
	case CreateImageEditRequestMultipartSize256x256:
		*s = CreateImageEditRequestMultipartSize256x256
		return nil
	case CreateImageEditRequestMultipartSize512x512:
		*s = CreateImageEditRequestMultipartSize512x512
		return nil
	case CreateImageEditRequestMultipartSize1024x1024:
		*s = CreateImageEditRequestMultipartSize1024x1024
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateImageRequest
type CreateImageRequest struct {
	// A text description of the desired image(s). The maximum length is 1000 characters.
	Prompt string `json:"prompt"`
	// The number of images to generate. Must be between 1 and 10.
	N OptNilInt `json:"n"`
	// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
	Size OptNilCreateImageRequestSize `json:"size"`
	// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
	ResponseFormat OptNilCreateImageRequestResponseFormat `json:"response_format"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetPrompt returns the value of Prompt.
func (s *CreateImageRequest) GetPrompt() string {
	return s.Prompt
}

// GetN returns the value of N.
func (s *CreateImageRequest) GetN() OptNilInt {
	return s.N
}

// GetSize returns the value of Size.
func (s *CreateImageRequest) GetSize() OptNilCreateImageRequestSize {
	return s.Size
}

// GetResponseFormat returns the value of ResponseFormat.
func (s *CreateImageRequest) GetResponseFormat() OptNilCreateImageRequestResponseFormat {
	return s.ResponseFormat
}

// GetUser returns the value of User.
func (s *CreateImageRequest) GetUser() OptString {
	return s.User
}

// SetPrompt sets the value of Prompt.
func (s *CreateImageRequest) SetPrompt(val string) {
	s.Prompt = val
}

// SetN sets the value of N.
func (s *CreateImageRequest) SetN(val OptNilInt) {
	s.N = val
}

// SetSize sets the value of Size.
func (s *CreateImageRequest) SetSize(val OptNilCreateImageRequestSize) {
	s.Size = val
}

// SetResponseFormat sets the value of ResponseFormat.
func (s *CreateImageRequest) SetResponseFormat(val OptNilCreateImageRequestResponseFormat) {
	s.ResponseFormat = val
}

// SetUser sets the value of User.
func (s *CreateImageRequest) SetUser(val OptString) {
	s.User = val
}

// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
type CreateImageRequestResponseFormat string

const (
	CreateImageRequestResponseFormatURL     CreateImageRequestResponseFormat = "url"
	CreateImageRequestResponseFormatB64JSON CreateImageRequestResponseFormat = "b64_json"
)

// AllValues returns all CreateImageRequestResponseFormat values.
func (CreateImageRequestResponseFormat) AllValues() []CreateImageRequestResponseFormat {
	return []CreateImageRequestResponseFormat{
		CreateImageRequestResponseFormatURL,
		CreateImageRequestResponseFormatB64JSON,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageRequestResponseFormat) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageRequestResponseFormatURL:
		return []byte(s), nil
	case CreateImageRequestResponseFormatB64JSON:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageRequestResponseFormat) UnmarshalText(data []byte) error {
	switch CreateImageRequestResponseFormat(data) {
	case CreateImageRequestResponseFormatURL:
		*s = CreateImageRequestResponseFormatURL
		return nil
	case CreateImageRequestResponseFormatB64JSON:
		*s = CreateImageRequestResponseFormatB64JSON
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
type CreateImageRequestSize string

const (
	CreateImageRequestSize256x256   CreateImageRequestSize = "256x256"
	CreateImageRequestSize512x512   CreateImageRequestSize = "512x512"
	CreateImageRequestSize1024x1024 CreateImageRequestSize = "1024x1024"
)

// AllValues returns all CreateImageRequestSize values.
func (CreateImageRequestSize) AllValues() []CreateImageRequestSize {
	return []CreateImageRequestSize{
		CreateImageRequestSize256x256,
		CreateImageRequestSize512x512,
		CreateImageRequestSize1024x1024,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageRequestSize) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageRequestSize256x256:
		return []byte(s), nil
	case CreateImageRequestSize512x512:
		return []byte(s), nil
	case CreateImageRequestSize1024x1024:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageRequestSize) UnmarshalText(data []byte) error {
	switch CreateImageRequestSize(data) {
	case CreateImageRequestSize256x256:
		*s = CreateImageRequestSize256x256
		return nil
	case CreateImageRequestSize512x512:
		*s = CreateImageRequestSize512x512
		return nil
	case CreateImageRequestSize1024x1024:
		*s = CreateImageRequestSize1024x1024
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateImageVariationRequest
type CreateImageVariationRequestMultipart struct {
	// The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and
	// square.
	Image ht.MultipartFile `json:"image"`
	// The number of images to generate. Must be between 1 and 10.
	N OptNilInt `json:"n"`
	// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
	Size OptNilCreateImageVariationRequestMultipartSize `json:"size"`
	// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
	ResponseFormat OptNilCreateImageVariationRequestMultipartResponseFormat `json:"response_format"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetImage returns the value of Image.
func (s *CreateImageVariationRequestMultipart) GetImage() ht.MultipartFile {
	return s.Image
}

// GetN returns the value of N.
func (s *CreateImageVariationRequestMultipart) GetN() OptNilInt {
	return s.N
}

// GetSize returns the value of Size.
func (s *CreateImageVariationRequestMultipart) GetSize() OptNilCreateImageVariationRequestMultipartSize {
	return s.Size
}

// GetResponseFormat returns the value of ResponseFormat.
func (s *CreateImageVariationRequestMultipart) GetResponseFormat() OptNilCreateImageVariationRequestMultipartResponseFormat {
	return s.ResponseFormat
}

// GetUser returns the value of User.
func (s *CreateImageVariationRequestMultipart) GetUser() OptString {
	return s.User
}

// SetImage sets the value of Image.
func (s *CreateImageVariationRequestMultipart) SetImage(val ht.MultipartFile) {
	s.Image = val
}

// SetN sets the value of N.
func (s *CreateImageVariationRequestMultipart) SetN(val OptNilInt) {
	s.N = val
}

// SetSize sets the value of Size.
func (s *CreateImageVariationRequestMultipart) SetSize(val OptNilCreateImageVariationRequestMultipartSize) {
	s.Size = val
}

// SetResponseFormat sets the value of ResponseFormat.
func (s *CreateImageVariationRequestMultipart) SetResponseFormat(val OptNilCreateImageVariationRequestMultipartResponseFormat) {
	s.ResponseFormat = val
}

// SetUser sets the value of User.
func (s *CreateImageVariationRequestMultipart) SetUser(val OptString) {
	s.User = val
}

// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
type CreateImageVariationRequestMultipartResponseFormat string

const (
	CreateImageVariationRequestMultipartResponseFormatURL     CreateImageVariationRequestMultipartResponseFormat = "url"
	CreateImageVariationRequestMultipartResponseFormatB64JSON CreateImageVariationRequestMultipartResponseFormat = "b64_json"
)

// AllValues returns all CreateImageVariationRequestMultipartResponseFormat values.
func (CreateImageVariationRequestMultipartResponseFormat) AllValues() []CreateImageVariationRequestMultipartResponseFormat {
	return []CreateImageVariationRequestMultipartResponseFormat{
		CreateImageVariationRequestMultipartResponseFormatURL,
		CreateImageVariationRequestMultipartResponseFormatB64JSON,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageVariationRequestMultipartResponseFormat) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageVariationRequestMultipartResponseFormatURL:
		return []byte(s), nil
	case CreateImageVariationRequestMultipartResponseFormatB64JSON:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageVariationRequestMultipartResponseFormat) UnmarshalText(data []byte) error {
	switch CreateImageVariationRequestMultipartResponseFormat(data) {
	case CreateImageVariationRequestMultipartResponseFormatURL:
		*s = CreateImageVariationRequestMultipartResponseFormatURL
		return nil
	case CreateImageVariationRequestMultipartResponseFormatB64JSON:
		*s = CreateImageVariationRequestMultipartResponseFormatB64JSON
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
type CreateImageVariationRequestMultipartSize string

const (
	CreateImageVariationRequestMultipartSize256x256   CreateImageVariationRequestMultipartSize = "256x256"
	CreateImageVariationRequestMultipartSize512x512   CreateImageVariationRequestMultipartSize = "512x512"
	CreateImageVariationRequestMultipartSize1024x1024 CreateImageVariationRequestMultipartSize = "1024x1024"
)

// AllValues returns all CreateImageVariationRequestMultipartSize values.
func (CreateImageVariationRequestMultipartSize) AllValues() []CreateImageVariationRequestMultipartSize {
	return []CreateImageVariationRequestMultipartSize{
		CreateImageVariationRequestMultipartSize256x256,
		CreateImageVariationRequestMultipartSize512x512,
		CreateImageVariationRequestMultipartSize1024x1024,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageVariationRequestMultipartSize) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageVariationRequestMultipartSize256x256:
		return []byte(s), nil
	case CreateImageVariationRequestMultipartSize512x512:
		return []byte(s), nil
	case CreateImageVariationRequestMultipartSize1024x1024:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageVariationRequestMultipartSize) UnmarshalText(data []byte) error {
	switch CreateImageVariationRequestMultipartSize(data) {
	case CreateImageVariationRequestMultipartSize256x256:
		*s = CreateImageVariationRequestMultipartSize256x256
		return nil
	case CreateImageVariationRequestMultipartSize512x512:
		*s = CreateImageVariationRequestMultipartSize512x512
		return nil
	case CreateImageVariationRequestMultipartSize1024x1024:
		*s = CreateImageVariationRequestMultipartSize1024x1024
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateModerationRequest
type CreateModerationRequest struct {
	// The input text to classify.
	Input CreateModerationRequestInput `json:"input"`
	// Two content moderations models are available: `text-moderation-stable` and
	// `text-moderation-latest`.
	// The default is `text-moderation-latest` which will be automatically upgraded over time. This
	// ensures you are always using our most accurate model. If you use `text-moderation-stable`, we will
	// provide advanced notice before updating the model. Accuracy of `text-moderation-stable` may be
	// slightly lower than for `text-moderation-latest`.
	Model OptString `json:"model"`
}

// GetInput returns the value of Input.
func (s *CreateModerationRequest) GetInput() CreateModerationRequestInput {
	return s.Input
}

// GetModel returns the value of Model.
func (s *CreateModerationRequest) GetModel() OptString {
	return s.Model
}

// SetInput sets the value of Input.
func (s *CreateModerationRequest) SetInput(val CreateModerationRequestInput) {
	s.Input = val
}

// SetModel sets the value of Model.
func (s *CreateModerationRequest) SetModel(val OptString) {
	s.Model = val
}

// The input text to classify.
// CreateModerationRequestInput represents sum type.
type CreateModerationRequestInput struct {
	Type        CreateModerationRequestInputType // switch on this field
	String      string
	StringArray []string
}

// CreateModerationRequestInputType is oneOf type of CreateModerationRequestInput.
type CreateModerationRequestInputType string

// Possible values for CreateModerationRequestInputType.
const (
	StringCreateModerationRequestInput      CreateModerationRequestInputType = "string"
	StringArrayCreateModerationRequestInput CreateModerationRequestInputType = "[]string"
)

// IsString reports whether CreateModerationRequestInput is string.
func (s CreateModerationRequestInput) IsString() bool {
	return s.Type == StringCreateModerationRequestInput
}

// IsStringArray reports whether CreateModerationRequestInput is []string.
func (s CreateModerationRequestInput) IsStringArray() bool {
	return s.Type == StringArrayCreateModerationRequestInput
}

// SetString sets CreateModerationRequestInput to string.
func (s *CreateModerationRequestInput) SetString(v string) {
	s.Type = StringCreateModerationRequestInput
	s.String = v
}

// GetString returns string and true boolean if CreateModerationRequestInput is string.
func (s CreateModerationRequestInput) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringCreateModerationRequestInput returns new CreateModerationRequestInput from string.
func NewStringCreateModerationRequestInput(v string) CreateModerationRequestInput {
	var s CreateModerationRequestInput
	s.SetString(v)
	return s
}

// SetStringArray sets CreateModerationRequestInput to []string.
func (s *CreateModerationRequestInput) SetStringArray(v []string) {
	s.Type = StringArrayCreateModerationRequestInput
	s.StringArray = v
}

// GetStringArray returns []string and true boolean if CreateModerationRequestInput is []string.
func (s CreateModerationRequestInput) GetStringArray() (v []string, ok bool) {
	if !s.IsStringArray() {
		return v, false
	}
	return s.StringArray, true
}

// NewStringArrayCreateModerationRequestInput returns new CreateModerationRequestInput from []string.
func NewStringArrayCreateModerationRequestInput(v []string) CreateModerationRequestInput {
	var s CreateModerationRequestInput
	s.SetStringArray(v)
	return s
}

// Ref: #/components/schemas/CreateModerationResponse
type CreateModerationResponse struct {
	ID      string                                `json:"id"`
	Model   string                                `json:"model"`
	Results []CreateModerationResponseResultsItem `json:"results"`
}

// GetID returns the value of ID.
func (s *CreateModerationResponse) GetID() string {
	return s.ID
}

// GetModel returns the value of Model.
func (s *CreateModerationResponse) GetModel() string {
	return s.Model
}

// GetResults returns the value of Results.
func (s *CreateModerationResponse) GetResults() []CreateModerationResponseResultsItem {
	return s.Results
}

// SetID sets the value of ID.
func (s *CreateModerationResponse) SetID(val string) {
	s.ID = val
}

// SetModel sets the value of Model.
func (s *CreateModerationResponse) SetModel(val string) {
	s.Model = val
}

// SetResults sets the value of Results.
func (s *CreateModerationResponse) SetResults(val []CreateModerationResponseResultsItem) {
	s.Results = val
}

type CreateModerationResponseResultsItem struct {
	Flagged        bool                                              `json:"flagged"`
	Categories     CreateModerationResponseResultsItemCategories     `json:"categories"`
	CategoryScores CreateModerationResponseResultsItemCategoryScores `json:"category_scores"`
}

// GetFlagged returns the value of Flagged.
func (s *CreateModerationResponseResultsItem) GetFlagged() bool {
	return s.Flagged
}

// GetCategories returns the value of Categories.
func (s *CreateModerationResponseResultsItem) GetCategories() CreateModerationResponseResultsItemCategories {
	return s.Categories
}

// GetCategoryScores returns the value of CategoryScores.
func (s *CreateModerationResponseResultsItem) GetCategoryScores() CreateModerationResponseResultsItemCategoryScores {
	return s.CategoryScores
}

// SetFlagged sets the value of Flagged.
func (s *CreateModerationResponseResultsItem) SetFlagged(val bool) {
	s.Flagged = val
}

// SetCategories sets the value of Categories.
func (s *CreateModerationResponseResultsItem) SetCategories(val CreateModerationResponseResultsItemCategories) {
	s.Categories = val
}

// SetCategoryScores sets the value of CategoryScores.
func (s *CreateModerationResponseResultsItem) SetCategoryScores(val CreateModerationResponseResultsItemCategoryScores) {
	s.CategoryScores = val
}

type CreateModerationResponseResultsItemCategories struct {
	Hate                 bool `json:"hate"`
	HateSlashThreatening bool `json:"hate/threatening"`
	SelfMinusHarm        bool `json:"self-harm"`
	Sexual               bool `json:"sexual"`
	SexualSlashMinors    bool `json:"sexual/minors"`
	Violence             bool `json:"violence"`
	ViolenceSlashGraphic bool `json:"violence/graphic"`
}

// GetHate returns the value of Hate.
func (s *CreateModerationResponseResultsItemCategories) GetHate() bool {
	return s.Hate
}

// GetHateSlashThreatening returns the value of HateSlashThreatening.
func (s *CreateModerationResponseResultsItemCategories) GetHateSlashThreatening() bool {
	return s.HateSlashThreatening
}

// GetSelfMinusHarm returns the value of SelfMinusHarm.
func (s *CreateModerationResponseResultsItemCategories) GetSelfMinusHarm() bool {
	return s.SelfMinusHarm
}

// GetSexual returns the value of Sexual.
func (s *CreateModerationResponseResultsItemCategories) GetSexual() bool {
	return s.Sexual
}

// GetSexualSlashMinors returns the value of SexualSlashMinors.
func (s *CreateModerationResponseResultsItemCategories) GetSexualSlashMinors() bool {
	return s.SexualSlashMinors
}

// GetViolence returns the value of Violence.
func (s *CreateModerationResponseResultsItemCategories) GetViolence() bool {
	return s.Violence
}

// GetViolenceSlashGraphic returns the value of ViolenceSlashGraphic.
func (s *CreateModerationResponseResultsItemCategories) GetViolenceSlashGraphic() bool {
	return s.ViolenceSlashGraphic
}

// SetHate sets the value of Hate.
func (s *CreateModerationResponseResultsItemCategories) SetHate(val bool) {
	s.Hate = val
}

// SetHateSlashThreatening sets the value of HateSlashThreatening.
func (s *CreateModerationResponseResultsItemCategories) SetHateSlashThreatening(val bool) {
	s.HateSlashThreatening = val
}

// SetSelfMinusHarm sets the value of SelfMinusHarm.
func (s *CreateModerationResponseResultsItemCategories) SetSelfMinusHarm(val bool) {
	s.SelfMinusHarm = val
}

// SetSexual sets the value of Sexual.
func (s *CreateModerationResponseResultsItemCategories) SetSexual(val bool) {
	s.Sexual = val
}

// SetSexualSlashMinors sets the value of SexualSlashMinors.
func (s *CreateModerationResponseResultsItemCategories) SetSexualSlashMinors(val bool) {
	s.SexualSlashMinors = val
}

// SetViolence sets the value of Violence.
func (s *CreateModerationResponseResultsItemCategories) SetViolence(val bool) {
	s.Violence = val
}

// SetViolenceSlashGraphic sets the value of ViolenceSlashGraphic.
func (s *CreateModerationResponseResultsItemCategories) SetViolenceSlashGraphic(val bool) {
	s.ViolenceSlashGraphic = val
}

type CreateModerationResponseResultsItemCategoryScores struct {
	Hate                 float64 `json:"hate"`
	HateSlashThreatening float64 `json:"hate/threatening"`
	SelfMinusHarm        float64 `json:"self-harm"`
	Sexual               float64 `json:"sexual"`
	SexualSlashMinors    float64 `json:"sexual/minors"`
	Violence             float64 `json:"violence"`
	ViolenceSlashGraphic float64 `json:"violence/graphic"`
}

// GetHate returns the value of Hate.
func (s *CreateModerationResponseResultsItemCategoryScores) GetHate() float64 {
	return s.Hate
}

// GetHateSlashThreatening returns the value of HateSlashThreatening.
func (s *CreateModerationResponseResultsItemCategoryScores) GetHateSlashThreatening() float64 {
	return s.HateSlashThreatening
}

// GetSelfMinusHarm returns the value of SelfMinusHarm.
func (s *CreateModerationResponseResultsItemCategoryScores) GetSelfMinusHarm() float64 {
	return s.SelfMinusHarm
}

// GetSexual returns the value of Sexual.
func (s *CreateModerationResponseResultsItemCategoryScores) GetSexual() float64 {
	return s.Sexual
}

// GetSexualSlashMinors returns the value of SexualSlashMinors.
func (s *CreateModerationResponseResultsItemCategoryScores) GetSexualSlashMinors() float64 {
	return s.SexualSlashMinors
}

// GetViolence returns the value of Violence.
func (s *CreateModerationResponseResultsItemCategoryScores) GetViolence() float64 {
	return s.Violence
}

// GetViolenceSlashGraphic returns the value of ViolenceSlashGraphic.
func (s *CreateModerationResponseResultsItemCategoryScores) GetViolenceSlashGraphic() float64 {
	return s.ViolenceSlashGraphic
}

// SetHate sets the value of Hate.
func (s *CreateModerationResponseResultsItemCategoryScores) SetHate(val float64) {
	s.Hate = val
}

// SetHateSlashThreatening sets the value of HateSlashThreatening.
func (s *CreateModerationResponseResultsItemCategoryScores) SetHateSlashThreatening(val float64) {
	s.HateSlashThreatening = val
}

// SetSelfMinusHarm sets the value of SelfMinusHarm.
func (s *CreateModerationResponseResultsItemCategoryScores) SetSelfMinusHarm(val float64) {
	s.SelfMinusHarm = val
}

// SetSexual sets the value of Sexual.
func (s *CreateModerationResponseResultsItemCategoryScores) SetSexual(val float64) {
	s.Sexual = val
}

// SetSexualSlashMinors sets the value of SexualSlashMinors.
func (s *CreateModerationResponseResultsItemCategoryScores) SetSexualSlashMinors(val float64) {
	s.SexualSlashMinors = val
}

// SetViolence sets the value of Violence.
func (s *CreateModerationResponseResultsItemCategoryScores) SetViolence(val float64) {
	s.Violence = val
}

// SetViolenceSlashGraphic sets the value of ViolenceSlashGraphic.
func (s *CreateModerationResponseResultsItemCategoryScores) SetViolenceSlashGraphic(val float64) {
	s.ViolenceSlashGraphic = val
}

// Ref: #/components/schemas/CreateSearchRequest
type CreateSearchRequest struct {
	// Query to search against the documents.
	Query string `json:"query"`
	// Up to 200 documents to search over, provided as a list of strings.
	// The maximum document length (in tokens) is 2034 minus the number of tokens in the query.
	// You should specify either `documents` or a `file`, but not both.
	Documents OptNilStringArray `json:"documents"`
	// The ID of an uploaded file that contains documents to search over.
	// You should specify either `documents` or a `file`, but not both.
	File OptNilString `json:"file"`
	// The maximum number of documents to be re-ranked and returned by search.
	// This flag only takes effect when `file` is set.
	MaxRerank OptNilInt `json:"max_rerank"`
	// A special boolean flag for showing metadata. If set to `true`, each document entry in the returned
	// JSON will contain a "metadata" field.
	// This flag only takes effect when `file` is set.
	ReturnMetadata OptNilBool `json:"return_metadata"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetQuery returns the value of Query.
func (s *CreateSearchRequest) GetQuery() string {
	return s.Query
}

// GetDocuments returns the value of Documents.
func (s *CreateSearchRequest) GetDocuments() OptNilStringArray {
	return s.Documents
}

// GetFile returns the value of File.
func (s *CreateSearchRequest) GetFile() OptNilString {
	return s.File
}

// GetMaxRerank returns the value of MaxRerank.
func (s *CreateSearchRequest) GetMaxRerank() OptNilInt {
	return s.MaxRerank
}

// GetReturnMetadata returns the value of ReturnMetadata.
func (s *CreateSearchRequest) GetReturnMetadata() OptNilBool {
	return s.ReturnMetadata
}

// GetUser returns the value of User.
func (s *CreateSearchRequest) GetUser() OptString {
	return s.User
}

// SetQuery sets the value of Query.
func (s *CreateSearchRequest) SetQuery(val string) {
	s.Query = val
}

// SetDocuments sets the value of Documents.
func (s *CreateSearchRequest) SetDocuments(val OptNilStringArray) {
	s.Documents = val
}

// SetFile sets the value of File.
func (s *CreateSearchRequest) SetFile(val OptNilString) {
	s.File = val
}

// SetMaxRerank sets the value of MaxRerank.
func (s *CreateSearchRequest) SetMaxRerank(val OptNilInt) {
	s.MaxRerank = val
}

// SetReturnMetadata sets the value of ReturnMetadata.
func (s *CreateSearchRequest) SetReturnMetadata(val OptNilBool) {
	s.ReturnMetadata = val
}

// SetUser sets the value of User.
func (s *CreateSearchRequest) SetUser(val OptString) {
	s.User = val
}

// Ref: #/components/schemas/CreateSearchResponse
type CreateSearchResponse struct {
	Object OptString                      `json:"object"`
	Model  OptString                      `json:"model"`
	Data   []CreateSearchResponseDataItem `json:"data"`
}

// GetObject returns the value of Object.
func (s *CreateSearchResponse) GetObject() OptString {
	return s.Object
}

// GetModel returns the value of Model.
func (s *CreateSearchResponse) GetModel() OptString {
	return s.Model
}

// GetData returns the value of Data.
func (s *CreateSearchResponse) GetData() []CreateSearchResponseDataItem {
	return s.Data
}

// SetObject sets the value of Object.
func (s *CreateSearchResponse) SetObject(val OptString) {
	s.Object = val
}

// SetModel sets the value of Model.
func (s *CreateSearchResponse) SetModel(val OptString) {
	s.Model = val
}

// SetData sets the value of Data.
func (s *CreateSearchResponse) SetData(val []CreateSearchResponseDataItem) {
	s.Data = val
}

type CreateSearchResponseDataItem struct {
	Object   OptString  `json:"object"`
	Document OptInt     `json:"document"`
	Score    OptFloat64 `json:"score"`
}

// GetObject returns the value of Object.
func (s *CreateSearchResponseDataItem) GetObject() OptString {
	return s.Object
}

// GetDocument returns the value of Document.
func (s *CreateSearchResponseDataItem) GetDocument() OptInt {
	return s.Document
}

// GetScore returns the value of Score.
func (s *CreateSearchResponseDataItem) GetScore() OptFloat64 {
	return s.Score
}

// SetObject sets the value of Object.
func (s *CreateSearchResponseDataItem) SetObject(val OptString) {
	s.Object = val
}

// SetDocument sets the value of Document.
func (s *CreateSearchResponseDataItem) SetDocument(val OptInt) {
	s.Document = val
}

// SetScore sets the value of Score.
func (s *CreateSearchResponseDataItem) SetScore(val OptFloat64) {
	s.Score = val
}

// Ref: #/components/schemas/CreateTranscriptionRequest
type CreateTranscriptionRequestMultipart struct {
	// The audio file to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.
	File ht.MultipartFile `json:"file"`
	// ID of the model to use. Only `whisper-1` is currently available.
	Model string `json:"model"`
	// An optional text to guide the model's style or continue a previous audio segment. The
	// [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.
	Prompt OptString `json:"prompt"`
	// The format of the transcript output, in one of these options: json, text, srt, verbose_json, or
	// vtt.
	ResponseFormat OptString `json:"response_format"`
	// The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random,
	//  while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model
	// will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically
	// increase the temperature until certain thresholds are hit.
	Temperature OptFloat64 `json:"temperature"`
	// The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.
	// org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.
	Language OptString `json:"language"`
}

// GetFile returns the value of File.
func (s *CreateTranscriptionRequestMultipart) GetFile() ht.MultipartFile {
	return s.File
}

// GetModel returns the value of Model.
func (s *CreateTranscriptionRequestMultipart) GetModel() string {
	return s.Model
}

// GetPrompt returns the value of Prompt.
func (s *CreateTranscriptionRequestMultipart) GetPrompt() OptString {
	return s.Prompt
}

// GetResponseFormat returns the value of ResponseFormat.
func (s *CreateTranscriptionRequestMultipart) GetResponseFormat() OptString {
	return s.ResponseFormat
}

// GetTemperature returns the value of Temperature.
func (s *CreateTranscriptionRequestMultipart) GetTemperature() OptFloat64 {
	return s.Temperature
}

// GetLanguage returns the value of Language.
func (s *CreateTranscriptionRequestMultipart) GetLanguage() OptString {
	return s.Language
}

// SetFile sets the value of File.
func (s *CreateTranscriptionRequestMultipart) SetFile(val ht.MultipartFile) {
	s.File = val
}

// SetModel sets the value of Model.
func (s *CreateTranscriptionRequestMultipart) SetModel(val string) {
	s.Model = val
}

// SetPrompt sets the value of Prompt.
func (s *CreateTranscriptionRequestMultipart) SetPrompt(val OptString) {
	s.Prompt = val
}

// SetResponseFormat sets the value of ResponseFormat.
func (s *CreateTranscriptionRequestMultipart) SetResponseFormat(val OptString) {
	s.ResponseFormat = val
}

// SetTemperature sets the value of Temperature.
func (s *CreateTranscriptionRequestMultipart) SetTemperature(val OptFloat64) {
	s.Temperature = val
}

// SetLanguage sets the value of Language.
func (s *CreateTranscriptionRequestMultipart) SetLanguage(val OptString) {
	s.Language = val
}

// Ref: #/components/schemas/CreateTranscriptionResponse
type CreateTranscriptionResponse struct {
	Text string `json:"text"`
}

// GetText returns the value of Text.
func (s *CreateTranscriptionResponse) GetText() string {
	return s.Text
}

// SetText sets the value of Text.
func (s *CreateTranscriptionResponse) SetText(val string) {
	s.Text = val
}

// Ref: #/components/schemas/CreateTranslationRequest
type CreateTranslationRequestMultipart struct {
	// The audio file to translate, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.
	File ht.MultipartFile `json:"file"`
	// ID of the model to use. Only `whisper-1` is currently available.
	Model string `json:"model"`
	// An optional text to guide the model's style or continue a previous audio segment. The
	// [prompt](/docs/guides/speech-to-text/prompting) should be in English.
	Prompt OptString `json:"prompt"`
	// The format of the transcript output, in one of these options: json, text, srt, verbose_json, or
	// vtt.
	ResponseFormat OptString `json:"response_format"`
	// The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random,
	//  while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model
	// will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically
	// increase the temperature until certain thresholds are hit.
	Temperature OptFloat64 `json:"temperature"`
}

// GetFile returns the value of File.
func (s *CreateTranslationRequestMultipart) GetFile() ht.MultipartFile {
	return s.File
}

// GetModel returns the value of Model.
func (s *CreateTranslationRequestMultipart) GetModel() string {
	return s.Model
}

// GetPrompt returns the value of Prompt.
func (s *CreateTranslationRequestMultipart) GetPrompt() OptString {
	return s.Prompt
}

// GetResponseFormat returns the value of ResponseFormat.
func (s *CreateTranslationRequestMultipart) GetResponseFormat() OptString {
	return s.ResponseFormat
}

// GetTemperature returns the value of Temperature.
func (s *CreateTranslationRequestMultipart) GetTemperature() OptFloat64 {
	return s.Temperature
}

// SetFile sets the value of File.
func (s *CreateTranslationRequestMultipart) SetFile(val ht.MultipartFile) {
	s.File = val
}

// SetModel sets the value of Model.
func (s *CreateTranslationRequestMultipart) SetModel(val string) {
	s.Model = val
}

// SetPrompt sets the value of Prompt.
func (s *CreateTranslationRequestMultipart) SetPrompt(val OptString) {
	s.Prompt = val
}

// SetResponseFormat sets the value of ResponseFormat.
func (s *CreateTranslationRequestMultipart) SetResponseFormat(val OptString) {
	s.ResponseFormat = val
}

// SetTemperature sets the value of Temperature.
func (s *CreateTranslationRequestMultipart) SetTemperature(val OptFloat64) {
	s.Temperature = val
}

// Ref: #/components/schemas/CreateTranslationResponse
type CreateTranslationResponse struct {
	Text string `json:"text"`
}

// GetText returns the value of Text.
func (s *CreateTranslationResponse) GetText() string {
	return s.Text
}

// SetText sets the value of Text.
func (s *CreateTranslationResponse) SetText(val string) {
	s.Text = val
}

// Ref: #/components/schemas/DeleteFileResponse
type DeleteFileResponse struct {
	ID      string `json:"id"`
	Object  string `json:"object"`
	Deleted bool   `json:"deleted"`
}

// GetID returns the value of ID.
func (s *DeleteFileResponse) GetID() string {
	return s.ID
}

// GetObject returns the value of Object.
func (s *DeleteFileResponse) GetObject() string {
	return s.Object
}

// GetDeleted returns the value of Deleted.
func (s *DeleteFileResponse) GetDeleted() bool {
	return s.Deleted
}

// SetID sets the value of ID.
func (s *DeleteFileResponse) SetID(val string) {
	s.ID = val
}

// SetObject sets the value of Object.
func (s *DeleteFileResponse) SetObject(val string) {
	s.Object = val
}

// SetDeleted sets the value of Deleted.
func (s *DeleteFileResponse) SetDeleted(val bool) {
	s.Deleted = val
}

// Ref: #/components/schemas/DeleteModelResponse
type DeleteModelResponse struct {
	ID      string `json:"id"`
	Object  string `json:"object"`
	Deleted bool   `json:"deleted"`
}

// GetID returns the value of ID.
func (s *DeleteModelResponse) GetID() string {
	return s.ID
}

// GetObject returns the value of Object.
func (s *DeleteModelResponse) GetObject() string {
	return s.Object
}

// GetDeleted returns the value of Deleted.
func (s *DeleteModelResponse) GetDeleted() bool {
	return s.Deleted
}

// SetID sets the value of ID.
func (s *DeleteModelResponse) SetID(val string) {
	s.ID = val
}

// SetObject sets the value of Object.
func (s *DeleteModelResponse) SetObject(val string) {
	s.Object = val
}

// SetDeleted sets the value of Deleted.
func (s *DeleteModelResponse) SetDeleted(val bool) {
	s.Deleted = val
}

type Engine jx.Raw

type FineTune jx.Raw

type FineTuneEvent jx.Raw

type ImagesResponse jx.Raw

// Ref: #/components/schemas/ListEnginesResponse
type ListEnginesResponse struct {
	Object string   `json:"object"`
	Data   []Engine `json:"data"`
}

// GetObject returns the value of Object.
func (s *ListEnginesResponse) GetObject() string {
	return s.Object
}

// GetData returns the value of Data.
func (s *ListEnginesResponse) GetData() []Engine {
	return s.Data
}

// SetObject sets the value of Object.
func (s *ListEnginesResponse) SetObject(val string) {
	s.Object = val
}

// SetData sets the value of Data.
func (s *ListEnginesResponse) SetData(val []Engine) {
	s.Data = val
}

// Ref: #/components/schemas/ListFilesResponse
type ListFilesResponse struct {
	Object string       `json:"object"`
	Data   []OpenAIFile `json:"data"`
}

// GetObject returns the value of Object.
func (s *ListFilesResponse) GetObject() string {
	return s.Object
}

// GetData returns the value of Data.
func (s *ListFilesResponse) GetData() []OpenAIFile {
	return s.Data
}

// SetObject sets the value of Object.
func (s *ListFilesResponse) SetObject(val string) {
	s.Object = val
}

// SetData sets the value of Data.
func (s *ListFilesResponse) SetData(val []OpenAIFile) {
	s.Data = val
}

// Ref: #/components/schemas/ListFineTuneEventsResponse
type ListFineTuneEventsResponse struct {
	Object string          `json:"object"`
	Data   []FineTuneEvent `json:"data"`
}

// GetObject returns the value of Object.
func (s *ListFineTuneEventsResponse) GetObject() string {
	return s.Object
}

// GetData returns the value of Data.
func (s *ListFineTuneEventsResponse) GetData() []FineTuneEvent {
	return s.Data
}

// SetObject sets the value of Object.
func (s *ListFineTuneEventsResponse) SetObject(val string) {
	s.Object = val
}

// SetData sets the value of Data.
func (s *ListFineTuneEventsResponse) SetData(val []FineTuneEvent) {
	s.Data = val
}

// Ref: #/components/schemas/ListFineTunesResponse
type ListFineTunesResponse struct {
	Object string     `json:"object"`
	Data   []FineTune `json:"data"`
}

// GetObject returns the value of Object.
func (s *ListFineTunesResponse) GetObject() string {
	return s.Object
}

// GetData returns the value of Data.
func (s *ListFineTunesResponse) GetData() []FineTune {
	return s.Data
}

// SetObject sets the value of Object.
func (s *ListFineTunesResponse) SetObject(val string) {
	s.Object = val
}

// SetData sets the value of Data.
func (s *ListFineTunesResponse) SetData(val []FineTune) {
	s.Data = val
}

// Ref: #/components/schemas/ListModelsResponse
type ListModelsResponse struct {
	Object string  `json:"object"`
	Data   []Model `json:"data"`
}

// GetObject returns the value of Object.
func (s *ListModelsResponse) GetObject() string {
	return s.Object
}

// GetData returns the value of Data.
func (s *ListModelsResponse) GetData() []Model {
	return s.Data
}

// SetObject sets the value of Object.
func (s *ListModelsResponse) SetObject(val string) {
	s.Object = val
}

// SetData sets the value of Data.
func (s *ListModelsResponse) SetData(val []Model) {
	s.Data = val
}

type Model jx.Raw

type OpenAIFile jx.Raw

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptChatCompletionResponseMessage returns new OptChatCompletionResponseMessage with value set to v.
func NewOptChatCompletionResponseMessage(v ChatCompletionResponseMessage) OptChatCompletionResponseMessage {
	return OptChatCompletionResponseMessage{
		Value: v,
		Set:   true,
	}
}

// OptChatCompletionResponseMessage is optional ChatCompletionResponseMessage.
type OptChatCompletionResponseMessage struct {
	Value ChatCompletionResponseMessage
	Set   bool
}

// IsSet returns true if OptChatCompletionResponseMessage was set.
func (o OptChatCompletionResponseMessage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChatCompletionResponseMessage) Reset() {
	var v ChatCompletionResponseMessage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChatCompletionResponseMessage) SetTo(v ChatCompletionResponseMessage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChatCompletionResponseMessage) Get() (v ChatCompletionResponseMessage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptChatCompletionResponseMessage) Or(d ChatCompletionResponseMessage) ChatCompletionResponseMessage {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateAnswerRequestLogitBias returns new OptCreateAnswerRequestLogitBias with value set to v.
func NewOptCreateAnswerRequestLogitBias(v *CreateAnswerRequestLogitBias) OptCreateAnswerRequestLogitBias {
	return OptCreateAnswerRequestLogitBias{
		Value: v,
		Set:   true,
	}
}

// OptCreateAnswerRequestLogitBias is optional *CreateAnswerRequestLogitBias.
type OptCreateAnswerRequestLogitBias struct {
	Value *CreateAnswerRequestLogitBias
	Set   bool
}

// IsSet returns true if OptCreateAnswerRequestLogitBias was set.
func (o OptCreateAnswerRequestLogitBias) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateAnswerRequestLogitBias) Reset() {
	var v *CreateAnswerRequestLogitBias
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateAnswerRequestLogitBias) SetTo(v *CreateAnswerRequestLogitBias) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateAnswerRequestLogitBias) Get() (v *CreateAnswerRequestLogitBias, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateAnswerRequestLogitBias) Or(d *CreateAnswerRequestLogitBias) *CreateAnswerRequestLogitBias {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateChatCompletionRequestLogitBias returns new OptCreateChatCompletionRequestLogitBias with value set to v.
func NewOptCreateChatCompletionRequestLogitBias(v *CreateChatCompletionRequestLogitBias) OptCreateChatCompletionRequestLogitBias {
	return OptCreateChatCompletionRequestLogitBias{
		Value: v,
		Set:   true,
	}
}

// OptCreateChatCompletionRequestLogitBias is optional *CreateChatCompletionRequestLogitBias.
type OptCreateChatCompletionRequestLogitBias struct {
	Value *CreateChatCompletionRequestLogitBias
	Set   bool
}

// IsSet returns true if OptCreateChatCompletionRequestLogitBias was set.
func (o OptCreateChatCompletionRequestLogitBias) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateChatCompletionRequestLogitBias) Reset() {
	var v *CreateChatCompletionRequestLogitBias
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateChatCompletionRequestLogitBias) SetTo(v *CreateChatCompletionRequestLogitBias) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateChatCompletionRequestLogitBias) Get() (v *CreateChatCompletionRequestLogitBias, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateChatCompletionRequestLogitBias) Or(d *CreateChatCompletionRequestLogitBias) *CreateChatCompletionRequestLogitBias {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateChatCompletionResponseUsage returns new OptCreateChatCompletionResponseUsage with value set to v.
func NewOptCreateChatCompletionResponseUsage(v CreateChatCompletionResponseUsage) OptCreateChatCompletionResponseUsage {
	return OptCreateChatCompletionResponseUsage{
		Value: v,
		Set:   true,
	}
}

// OptCreateChatCompletionResponseUsage is optional CreateChatCompletionResponseUsage.
type OptCreateChatCompletionResponseUsage struct {
	Value CreateChatCompletionResponseUsage
	Set   bool
}

// IsSet returns true if OptCreateChatCompletionResponseUsage was set.
func (o OptCreateChatCompletionResponseUsage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateChatCompletionResponseUsage) Reset() {
	var v CreateChatCompletionResponseUsage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateChatCompletionResponseUsage) SetTo(v CreateChatCompletionResponseUsage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateChatCompletionResponseUsage) Get() (v CreateChatCompletionResponseUsage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateChatCompletionResponseUsage) Or(d CreateChatCompletionResponseUsage) CreateChatCompletionResponseUsage {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateClassificationRequestLogitBias returns new OptCreateClassificationRequestLogitBias with value set to v.
func NewOptCreateClassificationRequestLogitBias(v *CreateClassificationRequestLogitBias) OptCreateClassificationRequestLogitBias {
	return OptCreateClassificationRequestLogitBias{
		Value: v,
		Set:   true,
	}
}

// OptCreateClassificationRequestLogitBias is optional *CreateClassificationRequestLogitBias.
type OptCreateClassificationRequestLogitBias struct {
	Value *CreateClassificationRequestLogitBias
	Set   bool
}

// IsSet returns true if OptCreateClassificationRequestLogitBias was set.
func (o OptCreateClassificationRequestLogitBias) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateClassificationRequestLogitBias) Reset() {
	var v *CreateClassificationRequestLogitBias
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateClassificationRequestLogitBias) SetTo(v *CreateClassificationRequestLogitBias) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateClassificationRequestLogitBias) Get() (v *CreateClassificationRequestLogitBias, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateClassificationRequestLogitBias) Or(d *CreateClassificationRequestLogitBias) *CreateClassificationRequestLogitBias {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateCompletionRequestLogitBias returns new OptCreateCompletionRequestLogitBias with value set to v.
func NewOptCreateCompletionRequestLogitBias(v *CreateCompletionRequestLogitBias) OptCreateCompletionRequestLogitBias {
	return OptCreateCompletionRequestLogitBias{
		Value: v,
		Set:   true,
	}
}

// OptCreateCompletionRequestLogitBias is optional *CreateCompletionRequestLogitBias.
type OptCreateCompletionRequestLogitBias struct {
	Value *CreateCompletionRequestLogitBias
	Set   bool
}

// IsSet returns true if OptCreateCompletionRequestLogitBias was set.
func (o OptCreateCompletionRequestLogitBias) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateCompletionRequestLogitBias) Reset() {
	var v *CreateCompletionRequestLogitBias
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateCompletionRequestLogitBias) SetTo(v *CreateCompletionRequestLogitBias) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateCompletionRequestLogitBias) Get() (v *CreateCompletionRequestLogitBias, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateCompletionRequestLogitBias) Or(d *CreateCompletionRequestLogitBias) *CreateCompletionRequestLogitBias {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateCompletionResponseUsage returns new OptCreateCompletionResponseUsage with value set to v.
func NewOptCreateCompletionResponseUsage(v CreateCompletionResponseUsage) OptCreateCompletionResponseUsage {
	return OptCreateCompletionResponseUsage{
		Value: v,
		Set:   true,
	}
}

// OptCreateCompletionResponseUsage is optional CreateCompletionResponseUsage.
type OptCreateCompletionResponseUsage struct {
	Value CreateCompletionResponseUsage
	Set   bool
}

// IsSet returns true if OptCreateCompletionResponseUsage was set.
func (o OptCreateCompletionResponseUsage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateCompletionResponseUsage) Reset() {
	var v CreateCompletionResponseUsage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateCompletionResponseUsage) SetTo(v CreateCompletionResponseUsage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateCompletionResponseUsage) Get() (v CreateCompletionResponseUsage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateCompletionResponseUsage) Or(d CreateCompletionResponseUsage) CreateCompletionResponseUsage {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMultipartFile returns new OptMultipartFile with value set to v.
func NewOptMultipartFile(v ht.MultipartFile) OptMultipartFile {
	return OptMultipartFile{
		Value: v,
		Set:   true,
	}
}

// OptMultipartFile is optional ht.MultipartFile.
type OptMultipartFile struct {
	Value ht.MultipartFile
	Set   bool
}

// IsSet returns true if OptMultipartFile was set.
func (o OptMultipartFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMultipartFile) Reset() {
	var v ht.MultipartFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMultipartFile) SetTo(v ht.MultipartFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMultipartFile) Get() (v ht.MultipartFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMultipartFile) Or(d ht.MultipartFile) ht.MultipartFile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAnyArray returns new OptNilAnyArray with value set to v.
func NewOptNilAnyArray(v []jx.Raw) OptNilAnyArray {
	return OptNilAnyArray{
		Value: v,
		Set:   true,
	}
}

// OptNilAnyArray is optional nullable []jx.Raw.
type OptNilAnyArray struct {
	Value []jx.Raw
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAnyArray was set.
func (o OptNilAnyArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAnyArray) Reset() {
	var v []jx.Raw
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAnyArray) SetTo(v []jx.Raw) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAnyArray) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAnyArray) SetToNull() {
	o.Set = true
	o.Null = true
	var v []jx.Raw
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAnyArray) Get() (v []jx.Raw, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAnyArray) Or(d []jx.Raw) []jx.Raw {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilBool) SetToNull() {
	o.Set = true
	o.Null = true
	var v bool
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateAnswerRequestStop returns new OptNilCreateAnswerRequestStop with value set to v.
func NewOptNilCreateAnswerRequestStop(v CreateAnswerRequestStop) OptNilCreateAnswerRequestStop {
	return OptNilCreateAnswerRequestStop{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateAnswerRequestStop is optional nullable CreateAnswerRequestStop.
type OptNilCreateAnswerRequestStop struct {
	Value CreateAnswerRequestStop
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateAnswerRequestStop was set.
func (o OptNilCreateAnswerRequestStop) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateAnswerRequestStop) Reset() {
	var v CreateAnswerRequestStop
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateAnswerRequestStop) SetTo(v CreateAnswerRequestStop) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateAnswerRequestStop) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateAnswerRequestStop) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateAnswerRequestStop
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateAnswerRequestStop) Get() (v CreateAnswerRequestStop, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateAnswerRequestStop) Or(d CreateAnswerRequestStop) CreateAnswerRequestStop {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateChatCompletionRequestStop returns new OptNilCreateChatCompletionRequestStop with value set to v.
func NewOptNilCreateChatCompletionRequestStop(v CreateChatCompletionRequestStop) OptNilCreateChatCompletionRequestStop {
	return OptNilCreateChatCompletionRequestStop{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateChatCompletionRequestStop is optional nullable CreateChatCompletionRequestStop.
type OptNilCreateChatCompletionRequestStop struct {
	Value CreateChatCompletionRequestStop
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateChatCompletionRequestStop was set.
func (o OptNilCreateChatCompletionRequestStop) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateChatCompletionRequestStop) Reset() {
	var v CreateChatCompletionRequestStop
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateChatCompletionRequestStop) SetTo(v CreateChatCompletionRequestStop) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateChatCompletionRequestStop) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateChatCompletionRequestStop) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateChatCompletionRequestStop
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateChatCompletionRequestStop) Get() (v CreateChatCompletionRequestStop, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateChatCompletionRequestStop) Or(d CreateChatCompletionRequestStop) CreateChatCompletionRequestStop {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateCompletionRequestPrompt returns new OptNilCreateCompletionRequestPrompt with value set to v.
func NewOptNilCreateCompletionRequestPrompt(v CreateCompletionRequestPrompt) OptNilCreateCompletionRequestPrompt {
	return OptNilCreateCompletionRequestPrompt{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateCompletionRequestPrompt is optional nullable CreateCompletionRequestPrompt.
type OptNilCreateCompletionRequestPrompt struct {
	Value CreateCompletionRequestPrompt
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateCompletionRequestPrompt was set.
func (o OptNilCreateCompletionRequestPrompt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateCompletionRequestPrompt) Reset() {
	var v CreateCompletionRequestPrompt
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateCompletionRequestPrompt) SetTo(v CreateCompletionRequestPrompt) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateCompletionRequestPrompt) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateCompletionRequestPrompt) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateCompletionRequestPrompt
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateCompletionRequestPrompt) Get() (v CreateCompletionRequestPrompt, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateCompletionRequestPrompt) Or(d CreateCompletionRequestPrompt) CreateCompletionRequestPrompt {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateCompletionRequestStop returns new OptNilCreateCompletionRequestStop with value set to v.
func NewOptNilCreateCompletionRequestStop(v CreateCompletionRequestStop) OptNilCreateCompletionRequestStop {
	return OptNilCreateCompletionRequestStop{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateCompletionRequestStop is optional nullable CreateCompletionRequestStop.
type OptNilCreateCompletionRequestStop struct {
	Value CreateCompletionRequestStop
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateCompletionRequestStop was set.
func (o OptNilCreateCompletionRequestStop) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateCompletionRequestStop) Reset() {
	var v CreateCompletionRequestStop
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateCompletionRequestStop) SetTo(v CreateCompletionRequestStop) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateCompletionRequestStop) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateCompletionRequestStop) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateCompletionRequestStop
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateCompletionRequestStop) Get() (v CreateCompletionRequestStop, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateCompletionRequestStop) Or(d CreateCompletionRequestStop) CreateCompletionRequestStop {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateCompletionResponseChoicesItemLogprobs returns new OptNilCreateCompletionResponseChoicesItemLogprobs with value set to v.
func NewOptNilCreateCompletionResponseChoicesItemLogprobs(v CreateCompletionResponseChoicesItemLogprobs) OptNilCreateCompletionResponseChoicesItemLogprobs {
	return OptNilCreateCompletionResponseChoicesItemLogprobs{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateCompletionResponseChoicesItemLogprobs is optional nullable CreateCompletionResponseChoicesItemLogprobs.
type OptNilCreateCompletionResponseChoicesItemLogprobs struct {
	Value CreateCompletionResponseChoicesItemLogprobs
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateCompletionResponseChoicesItemLogprobs was set.
func (o OptNilCreateCompletionResponseChoicesItemLogprobs) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateCompletionResponseChoicesItemLogprobs) Reset() {
	var v CreateCompletionResponseChoicesItemLogprobs
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateCompletionResponseChoicesItemLogprobs) SetTo(v CreateCompletionResponseChoicesItemLogprobs) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateCompletionResponseChoicesItemLogprobs) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateCompletionResponseChoicesItemLogprobs) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateCompletionResponseChoicesItemLogprobs
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateCompletionResponseChoicesItemLogprobs) Get() (v CreateCompletionResponseChoicesItemLogprobs, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateCompletionResponseChoicesItemLogprobs) Or(d CreateCompletionResponseChoicesItemLogprobs) CreateCompletionResponseChoicesItemLogprobs {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateEditResponseChoicesItemLogprobs returns new OptNilCreateEditResponseChoicesItemLogprobs with value set to v.
func NewOptNilCreateEditResponseChoicesItemLogprobs(v CreateEditResponseChoicesItemLogprobs) OptNilCreateEditResponseChoicesItemLogprobs {
	return OptNilCreateEditResponseChoicesItemLogprobs{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateEditResponseChoicesItemLogprobs is optional nullable CreateEditResponseChoicesItemLogprobs.
type OptNilCreateEditResponseChoicesItemLogprobs struct {
	Value CreateEditResponseChoicesItemLogprobs
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateEditResponseChoicesItemLogprobs was set.
func (o OptNilCreateEditResponseChoicesItemLogprobs) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateEditResponseChoicesItemLogprobs) Reset() {
	var v CreateEditResponseChoicesItemLogprobs
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateEditResponseChoicesItemLogprobs) SetTo(v CreateEditResponseChoicesItemLogprobs) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateEditResponseChoicesItemLogprobs) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateEditResponseChoicesItemLogprobs) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateEditResponseChoicesItemLogprobs
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateEditResponseChoicesItemLogprobs) Get() (v CreateEditResponseChoicesItemLogprobs, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateEditResponseChoicesItemLogprobs) Or(d CreateEditResponseChoicesItemLogprobs) CreateEditResponseChoicesItemLogprobs {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageEditRequestMultipartResponseFormat returns new OptNilCreateImageEditRequestMultipartResponseFormat with value set to v.
func NewOptNilCreateImageEditRequestMultipartResponseFormat(v CreateImageEditRequestMultipartResponseFormat) OptNilCreateImageEditRequestMultipartResponseFormat {
	return OptNilCreateImageEditRequestMultipartResponseFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageEditRequestMultipartResponseFormat is optional nullable CreateImageEditRequestMultipartResponseFormat.
type OptNilCreateImageEditRequestMultipartResponseFormat struct {
	Value CreateImageEditRequestMultipartResponseFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageEditRequestMultipartResponseFormat was set.
func (o OptNilCreateImageEditRequestMultipartResponseFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageEditRequestMultipartResponseFormat) Reset() {
	var v CreateImageEditRequestMultipartResponseFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageEditRequestMultipartResponseFormat) SetTo(v CreateImageEditRequestMultipartResponseFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateImageEditRequestMultipartResponseFormat) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateImageEditRequestMultipartResponseFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageEditRequestMultipartResponseFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageEditRequestMultipartResponseFormat) Get() (v CreateImageEditRequestMultipartResponseFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageEditRequestMultipartResponseFormat) Or(d CreateImageEditRequestMultipartResponseFormat) CreateImageEditRequestMultipartResponseFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageEditRequestMultipartSize returns new OptNilCreateImageEditRequestMultipartSize with value set to v.
func NewOptNilCreateImageEditRequestMultipartSize(v CreateImageEditRequestMultipartSize) OptNilCreateImageEditRequestMultipartSize {
	return OptNilCreateImageEditRequestMultipartSize{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageEditRequestMultipartSize is optional nullable CreateImageEditRequestMultipartSize.
type OptNilCreateImageEditRequestMultipartSize struct {
	Value CreateImageEditRequestMultipartSize
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageEditRequestMultipartSize was set.
func (o OptNilCreateImageEditRequestMultipartSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageEditRequestMultipartSize) Reset() {
	var v CreateImageEditRequestMultipartSize
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageEditRequestMultipartSize) SetTo(v CreateImageEditRequestMultipartSize) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateImageEditRequestMultipartSize) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateImageEditRequestMultipartSize) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageEditRequestMultipartSize
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageEditRequestMultipartSize) Get() (v CreateImageEditRequestMultipartSize, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageEditRequestMultipartSize) Or(d CreateImageEditRequestMultipartSize) CreateImageEditRequestMultipartSize {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageRequestResponseFormat returns new OptNilCreateImageRequestResponseFormat with value set to v.
func NewOptNilCreateImageRequestResponseFormat(v CreateImageRequestResponseFormat) OptNilCreateImageRequestResponseFormat {
	return OptNilCreateImageRequestResponseFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageRequestResponseFormat is optional nullable CreateImageRequestResponseFormat.
type OptNilCreateImageRequestResponseFormat struct {
	Value CreateImageRequestResponseFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageRequestResponseFormat was set.
func (o OptNilCreateImageRequestResponseFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageRequestResponseFormat) Reset() {
	var v CreateImageRequestResponseFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageRequestResponseFormat) SetTo(v CreateImageRequestResponseFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateImageRequestResponseFormat) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateImageRequestResponseFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageRequestResponseFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageRequestResponseFormat) Get() (v CreateImageRequestResponseFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageRequestResponseFormat) Or(d CreateImageRequestResponseFormat) CreateImageRequestResponseFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageRequestSize returns new OptNilCreateImageRequestSize with value set to v.
func NewOptNilCreateImageRequestSize(v CreateImageRequestSize) OptNilCreateImageRequestSize {
	return OptNilCreateImageRequestSize{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageRequestSize is optional nullable CreateImageRequestSize.
type OptNilCreateImageRequestSize struct {
	Value CreateImageRequestSize
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageRequestSize was set.
func (o OptNilCreateImageRequestSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageRequestSize) Reset() {
	var v CreateImageRequestSize
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageRequestSize) SetTo(v CreateImageRequestSize) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateImageRequestSize) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateImageRequestSize) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageRequestSize
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageRequestSize) Get() (v CreateImageRequestSize, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageRequestSize) Or(d CreateImageRequestSize) CreateImageRequestSize {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageVariationRequestMultipartResponseFormat returns new OptNilCreateImageVariationRequestMultipartResponseFormat with value set to v.
func NewOptNilCreateImageVariationRequestMultipartResponseFormat(v CreateImageVariationRequestMultipartResponseFormat) OptNilCreateImageVariationRequestMultipartResponseFormat {
	return OptNilCreateImageVariationRequestMultipartResponseFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageVariationRequestMultipartResponseFormat is optional nullable CreateImageVariationRequestMultipartResponseFormat.
type OptNilCreateImageVariationRequestMultipartResponseFormat struct {
	Value CreateImageVariationRequestMultipartResponseFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageVariationRequestMultipartResponseFormat was set.
func (o OptNilCreateImageVariationRequestMultipartResponseFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageVariationRequestMultipartResponseFormat) Reset() {
	var v CreateImageVariationRequestMultipartResponseFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageVariationRequestMultipartResponseFormat) SetTo(v CreateImageVariationRequestMultipartResponseFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateImageVariationRequestMultipartResponseFormat) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateImageVariationRequestMultipartResponseFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageVariationRequestMultipartResponseFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageVariationRequestMultipartResponseFormat) Get() (v CreateImageVariationRequestMultipartResponseFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageVariationRequestMultipartResponseFormat) Or(d CreateImageVariationRequestMultipartResponseFormat) CreateImageVariationRequestMultipartResponseFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageVariationRequestMultipartSize returns new OptNilCreateImageVariationRequestMultipartSize with value set to v.
func NewOptNilCreateImageVariationRequestMultipartSize(v CreateImageVariationRequestMultipartSize) OptNilCreateImageVariationRequestMultipartSize {
	return OptNilCreateImageVariationRequestMultipartSize{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageVariationRequestMultipartSize is optional nullable CreateImageVariationRequestMultipartSize.
type OptNilCreateImageVariationRequestMultipartSize struct {
	Value CreateImageVariationRequestMultipartSize
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageVariationRequestMultipartSize was set.
func (o OptNilCreateImageVariationRequestMultipartSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageVariationRequestMultipartSize) Reset() {
	var v CreateImageVariationRequestMultipartSize
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageVariationRequestMultipartSize) SetTo(v CreateImageVariationRequestMultipartSize) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateImageVariationRequestMultipartSize) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateImageVariationRequestMultipartSize) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageVariationRequestMultipartSize
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageVariationRequestMultipartSize) Get() (v CreateImageVariationRequestMultipartSize, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageVariationRequestMultipartSize) Or(d CreateImageVariationRequestMultipartSize) CreateImageVariationRequestMultipartSize {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64 returns new OptNilFloat64 with value set to v.
func NewOptNilFloat64(v float64) OptNilFloat64 {
	return OptNilFloat64{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64 is optional nullable float64.
type OptNilFloat64 struct {
	Value float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64 was set.
func (o OptNilFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64) SetTo(v float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilFloat64) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilFloat64) SetToNull() {
	o.Set = true
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64Array returns new OptNilFloat64Array with value set to v.
func NewOptNilFloat64Array(v []float64) OptNilFloat64Array {
	return OptNilFloat64Array{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64Array is optional nullable []float64.
type OptNilFloat64Array struct {
	Value []float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64Array was set.
func (o OptNilFloat64Array) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64Array) Reset() {
	var v []float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64Array) SetTo(v []float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilFloat64Array) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilFloat64Array) SetToNull() {
	o.Set = true
	o.Null = true
	var v []float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64Array) Get() (v []float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64Array) Or(d []float64) []float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStringArray returns new OptNilStringArray with value set to v.
func NewOptNilStringArray(v []string) OptNilStringArray {
	return OptNilStringArray{
		Value: v,
		Set:   true,
	}
}

// OptNilStringArray is optional nullable []string.
type OptNilStringArray struct {
	Value []string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStringArray was set.
func (o OptNilStringArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStringArray) Reset() {
	var v []string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStringArray) SetTo(v []string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilStringArray) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilStringArray) SetToNull() {
	o.Set = true
	o.Null = true
	var v []string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStringArray) Get() (v []string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStringArray) Or(d []string) []string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStringArrayArray returns new OptNilStringArrayArray with value set to v.
func NewOptNilStringArrayArray(v [][]string) OptNilStringArrayArray {
	return OptNilStringArrayArray{
		Value: v,
		Set:   true,
	}
}

// OptNilStringArrayArray is optional nullable [][]string.
type OptNilStringArrayArray struct {
	Value [][]string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStringArrayArray was set.
func (o OptNilStringArrayArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStringArrayArray) Reset() {
	var v [][]string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStringArrayArray) SetTo(v [][]string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilStringArrayArray) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilStringArrayArray) SetToNull() {
	o.Set = true
	o.Null = true
	var v [][]string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStringArrayArray) Get() (v [][]string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStringArrayArray) Or(d [][]string) [][]string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
